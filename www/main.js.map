{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/charts/chart/chart.component.html","webpack:///./src/app/consumption-result/consumption-result.component.html","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/left-sidebar/left-sidebar.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/metadata-tabs/metadata-tabs.component.html","webpack:///./src/app/metadata/basestation/basestation.component.html","webpack:///./src/app/metadata/basestationchannel/basestationchannel.component.html","webpack:///./src/app/metadata/basestationtype/basestationtype.component.html","webpack:///./src/app/metadata/block/block.component.html","webpack:///./src/app/metadata/building/building.component.html","webpack:///./src/app/metadata/buildingtype/buildingtype.component.html","webpack:///./src/app/metadata/city/city.component.html","webpack:///./src/app/metadata/consumer/consumer.component.html","webpack:///./src/app/metadata/flat/flat.component.html","webpack:///./src/app/metadata/flattype/flattype.component.html","webpack:///./src/app/metadata/inlet/inlet.component.html","webpack:///./src/app/metadata/inlettype/inlettype.component.html","webpack:///./src/app/metadata/metadata.component.html","webpack:///./src/app/metadata/pipetype/pipetype.component.html","webpack:///./src/app/metadata/rtu/rtu.component.html","webpack:///./src/app/reports/blockreport/blockreport.component.html","webpack:///./src/app/reports/buildingreport/buildingreport.component.html","webpack:///./src/app/reports/consumer-report/consumer-report.component.html","webpack:///./src/app/reports/flatreport/flatreport.component.html","webpack:///./src/app/reports/reports.component.html","webpack:///./src/app/reports/rtoreport/rtoreport.component.html","webpack:///./src/app/rolematrix/rolematrix.component.html","webpack:///./src/app/rolesettings/rolebyusers/rolebyusers.component.html","webpack:///./src/app/rolesettings/rolesettings.component.html","webpack:///./src/app/rolesettings/users/users.component.html","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/target-setting/target-by-building/target-by-building.component.html","webpack:///./src/app/target-setting/target-by-flat/target-by-flat.component.html","webpack:///./src/app/target-setting/target-setting.component.html","webpack:///./src/app/target/target.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/authorizepageaccess.service.ts","webpack:///./src/app/charts/chart/chart.component.css","webpack:///./src/app/charts/chart/chart.component.ts","webpack:///./src/app/consumption-result/consumption-result.component.css","webpack:///./src/app/consumption-result/consumption-result.component.ts","webpack:///./src/app/consumption-result/consumption.service.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/globaltoken.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home-service.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/left-sidebar/left-sidebar.component.css","webpack:///./src/app/left-sidebar/left-sidebar.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.model.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/metadata-tabs/metadata-tabs.component.css","webpack:///./src/app/metadata-tabs/metadata-tabs.component.ts","webpack:///./src/app/metadata/basestation/basestation.component.css","webpack:///./src/app/metadata/basestation/basestation.component.ts","webpack:///./src/app/metadata/basestation/basestation.service.ts","webpack:///./src/app/metadata/basestationchannel/basestationchannel.component.css","webpack:///./src/app/metadata/basestationchannel/basestationchannel.component.ts","webpack:///./src/app/metadata/basestationchannel/basestationchannel.service.ts","webpack:///./src/app/metadata/basestationtype/basestationtype.component.css","webpack:///./src/app/metadata/basestationtype/basestationtype.component.ts","webpack:///./src/app/metadata/basestationtype/basestationtype.service.ts","webpack:///./src/app/metadata/block/block.component.css","webpack:///./src/app/metadata/block/block.component.ts","webpack:///./src/app/metadata/block/block.service.ts","webpack:///./src/app/metadata/building/building.component.css","webpack:///./src/app/metadata/building/building.component.ts","webpack:///./src/app/metadata/building/building.service.ts","webpack:///./src/app/metadata/buildingtype/buildingtype.component.css","webpack:///./src/app/metadata/buildingtype/buildingtype.component.ts","webpack:///./src/app/metadata/buildingtype/buildingtype.service.ts","webpack:///./src/app/metadata/city/city.component.css","webpack:///./src/app/metadata/city/city.component.ts","webpack:///./src/app/metadata/city/city.service.ts","webpack:///./src/app/metadata/consumer/consumer.component.css","webpack:///./src/app/metadata/consumer/consumer.component.ts","webpack:///./src/app/metadata/consumer/consumer.service.ts","webpack:///./src/app/metadata/flat/flat.component.css","webpack:///./src/app/metadata/flat/flat.component.ts","webpack:///./src/app/metadata/flat/flat.service.ts","webpack:///./src/app/metadata/flattype/flattype.component.css","webpack:///./src/app/metadata/flattype/flattype.component.ts","webpack:///./src/app/metadata/flattype/flattype.service.ts","webpack:///./src/app/metadata/inlet/inlet.component.css","webpack:///./src/app/metadata/inlet/inlet.component.ts","webpack:///./src/app/metadata/inlet/inlet.service.ts","webpack:///./src/app/metadata/inlettype/inlettype.component.css","webpack:///./src/app/metadata/inlettype/inlettype.component.ts","webpack:///./src/app/metadata/inlettype/inlettype.service.ts","webpack:///./src/app/metadata/metadata.component.css","webpack:///./src/app/metadata/metadata.component.ts","webpack:///./src/app/metadata/pipetype/pipetype.component.css","webpack:///./src/app/metadata/pipetype/pipetype.component.ts","webpack:///./src/app/metadata/pipetype/pipetype.service.ts","webpack:///./src/app/metadata/rtu/rtu.component.css","webpack:///./src/app/metadata/rtu/rtu.component.ts","webpack:///./src/app/metadata/rtu/rtu.service.ts","webpack:///./src/app/reports/blockreport/block-report.service.ts","webpack:///./src/app/reports/blockreport/blockreport.component.css","webpack:///./src/app/reports/blockreport/blockreport.component.ts","webpack:///./src/app/reports/buildingreport/building-report.service.ts","webpack:///./src/app/reports/buildingreport/buildingreport.component.css","webpack:///./src/app/reports/buildingreport/buildingreport.component.ts","webpack:///./src/app/reports/consumer-report/consumer-report.component.css","webpack:///./src/app/reports/consumer-report/consumer-report.component.ts","webpack:///./src/app/reports/consumer-report/consumer-report.service.ts","webpack:///./src/app/reports/flatreport/flat-report.service.ts","webpack:///./src/app/reports/flatreport/flatreport.component.css","webpack:///./src/app/reports/flatreport/flatreport.component.ts","webpack:///./src/app/reports/reports.component.css","webpack:///./src/app/reports/reports.component.ts","webpack:///./src/app/reports/rtoreport/rto-report.service.ts","webpack:///./src/app/reports/rtoreport/rtoreport.component.css","webpack:///./src/app/reports/rtoreport/rtoreport.component.ts","webpack:///./src/app/rolematrix/rolematrix.component.css","webpack:///./src/app/rolematrix/rolematrix.component.ts","webpack:///./src/app/rolematrix/rolematrix.service.ts","webpack:///./src/app/rolesettings/rolebyusers/rolebyusers.component.css","webpack:///./src/app/rolesettings/rolebyusers/rolebyusers.component.ts","webpack:///./src/app/rolesettings/rolebyusers/rolebyusers.service.ts","webpack:///./src/app/rolesettings/rolesetting.module.ts","webpack:///./src/app/rolesettings/rolesettings.component.css","webpack:///./src/app/rolesettings/rolesettings.component.ts","webpack:///./src/app/rolesettings/users/users.component.css","webpack:///./src/app/rolesettings/users/users.component.ts","webpack:///./src/app/rolesettings/users/users.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.service.ts","webpack:///./src/app/target-setting/target-by-building/target-by-building.component.css","webpack:///./src/app/target-setting/target-by-building/target-by-building.component.ts","webpack:///./src/app/target-setting/target-by-building/target-by-building.service.ts","webpack:///./src/app/target-setting/target-by-flat/target-by-flat.component.css","webpack:///./src/app/target-setting/target-by-flat/target-by-flat.component.ts","webpack:///./src/app/target-setting/target-by-flat/target-by-flat.service.ts","webpack:///./src/app/target-setting/target-setting.component.css","webpack:///./src/app/target-setting/target-setting.component.ts","webpack:///./src/app/target/target.component.css","webpack:///./src/app/target/target.component.ts","webpack:///./src/app/target/target.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<p>chart works!</p>\\n\"","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h6 class=\\\"main_heading\\\"> Monthly Consumption Result</h6>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 box-body marginTop2\\\">\\n        <div class=col-md-12>\\n            <div class=\\\"form-group padding_align\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Building</span>\\n                        <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"building_id\\\" class=\\\"form-control\\\">\\n                        <option value=\\\"\\\" disabled >Select Building</option>\\n                        <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of get_building_list\\\" >{{buildingObj.building_name}}</option>\\n                    </select>\\n\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Year</span>\\n                        <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\">\\n                        <option value=\\\"\\\"  >Select Year</option>\\n                       <option value=\\\"2019\\\">2019</option>\\n                       <option value=\\\"2020\\\">2020</option>\\n                       <option value=\\\"2021\\\">2021</option>\\n                       <option value=\\\"2022\\\">2022</option>\\n                       <option value=\\\"2023\\\">2020</option>\\n                       <option value=\\\"2024\\\">2021</option>\\n                       <option value=\\\"2025\\\">2022</option>\\n                    </select>\\n                    </div>\\n\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Month</span>\\n                        <select id=\\\"selectedMonth\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select year\\\" class=\\\"form-control\\\">\\n                        <option value=\\\"\\\" >Select Month</option>\\n                       <option value=\\\"1\\\">Jan</option>\\n                       <option value=\\\"2\\\">Feb</option>\\n                       <option value=\\\"3\\\">Mar</option>\\n                       <option value=\\\"4\\\">Apr</option>\\n                       <option value=\\\"5\\\">May</option>\\n                       <option value=\\\"6\\\">Jun</option>\\n                       <option value=\\\"7\\\">Jul</option>\\n                       <option value=\\\"8\\\">Aug</option>\\n                       <option value=\\\"9\\\">Sep</option>\\n                       <option value=\\\"10\\\">Oct</option>\\n                       <option value=\\\"11\\\">Nov</option>\\n                       <option value=\\\"12\\\">Dec</option>\\n                    </select>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_block_building_report(selectedOption, selectedYear, selectedMonth)\\\">Go</button>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n<section>\\n\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 box\\\">\\n            <button class=\\\"pull-right\\\" (click)=\\\"back_to_block()\\\">Back</button>\\n            <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 400px; display: block;\\\">\\n            </highcharts-chart>\\n        </div>\\n\\n    </div>\\n</section>\\n\\n<section>\\n    <!-- <div class=\\\"col-md-12 margin_top_3em\\\">\\n        <h5>Detail View</h5>\\n    </div> -->\\n    <div class=\\\"col-md-12 marginTop2 \\\">\\n        <div class=\\\"col-md-12 box overflow-x-scroll\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <th>Slno</th>\\n                    <th>Block Name</th>\\n                    <th>Flat Name</th>\\n                    <th>Flat Consumption</th>\\n                    <th>Attached</th>\\n                    <th>Common Bathroom</th>\\n                    <th>Common</th>\\n                    <th>Kitchen</th>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let buildingDetails of block_flat_response_for_table; let i = index\\\">\\n                        <td>{{i+1}}</td>\\n                        <td>\\n                            <span (click)=\\\"getBlockId(buildingDetails)\\\"> {{buildingDetails.block_name}}</span>\\n                        </td>\\n                        <td>{{buildingDetails.flat_name}}</td>\\n                        <td>{{buildingDetails.flat_consumption}}</td>\\n                        <td>{{buildingDetails.attached}}</td>\\n                        <td>{{buildingDetails.common_bathroom}}</td>\\n                        <td>{{buildingDetails.common}}</td>\\n                        <td>{{buildingDetails.kitchen}}</td>\\n\\n                    </tr>\\n\\n\\n                </tbody>\\n            </table>\\n        </div>\\n\\n    </div>\\n</section>\"","module.exports = \"<p>footer works!</p>\\n\"","module.exports = \"<div class=\\\"col-md-12 header\\\">\\n    <span class=\\\"menu-toggle\\\" (click)=\\\"openNav()\\\">&#9776;</span>\\n    <app-left-sidebar></app-left-sidebar>\\n    <span class=\\\"pull-right menu-toggle\\\"><i class=\\\"fa fa-sign-out\\\" (click)=\\\"signOut()\\\" aria-hidden=\\\"true\\\"></i></span>\\n</div>\"","module.exports = \"<app-header>\\n</app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\"> Water Consumption</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12 box-body marginTop2\\\">\\n    <div class=\\\"form-group padding_align\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Building</span>\\n                <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"building\\\" class=\\\"form-control\\\" (change)=\\\"get_rtu_id(selectedOption)\\\">\\n                        <option selected  value=\\\"rtu\\\">Select Building</option>\\n                        <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of getBuildingList\\\" >{{buildingObj.building_name}}</option>\\n                    </select>\\n\\n            </div>\\n            <!-- <div class=\\\"col-md-1\\\">\\n                <div>\\n                    <span class=\\\"span_label\\\">View</span>\\n                </div>\\n\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                    <input  [(ngModel)]=\\\"selectedView\\\"  type=\\\"radio\\\" name=\\\"radios\\\" id=\\\"radios-3\\\" value=\\\"year\\\">\\n                    Year\\n                  </label> &nbsp;\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                    <input  [(ngModel)]=\\\"selectedView\\\"  type=\\\"radio\\\" name=\\\"radios\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                    Month\\n                  </label> &nbsp;\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                <input  [(ngModel)]=\\\"selectedView\\\" type=\\\"radio\\\"  name=\\\"radios\\\" id=\\\"radios-1\\\" value=\\\"day\\\">\\n                Day\\n              </label> &nbsp; &nbsp;\\n            </div> -->\\n\\n            <div class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Year</span>\\n                <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_year(selectedYear)\\\">\\n                        <option [value]=\\\"\\\" selected >Select Year</option>\\n                       <option [value]=\\\"yearobj\\\" *ngFor=\\\"let yearobj of years\\\">{{yearobj}}</option>\\n                    </select>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Month</span>\\n                <select id=\\\"selectedMonth\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_Month(selectedMonth)\\\">\\n                        <option [value]=\\\"\\\" >Select Month</option>\\n                       <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                    </select>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n                <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_block_building_report()\\\">Go</button>\\n            </div>\\n\\n\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row marginTop2\\\">\\n\\n    <div class=\\\"col-md-10 parent_box2\\\">\\n        <div class=\\\"box\\\">\\n\\n            <ul class=\\\"color_level_bullet right_38\\\">\\n\\n                <li><span>\\n                    <b>Usage: <span>{{RTUreportResponse.value}}</span></b>\\n                    </span>\\n                </li>\\n                <li><span>\\n                    <b>Target: <span>{{RTUreportResponse.target}}</span></b>\\n                    </span>\\n                </li>\\n            </ul>\\n            <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 190px; display: block;\\\">\\n            </highcharts-chart>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n    </div>\\n</div>\"","module.exports = \"<div id=\\\"mySidenav\\\" class=\\\"sidenav\\\">\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"closebtn\\\" (click)=\\\"closeNav()\\\">&times;</a>\\n    <img class=\\\"logo-inside\\\" src=\\\"../assets/images/output.png\\\" alt=\\\"\\\">\\n    <a href=\\\"#\\\" routerLink=\\\"/home\\\">Water Consumption</a>\\n    <a href=\\\"#\\\" routerLink=\\\"/consumptionresult\\\">Consumption Result</a>\\n    <!-- <a href=\\\"#\\\" routerLink=\\\"/rolematrix\\\">Roles</a> -->\\n    <a href=\\\"#\\\" routerLink=\\\"/reports\\\">Report</a>\\n    <a href=\\\"#\\\" routerLink=\\\"/targetsetting\\\">Target Settings</a>\\n    <a href=\\\"#\\\" routerLink=\\\"/masterlist\\\">Master Settings</a>\\n    <a href=\\\"#\\\" routerLink=\\\"/rolesettings\\\">Role Settings</a>\\n    <!-- <a htef=\\\"#\\\" routerLink=\\\"settings\\\">Settings</a> -->\\n    <a href=\\\"#\\\">Log out</a>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"bar2\\\" *ngIf=\\\"loader\\\"></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-5 login-box\\\">\\n            <!-- <img class=\\\"logo\\\" src=\\\"../assets/images/output.png\\\" alt=\\\"\\\"> -->\\n            <div class=\\\"col-md-4\\\"></div>\\n            <div class=\\\"col-md-8 login_signup_form \\\">\\n\\n                <span class=\\\"login100-form-title p-b-48\\\">\\n               <h6 class=\\\"sign_in_up\\\">Sign in</h6>\\n               <p>Don't have an account?  <a class=\\\"txt2\\\" routerLink=\\\"/signup\\\" href=\\\"#\\\">Sign Up</a></p>\\n               </span>\\n                <form action=\\\"\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                    <span class=\\\"label_sign\\\">Email Address</span>\\n                    <div class=\\\"wrap-input100 validate-input\\\">\\n                        <input class=\\\"input100\\\" type=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\n                        <span class=\\\"focus-input100\\\" placeholder=\\\"youremailid@company.com\\\"></span>\\n                    </div>\\n                    <span class=\\\"label_sign\\\">Password</span>\\n                    <div class=\\\"wrap-input100 validate-input\\\" data-validate=\\\"Enter password\\\">\\n\\n                        <input class=\\\"input100\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n                        <span class=\\\"focus-input100\\\" placeholder=\\\"****\\\"></span>\\n                    </div>\\n                    <div class=\\\"col-md-12 login_section\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn login_btn_style\\\">Sign in</button>\\n                    </div>\\n                </form>\\n\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-7 padding_0 right_login_section\\\">\\n            <p *ngIf=\\\"wrong_password\\\" class=\\\"pull-right\\\" id=\\\"message_box_red\\\">Wrong Crediantial</p>\\n            <div class=\\\"content-container ng-tns-c156-32 ng-star-inserted\\\"><svg viewBox=\\\"0 0 1531 891\\\" preserveAspectRatio=\\\"xMidYMax slice\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"background ng-tns-c158-31\\\"><path d=\\\"M0 182c144.327 47.973 534.462 219.712 440.509 369.87C346.555 702.028 79.877 662.846 0 638V182z\\\" class=\\\"ng-tns-c158-31\\\"></path><path d=\\\"M1405 848c-424.366 158.009-437-164-437-272s102-425 563-576v769c-21.333 29.333-63.333 55.667-126 79z\\\" class=\\\"ng-tns-c158-31\\\"></path><path d=\\\"M1531 162c-122.914-17.284-377.96 33.191-543.433 206.414C822.095 541.636 797.342 648.75 835.842 731.622c38.5 82.871 198.243 134.841 400.555 92.053C1438.71 780.886 1492.752 775.894 1531 768V162z\\\" class=\\\"ng-tns-c158-31\\\"></path></svg>\\n\\n                <div class=\\\"content ng-tns-c158-31\\\">\\n                    <div class=\\\"title ng-tns-c158-31\\\"><span class=\\\"ng-tns-c158-31\\\">Several apartment owners in the city now started using the smart meter service,</span><span class=\\\"ng-tns-c158-31\\\"></span></div>\\n                    <div class=\\\"description ng-tns-c158-31\\\"> Ground level water going down day by day and cost of tanker's are increasing like rocket day by day, we help you to reduce the water bill by showing you the usage per day </div><button mat-stroked-button=\\\"\\\" class=\\\"mat-focus-indicator learn-more-button ng-tns-c158-31 mat-stroked-button mat-button-base\\\"><span class=\\\"mat-button-wrapper\\\"> Learn more </span><div matripple=\\\"\\\" class=\\\"mat-ripple mat-button-ripple\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div></button></div>\\n            </div>\\n        </div>\\n    </div>\"","module.exports = \"<p>metadata-tabs works!</p>\\n\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Base Station</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                        aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 master_table_box box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Base Station Id</th>\\n                        <th>Block</th>\\n                        <th>Mac Detail</th>\\n                        <th>IP Address</th>\\n                        <th>Base Station Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let baseStationObj of getBasestationList; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!baseStationObj.editRow\\\">{{baseStationObj.base_station_id}}</span>\\n                                <span *ngIf=\\\"baseStationObj.editRow\\\"><input [(ngModel)]=\\\"baseStationObj.base_station_id\\\" id=\\\"textinput\\\" name=\\\"base_station_id\\\" type=\\\"text\\\" placeholder=\\\"Base Station Id\\\"  class=\\\"form-control input-md\\\"></span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!baseStationObj.editRow\\\">{{baseStationObj.block.block_name}}</span>\\n                                <span *ngIf=\\\"baseStationObj.editRow\\\">\\n                                    <select id=\\\"selectbasic\\\" name=\\\"block_id\\\" [(ngModel)]=\\\"baseStationObj.block._id\\\" class=\\\"form-control\\\">\\n                                        <option selected value=\\\"\\\">Select Block</option>\\n                                        <option value=\\\"{{blockdetObj._id}}\\\" *ngFor=\\\"let blockdetObj of getBlockServiceDet\\\">{{blockdetObj.block_name}}</option>\\n                                    </select>\\n    \\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!baseStationObj.editRow\\\">{{baseStationObj.mac_id}}</span>\\n                                <span *ngIf=\\\"baseStationObj.editRow\\\"> <input id=\\\"textinput\\\" name=\\\"mac_id\\\" type=\\\"text\\\" placeholder=\\\"Mac Id\\\" [(ngModel)]=\\\"baseStationObj.mac_id\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!baseStationObj.editRow\\\">{{baseStationObj.ip_address}}</span>\\n                                <span *ngIf=\\\"baseStationObj.editRow\\\"><input id=\\\"textinput\\\" name=\\\"ip_address\\\" type=\\\"text\\\" placeholder=\\\"IP Address\\\" [(ngModel)]=\\\"baseStationObj.ip_address\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!baseStationObj.editRow\\\">{{baseStationObj.base_station_type}}</span>\\n                                <span *ngIf=\\\"baseStationObj.editRow\\\">\\n                                    <select id=\\\"selectbasic\\\" name=\\\"base_station_type\\\" [(ngModel)]=\\\"baseStationObj.base_station_type\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Base Station Type</option>\\n                                        <option value=\\\"{{basestationTypeObj}}\\\" *ngFor=\\\"let basestationTypeObj of getBasestationTypeList\\\">{{basestationTypeObj}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!baseStationObj.editRow\\\" (click)=\\\"baseStationObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"baseStationObj.editRow\\\" (click)=\\\"baseStationObj.editRow = false; editEachBaesstationFunction(baseStationObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\" (click)=\\\"deleteBasestation(baseStationObj._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Base Station</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBasestationForm\\\" (ngSubmit)=\\\"createBasestation()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"textinput\\\" name=\\\"base_station_id\\\" type=\\\"text\\\" placeholder=\\\"Base Station Id\\\" formControlName=\\\"base_station_id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"selectbasic\\\" name=\\\"block_id\\\" formControlName=\\\"block_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Block</option>\\n                                    <option value=\\\"{{blockdetObj._id}}\\\" *ngFor=\\\"let blockdetObj of getBlockServiceDet\\\">{{blockdetObj.block_name}}</option>\\n                                </select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"textinput\\\" name=\\\"mac_id\\\" type=\\\"text\\\" placeholder=\\\"Mac Id\\\" formControlName=\\\"mac_id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"textinput\\\" name=\\\"ip_address\\\" type=\\\"text\\\" placeholder=\\\"IP Address\\\" formControlName=\\\"ip_address\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"selectbasic\\\" name=\\\"block_id\\\" formControlName=\\\"base_station_type\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Base Station Type</option>\\n                                    <option value=\\\"{{basestationTypeObj}}\\\" *ngFor=\\\"let basestationTypeObj of getBasestationTypeList\\\">{{basestationTypeObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <span><b>{{get_create_status}}</b></span>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Base Station Channel</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Base Station Channel Id</th>\\n                        <th>Base Station id</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getBasestationChannelObj of getBasestationChannelList; let i=index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBasestationChannelObj.editRow\\\">{{getBasestationChannelObj.base_station_channel_id}}</span>\\n                                <span *ngIf=\\\"getBasestationChannelObj.editRow\\\"> <input [(ngModel)]=\\\"getBasestationChannelObj.base_station_channel_id\\\" id=\\\"basestation_channel_id\\\" name=\\\"base_station_channel_id\\\" type=\\\"text\\\"  placeholder=\\\"Base Station Channel Id\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBasestationChannelObj.editRow\\\">{{getBasestationChannelObj.base_station.base_station_id}}</span>\\n                                <span *ngIf=\\\"getBasestationChannelObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"getBasestationChannelObj.base_station._id\\\" id=\\\"base_station_id\\\" name=\\\"base_station_id\\\"  class=\\\"form-control\\\">\\n                                        <option selected value=\\\"\\\">Select Base Station</option>\\n                                        <option value=\\\"{{basestationObj._id}}\\\" *ngFor=\\\"let basestationObj of getBasestationList\\\">{{basestationObj.base_station_id}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!getBasestationChannelObj.editRow\\\" (click)=\\\"getBasestationChannelObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"getBasestationChannelObj.editRow\\\" (click)=\\\"getBasestationChannelObj.editRow = false; editEachBaesstationChannelFunction(getBasestationChannelObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\" (click)=\\\"deleteBasestationChannel(getBasestationChannelObj)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Base Station Channel</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBasestationChannelForm\\\" (ngSubmit)=\\\"createBasestationChannels()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"basestation_channel_id\\\" name=\\\"base_station_channel_id\\\" type=\\\"text\\\" formControlName=\\\"base_station_channel_id\\\" placeholder=\\\"Base Station Channel Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"base_station_id\\\" name=\\\"base_station_id\\\" formControlName=\\\"base_station_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Base Station</option>\\n                                    <option value=\\\"{{basestationObj._id}}\\\" *ngFor=\\\"let basestationObj of getBasestationList\\\">{{basestationObj.base_station_id}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Base Station Type</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Base Station Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let basestationTypeObj of getBasestationTypeList; let i=index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!basestationTypeObj.editRow\\\">{{basestationTypeObj}}</span>\\n                                <span *ngIf=\\\"basestationTypeObj.editRow\\\"> <input [(ngModel)]=\\\"basestationTypeObj\\\" id=\\\"base_station_type\\\" name=\\\"base_station_type\\\" type=\\\"text\\\" placeholder=\\\"Base Station Type\\\" class=\\\"form-control input-md\\\"></span>\\n\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!basestationTypeObj.editRow\\\" (click)=\\\"basestationTypeObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"basestationTypeObj.editRow\\\" (click)=\\\"basestationTypeObj.editRow = false \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteBasestationType(basestationTypeObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Base Station Type</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBasestationTypeForm\\\" (ngSubmit)=\\\"createBasestationTypes()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"base_station_type\\\" name=\\\"base_station_type\\\" formControlName=\\\"base_station_type\\\" type=\\\"text\\\" placeholder=\\\"Base Station Type\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"type\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Block</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                    aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Block ID</th>\\n                        <th>Block Name</th>\\n                        <th>Building Name</th>\\n                        <th>Num of Flats</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getBlockdetailObj of getBlockServiceDet; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBlockdetailObj.editRow\\\">{{getBlockdetailObj.block_id}}</span>\\n                                <span *ngIf=\\\"getBlockdetailObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"getBlockdetailObj.block_id\\\" id=\\\"block_id\\\" name=\\\"block_id\\\" type=\\\"text\\\" placeholder=\\\"Block Id\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBlockdetailObj.editRow\\\">{{getBlockdetailObj.block_name}}</span>\\n                                <span *ngIf=\\\"getBlockdetailObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"getBlockdetailObj.block_name\\\" id=\\\"block_name\\\" name=\\\"block_name\\\" type=\\\"text\\\" placeholder=\\\"Block Name\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBlockdetailObj.editRow\\\">{{getBlockdetailObj.building.building_name}}</span>\\n                                <span *ngIf=\\\"getBlockdetailObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"getBlockdetailObj.building_id\\\" id=\\\"building_id\\\" name=\\\"building_id\\\"  class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Building Name</option>\\n                                        <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of getBuildingDet\\\">{{buildingObj.building_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getBlockdetailObj.editRow\\\">{{getBlockdetailObj.num_of_flats}}</span>\\n                                <span *ngIf=\\\"getBlockdetailObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"getBlockdetailObj.num_of_flats\\\" id=\\\"num_of_flats\\\" name=\\\"num_of_flats\\\"  type=\\\"text\\\" placeholder=\\\"Num of Flats\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!getBlockdetailObj.editRow\\\" (click)=\\\"getBlockdetailObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"getBlockdetailObj.editRow\\\" (click)=\\\"getBlockdetailObj.editRow = false; editBlockFunction(getBlockdetailObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteBlocks(getBlockdetailObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Block</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBlockForm\\\" (ngSubmit)=\\\"createBlocks()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"block_id\\\" name=\\\"block_id\\\" type=\\\"text\\\" formControlName=\\\"block_id\\\" placeholder=\\\"Block Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"building_id\\\" name=\\\"building_id\\\" formControlName=\\\"building_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Building Name</option>\\n                                    <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of getBuildingDet\\\">{{buildingObj.building_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"block_name\\\" name=\\\"block_name\\\" formControlName=\\\"block_name\\\" type=\\\"text\\\" placeholder=\\\"Block Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"num_of_flats\\\" name=\\\"num_of_flats\\\" formControlName=\\\"num_of_flats\\\" type=\\\"text\\\" placeholder=\\\"No of Flats\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Building</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Building ID</th>\\n                        <th>Building Name</th>\\n                        <th>Building Type</th>\\n                        <th>Logo</th>\\n                        <th>Pipe Type</th>\\n                        <th>Pipe Size Horizontal</th>\\n                        <th>Pipe Size Vertical</th>\\n                        <th>Max Floor</th>\\n                        <th>Num of Blocks</th>\\n                        <th>No of OHT</th>\\n                        <th>No of Ducts</th>\\n                        <th>IP Address</th>\\n                        <th>Service Provider</th>\\n                        <th>No of BHK</th>\\n                        <th>No of other types</th>\\n                        <th>Muncipal Water Expense</th>\\n                        <th>STP Reuse</th>\\n                        <th>Website</th>\\n                        <th>City ID</th>\\n                        <th>Address</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let buildingdetailObj of getBuildingDet; let i=index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.building_id}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.building_id\\\" id=\\\"building_id\\\" name=\\\"building_id\\\" type=\\\"text\\\" placeholder=\\\"Building Id\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.building_name}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.building_name\\\" id=\\\"building_name\\\" name=\\\"building_name\\\" type=\\\"text\\\" placeholder=\\\"Building Name\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.building_type}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"buildingdetailObj.building_type\\\" id=\\\"building_type\\\" name=\\\"building_type\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Building Type</option>\\n                                        <option value=\\\"{{buildingTypeObj}}\\\" *ngFor=\\\"let buildingTypeObj of getBuildingTypeList\\\">{{buildingTypeObj}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.logo}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.pipe_type}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"buildingdetailObj.pipe_type\\\" id=\\\"pipe_type\\\" name=\\\"pipe_type\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Pipe Type</option>\\n                                        <option value=\\\"{{pipeObj}}\\\" *ngFor=\\\"let pipeObj of getPipeData\\\">{{pipeObj}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.pipe_size_horizontal}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.pipe_size_horizontal\\\" id=\\\"pipe_size_horizontal\\\" name=\\\"pipe_size_horizontal\\\" type=\\\"text\\\" placeholder=\\\"Pipe Size Horizontal\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.pipe_size_vertical}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.pipe_size_vertical\\\" id=\\\"pipe_size_vertical\\\" name=\\\"pipe_size_vertical\\\" type=\\\"text\\\" placeholder=\\\"Pipe Size Vertical\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.max_floors}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.max_floors\\\" id=\\\"max_floors\\\" name=\\\"max_floors\\\" type=\\\"text\\\" placeholder=\\\"Max Floor\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.num_of_blocks}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.num_of_blocks\\\" id=\\\"num_of_blocks\\\" name=\\\"num_of_blocks\\\" type=\\\"text\\\" placeholder=\\\"No of Blocks\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.no_of_OHT}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.no_of_OHT\\\" id=\\\"no_of_OHT\\\" name=\\\"no_of_OHT\\\" type=\\\"text\\\" placeholder=\\\"No of OHT\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.no_of_ducts}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.no_of_ducts\\\" id=\\\"no_of_ducts\\\" name=\\\"no_of_ducts\\\" type=\\\"text\\\" placeholder=\\\"No of Ducts\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.ip_address}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.ip_address\\\" id=\\\"ip_address\\\" name=\\\"ip_address\\\" type=\\\"text\\\" placeholder=\\\"IP Address\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.service_provider}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.service_provider\\\" id=\\\"service_provider\\\" name=\\\"service_provider\\\" type=\\\"text\\\" placeholder=\\\"Service Provider\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.no_of_bhk}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.no_of_bhk\\\" id=\\\"no_of_bhk\\\" name=\\\"no_of_bhk\\\" type=\\\"text\\\" placeholder=\\\"No of BHK\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.no_of_other_types}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.no_of_other_types\\\" id=\\\"no_of_other_types\\\" name=\\\"no_of_other_types\\\" type=\\\"text\\\" placeholder=\\\"No of BHK\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.monthly_water_expense}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.monthly_water_expense\\\" id=\\\"monthly_water_expense\\\" name=\\\"monthly_water_expense\\\" type=\\\"text\\\" placeholder=\\\"Monthly Water Espense\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.STP_reuse}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.STP_reuse\\\" id=\\\"STP_reuse\\\" name=\\\"STP_reuse\\\" type=\\\"text\\\" placeholder=\\\"STP Reuse\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.website}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.website\\\" id=\\\"website\\\" name=\\\"website\\\" type=\\\"text\\\" placeholder=\\\"Website\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.city.city_name}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"buildingdetailObj.city._id\\\" id=\\\"city_id\\\" name=\\\"city_id\\\"  class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select City</option>\\n                                        <option value=\\\"{{cityObj._id}}\\\" *ngFor=\\\"let cityObj of getCityDetailList\\\">{{cityObj.city_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!buildingdetailObj.editRow\\\">{{buildingdetailObj.address}}</span>\\n                                <span *ngIf=\\\"buildingdetailObj.editRow\\\"><input [(ngModel)]=\\\"buildingdetailObj.address\\\" id=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"Address\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n\\n                            <td>\\n                                <button *ngIf=\\\"!buildingdetailObj.editRow\\\" (click)=\\\"buildingdetailObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"buildingdetailObj.editRow\\\" (click)=\\\"buildingdetailObj.editRow = false; editEachBuildingFunction(buildingdetailObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteBuildings(buildingdetailObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Building</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBuildingsForms\\\" (ngSubmit)=\\\"createBuildings()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"building_id\\\" formControlName=\\\"building_id\\\" name=\\\"building_id\\\" type=\\\"text\\\" placeholder=\\\"Building Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"building_name\\\" formControlName=\\\"building_name\\\" name=\\\"building_name\\\" type=\\\"text\\\" placeholder=\\\"Building Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"building_type\\\" name=\\\"building_type\\\" formControlName=\\\"building_type\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Building Type</option>\\n                                    <option value=\\\"{{buildingTypeObj}}\\\" *ngFor=\\\"let buildingTypeObj of getBuildingTypeList\\\">{{buildingTypeObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"logo\\\" formControlName=\\\"logo\\\" name=\\\"logo\\\" type=\\\"text\\\" placeholder=\\\"Logo\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"pipe_type\\\" name=\\\"pipe_type\\\" formControlName=\\\"pipe_type\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Pipe Type</option>\\n                                    <option value=\\\"{{pipeObj}}\\\" *ngFor=\\\"let pipeObj of getPipeData\\\">{{pipeObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"pipe_size_horizontal\\\" formControlName=\\\"pipe_size_horizontal\\\" name=\\\"pipe_size_horizontal\\\" type=\\\"text\\\" placeholder=\\\"Pipe Type Horizontal\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"pipe_size_vertical\\\" formControlName=\\\"pipe_size_vertical\\\" name=\\\"pipe_size_vertical\\\" type=\\\"text\\\" placeholder=\\\"Pipe Type Vertical\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"max_floors\\\" formControlName=\\\"max_floors\\\" name=\\\"max_floors\\\" type=\\\"text\\\" placeholder=\\\"Max Floors\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"num_of_blocks\\\" formControlName=\\\"num_of_blocks\\\" name=\\\"num_of_blocks\\\" type=\\\"text\\\" placeholder=\\\"No of Blocks\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_OHT\\\" formControlName=\\\"no_of_OHT\\\" name=\\\"no_of_OHT\\\" type=\\\"text\\\" placeholder=\\\"No of OHT\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_ducts\\\" formControlName=\\\"no_of_ducts\\\" name=\\\"no_of_ducts\\\" type=\\\"text\\\" placeholder=\\\"No of Ducts\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"ip_address\\\" formControlName=\\\"ip_address\\\" name=\\\"ip_address\\\" type=\\\"text\\\" placeholder=\\\"Ip Address\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"service_provider\\\" formControlName=\\\"service_provider\\\" name=\\\"service_provider\\\" type=\\\"text\\\" placeholder=\\\"Service Provider\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_bhk\\\" formControlName=\\\"no_of_bhk\\\" name=\\\"no_of_bhk\\\" type=\\\"text\\\" placeholder=\\\"No of BHK\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_other_types\\\" formControlName=\\\"no_of_other_types\\\" name=\\\"no_of_other_types\\\" type=\\\"text\\\" placeholder=\\\"No of other types\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"muncipal_water\\\" formControlName=\\\"muncipal_water\\\" name=\\\"muncipal_water\\\" type=\\\"text\\\" placeholder=\\\"Muncipal Water\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_bores\\\" formControlName=\\\"no_of_bores\\\" name=\\\"no_of_bores\\\" type=\\\"text\\\" placeholder=\\\"No of Bores\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"no_of_sumps\\\" formControlName=\\\"no_of_sumps\\\" name=\\\"no_of_sumps\\\" type=\\\"text\\\" placeholder=\\\"No of Sumps\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"consumption_without_metering\\\" formControlName=\\\"consumption_without_metering\\\" name=\\\"consumption_without_metering\\\" type=\\\"text\\\" placeholder=\\\"Consumption Without Metring\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"monthly_water_expense\\\" formControlName=\\\"monthly_water_expense\\\" name=\\\"monthly_water_expense\\\" type=\\\"text\\\" placeholder=\\\"Monthly Water Expense\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"STP_reuse\\\" formControlName=\\\"STP_reuse\\\" name=\\\"STP_reuse\\\" type=\\\"text\\\" placeholder=\\\"STP Reuse\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"website\\\" formControlName=\\\"website\\\" name=\\\"website\\\" type=\\\"text\\\" placeholder=\\\"Website\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"city_id\\\" name=\\\"city_id\\\" formControlName=\\\"city_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select City</option>\\n                                    <option value=\\\"{{cityObj._id}}\\\" *ngFor=\\\"let cityObj of getCityDetailList\\\">{{cityObj.city_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"address\\\" formControlName=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\" placeholder=\\\"Address\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Building Type</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Building Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let buildingTypeObj of getBuildingTypeList; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{buildingTypeObj}}</td>\\n                            <td>\\n                                <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteBuildingType(buildingTypeObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Building Type</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createBuildingTypeForm\\\" (ngSubmit)=\\\"createBuildingTypes()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"building_type\\\" name=\\\"building_type\\\" type=\\\"text\\\" formControlName=\\\"building_type\\\" placeholder=\\\"Building Type\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Cities</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>City Name</th>\\n                        <th>Country</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let cityObj of getCityDetailList; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!cityObj.editRow\\\">{{cityObj.city_name}}</span>\\n                                <span *ngIf=\\\"cityObj.editRow\\\"><input [(ngModel)]=\\\"cityObj.city_name\\\" id=\\\"city_name\\\" name=\\\"city_name\\\" type=\\\"text\\\" placeholder=\\\"City Name\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span>{{cityObj.country}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!cityObj.editRow\\\" (click)=\\\"cityObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"cityObj.editRow\\\" (click)=\\\"cityObj.editRow = false; editCityFunction(cityObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteCities(cityObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add City</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createCityForms\\\" (ngSubmit)=\\\"createCities()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"city_name\\\" name=\\\"city_name\\\" type=\\\"text\\\" placeholder=\\\"City Name\\\" formControlName=\\\"city_name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Consumer</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Consumer ID</th>\\n                        <th>First Name</th>\\n                        <th>Last Name</th>\\n                        <th>Email</th>\\n                        <th>Phone</th>\\n                        <th>Mobile</th>\\n                        <th>Flat Name</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let consumerObj of getConsumerData; let i=index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.consumer_id}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.consumer_id\\\" id=\\\"consumer_id\\\"  name=\\\"consumer_id\\\" type=\\\"text\\\" placeholder=\\\"Consumer Id\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.first_name}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.first_name\\\" id=\\\"first_name\\\"  name=\\\"first_name\\\" type=\\\"text\\\" placeholder=\\\"Flat Name\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.last_name}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.last_name\\\" id=\\\"last_name\\\"  name=\\\"last_name\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.email_id}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.email_id\\\" id=\\\"email_id\\\"  name=\\\"email_id\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.phone}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.phone\\\" id=\\\"phone\\\"  name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"Phone\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.mobile}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\"> <input [(ngModel)]=\\\"consumerObj.mobile\\\" id=\\\"mobile\\\"  name=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"mobile\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!consumerObj.editRow\\\">{{consumerObj.flat_details.flat_name}}</span>\\n                                <span *ngIf=\\\"consumerObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"consumerObj.flat_id\\\" id=\\\"flat_id\\\" name=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Flat Name</option>\\n                                        <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails; let i=index\\\">{{flatObj.flat_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!consumerObj.editRow\\\" (click)=\\\"consumerObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"consumerObj.editRow\\\" (click)=\\\"consumerObj.editRow = false; editConsumerFunction(consumerObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteConsumer(consumerObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Consumer</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <form action=\\\"\\\" [formGroup]=\\\"createConsumerForm\\\" (ngSubmit)=\\\"createConsumers(createConsumerForm.value)\\\">\\n                <!-- Modal body -->\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"consumer_id\\\" formControlName=\\\"consumer_id\\\" name=\\\"consumer_id\\\" type=\\\"text\\\" placeholder=\\\"Consumer Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"first_name\\\" formControlName=\\\"first_name\\\" name=\\\"first_name\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"last_name\\\" formControlName=\\\"last_name\\\" name=\\\"last_name\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"email_id\\\" formControlName=\\\"email_id\\\" name=\\\"email_id\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"phone\\\" formControlName=\\\"phone\\\" name=\\\"phone\\\" type=\\\"text\\\" placeholder=\\\"Phone\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"mobile\\\" formControlName=\\\"mobile\\\" name=\\\"mobile\\\" type=\\\"text\\\" placeholder=\\\"Mobile\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"flat_id\\\" name=\\\"flat_id\\\" formControlName=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Flat Name</option>\\n                                    <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails; let i=index\\\">{{flatObj.flat_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Flat</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Block Name</th>\\n                        <th>Flat Name</th>\\n                        <th>Flat Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let flatDetailObj of getallFlatdetails; let i=index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!flatDetailObj.editRow\\\">{{flatDetailObj.block_details.block_name}}</span>\\n                                <span *ngIf=\\\"flatDetailObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"flatDetailObj.block_id\\\" id=\\\"block_id\\\" name=\\\"block_id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Block</option>\\n                                        <option value=\\\"{{blockObj._id}}\\\" *ngFor=\\\"let blockObj of getBlockServiceDet\\\">{{blockObj.block_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!flatDetailObj.editRow\\\">{{flatDetailObj.flat_name}}</span>\\n                                <span *ngIf=\\\"flatDetailObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"flatDetailObj.flat_name\\\" id=\\\"flat_name\\\"  name=\\\"flat_name\\\" type=\\\"text\\\" placeholder=\\\"Flat Name\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!flatDetailObj.editRow\\\">{{flatDetailObj.flat_type}}</span>\\n                                <span *ngIf=\\\"flatDetailObj.editRow\\\">\\n                                <select [(ngModel)]=\\\"flatDetailObj.flat_type\\\" id=\\\"flat_type\\\" name=\\\"flat_type\\\"  class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Flat Type</option>\\n                                    <option value=\\\"{{flatTypeObj}}\\\" *ngFor=\\\"let flatTypeObj of getFlatTypeList\\\">{{flatTypeObj}}</option>\\n                                </select>\\n                               </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!flatDetailObj.editRow\\\" (click)=\\\"flatDetailObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"flatDetailObj.editRow\\\" (click)=\\\"flatDetailObj.editRow = false; editFlatsFunction(flatDetailObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteFlats(flatDetailObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Flat</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createFlatForm\\\" (ngSubmit)=\\\"createFlats(createFlatForm.value)\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"block_id\\\" name=\\\"block_id\\\" formControlName=\\\"block_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Block</option>\\n                                    <option value=\\\"{{blockObj._id}}\\\" *ngFor=\\\"let blockObj of getBlockServiceDet\\\">{{blockObj.block_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"flat_name\\\" formControlName=\\\"flat_name\\\" name=\\\"flat_name\\\" type=\\\"text\\\" placeholder=\\\"Flat Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"flat_type\\\" name=\\\"flat_type\\\" formControlName=\\\"flat_type\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Flat Type</option>\\n                                    <option value=\\\"{{flatTypeObj}}\\\" *ngFor=\\\"let flatTypeObj of getFlatTypeList\\\">{{flatTypeObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Flat Type</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Flat Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getFlatTypeObj of getFlatTypeList; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{getFlatTypeObj}}</td>\\n                            <td>\\n                                <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button (click)=\\\"deleteFlatType(getFlatTypeObj)\\\" class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Flat</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createFlattypeForm\\\" (ngSubmit)=\\\"createFlatypes()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"flat_type\\\" formControlName=\\\"flat_type\\\" name=\\\"flat_type\\\" type=\\\"text\\\" placeholder=\\\"Flat Type\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Inlet</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Inlet ID</th>\\n                        <th>Flat Name</th>\\n                        <th>Inlet Name</th>\\n                        <th>Inlet Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getInletObj of getInletList; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span *ngIf=\\\"!getInletObj.editRow\\\">{{getInletObj.inlet_id}}</span>\\n                                <span *ngIf=\\\"getInletObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"getInletObj.inlet_id\\\" id=\\\"inlet_id\\\"  name=\\\"inlet_id\\\" type=\\\"text\\\" placeholder=\\\"Inlet Id\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getInletObj.editRow\\\">{{getInletObj.flat.flat_name}}</span>\\n                                <span *ngIf=\\\"getInletObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"getInletObj.flat._id\\\" id=\\\"flat_id\\\" name=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Flat</option>\\n                                        <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails\\\">{{flatObj.flat_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getInletObj.editRow\\\">{{getInletObj.inlet_name}}</span>\\n                                <span *ngIf=\\\"getInletObj.editRow\\\">\\n                                    <input [(ngModel)]=\\\"getInletObj.inlet_name\\\" id=\\\"inlet_name\\\"  name=\\\"inlet_name\\\" type=\\\"text\\\" placeholder=\\\"Inlet Name\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getInletObj.editRow\\\">{{getInletObj.inlet_type}}</span>\\n                                <span *ngIf=\\\"getInletObj.editRow\\\">\\n                                    <select [(ngModel)]=\\\"getInletObj.inlet_type\\\" id=\\\"inlet_type\\\" name=\\\"inlet_type\\\"  class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Inlet Type</option>\\n                                        <option value=\\\"{{inlettypeObj}}\\\" *ngFor=\\\"let inlettypeObj of getInlettypedetails\\\">{{inlettypeObj}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!getInletObj.editRow\\\" (click)=\\\"getInletObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"getInletObj.editRow\\\" (click)=\\\"getInletObj.editRow = false; editInletFunction(getInletObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Inlet</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createInletform\\\" (ngSubmit)=\\\"createInlets()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"inlet_id\\\" formControlName=\\\"inlet_id\\\" name=\\\"inlet_id\\\" type=\\\"text\\\" placeholder=\\\"Inlet Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"flat_id\\\" name=\\\"flat_id\\\" formControlName=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Flat</option>\\n                                    <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails\\\">{{flatObj.flat_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"inlet_name\\\" formControlName=\\\"inlet_name\\\" name=\\\"inlet_name\\\" type=\\\"text\\\" placeholder=\\\"Inlet Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"inlet_type\\\" name=\\\"inlet_type\\\" formControlName=\\\"inlet_type\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Inlet Type</option>\\n                                    <option value=\\\"{{inlettypeObj}}\\\" *ngFor=\\\"let inlettypeObj of getInlettypedetails\\\">{{inlettypeObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Inlet Types</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Inlet Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let inletTypeObj of getInlettypedetails; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{inletTypeObj}}</td>\\n                            <td>\\n                                <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Inlet Type</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createInletTypeForm\\\" (ngSubmit)=\\\"createInletTypes()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"inlet_type\\\" formControlName=\\\"inlet_type\\\" name=\\\"inlet_type\\\" type=\\\"text\\\" placeholder=\\\"Inlet Type\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Master Dashboard</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 box-body\\\">\\n\\n        <div routerLink=\\\"/basestation\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Base Stations</p>\\n        </div>\\n        <div routerLink=\\\"/basestationchannel\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\"> Base Station Channel</p>\\n        </div>\\n        <div routerLink=\\\"/basestationtype\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Base Station Type</p>\\n\\n        </div>\\n        <div routerLink=\\\"/block\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Block</p>\\n\\n        </div>\\n        <div routerLink=\\\"/building\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Building</p>\\n        </div>\\n        <div routerLink=\\\"/buildingtype\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Building Type</p>\\n        </div>\\n        <div routerLink=\\\"/city\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">City</p>\\n        </div>\\n        <div routerLink=\\\"/consumer\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Consumer</p>\\n        </div>\\n        <div routerLink=\\\"/flat\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Flat</p>\\n        </div>\\n        <div routerLink=\\\"/flattype\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Flat Type</p>\\n        </div>\\n        <div routerLink=\\\"/inlet\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"> </i></p>\\n            <p class=\\\"master_icon_names\\\">Inlet</p>\\n        </div>\\n        <div routerLink=\\\"/inlettype\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\"> Inlet Type</p>\\n        </div>\\n        <div routerLink=\\\"/pipetype\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"> </i></p>\\n            <p class=\\\"master_icon_names\\\">Pipe Type</p>\\n\\n        </div>\\n        <div routerLink=\\\"/rtu\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"> </i></p>\\n            <p class=\\\"master_icon_names\\\">RTU</p>\\n\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Pipes</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Pipe Type</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let pipeObj of getPipeData; let i =index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{pipeObj}}</td>\\n                            <td>\\n                                <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Pipe</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createPipetypeForm\\\" (ngSubmit)=\\\"createPipetypes()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"pipe_type\\\" formControlName=\\\"pipe_type\\\" name=\\\"pipe_type\\\" type=\\\"text\\\" placeholder=\\\"Pipe Type\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">RTU</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Add</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>RTU Id</th>\\n                        <th>Base Station Id</th>\\n                        <th>Base Station Channel Id</th>\\n                        <th>Tag Name</th>\\n                        <th>Flat Name</th>\\n                        <th>Inlet Id</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getRtuObj of getRtuList; let i = index\\\">\\n                            <td>\\n                                <span>{{i+1}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.rtu_id}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\"> <input id=\\\"rtu_id\\\" [(ngModel)]=\\\"rtu_id\\\" name=\\\"rtu_id\\\" type=\\\"text\\\" placeholder=\\\"RTU Id\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.base_station.base_station_id}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\">\\n                                    <select id=\\\"base_station_id\\\" name=\\\"base_station_id\\\" [(ngModel)]=\\\"getRtuObj.base_station._id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Base Station</option>\\n                                        <option value=\\\"{{basestationObj._id}}\\\" *ngFor=\\\"let basestationObj of getBasestationList\\\">{{basestationObj.base_station_id}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.base_station_channel.base_station_channel_id}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\">\\n                                    <select id=\\\"base_station_channel_id\\\" name=\\\"base_station_channel_id\\\" [(ngModel)]=\\\"getRtuObj.base_station_channel._id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Base Station Channel</option>\\n                                        <option value=\\\"{{basestationchannelObj._id}}\\\" *ngFor=\\\"let basestationchannelObj of getBasestationChannelList\\\">{{basestationchannelObj.base_station_channel_id}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.tag_name}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\">  <input id=\\\"tag_name\\\" [(ngModel)]=\\\"getRtuObj.tag_name\\\" name=\\\"tag_name\\\" type=\\\"text\\\" placeholder=\\\"Tag Name\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.flat.flat_name}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\">\\n                                    <select id=\\\"flat_id\\\" name=\\\"flat_id\\\" [(ngModel)]=\\\"getRtuObj.flat._id\\\" class=\\\"form-control\\\">\\n                                        <option value=\\\"\\\">Select Flat</option>\\n                                        <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails\\\">{{flatObj.flat_name}}</option>\\n                                    </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!getRtuObj.editRow\\\">{{getRtuObj.inlet.inlet_name}}</span>\\n                                <span *ngIf=\\\"getRtuObj.editRow\\\">\\n\\n                                <select id=\\\"inlet_id\\\" name=\\\"inlet_id\\\" [(ngModel)]=\\\"getRtuObj.inlet._id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Inlet</option>\\n                                    <option value=\\\"{{inletObj._id}}\\\" *ngFor=\\\"let inletObj of getInletList\\\">{{inletObj.inlet_name}}</option>\\n                                </select>\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!getRtuObj.editRow\\\" (click)=\\\"getRtuObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"getRtuObj.editRow\\\" (click)=\\\"getRtuObj.editRow = false; editRTUFunction(getRtuObj) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add RTU</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createRtuForm\\\" (ngSubmit)=\\\"createRTU()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"rtu_id\\\" formControlName=\\\"rtu_id\\\" name=\\\"rtu_id\\\" type=\\\"text\\\" placeholder=\\\"RTU Id\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"base_station_id\\\" name=\\\"base_station_id\\\" formControlName=\\\"base_station_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Base Station</option>\\n                                    <option value=\\\"{{basestationObj._id}}\\\" *ngFor=\\\"let basestationObj of getBasestationList\\\">{{basestationObj.base_station_id}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"base_station_channel_id\\\" name=\\\"base_station_channel_id\\\" formControlName=\\\"base_station_channel_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Base Station Channel</option>\\n                                    <option value=\\\"{{basestationchannelObj._id}}\\\" *ngFor=\\\"let basestationchannelObj of getBasestationChannelList\\\">{{basestationchannelObj.base_station_channel_id}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"tag_name\\\" formControlName=\\\"tag_name\\\" name=\\\"tag_name\\\" type=\\\"text\\\" placeholder=\\\"Tag Name\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"flat_id\\\" name=\\\"flat_id\\\" formControlName=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Flat</option>\\n                                    <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getallFlatdetails\\\">{{flatObj.flat_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n\\n                                <select id=\\\"inlet_id\\\" name=\\\"inlet_id\\\" formControlName=\\\"inlet_id\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Inlet</option>\\n                                    <option value=\\\"{{inletObj._id}}\\\" *ngFor=\\\"let inletObj of getInletList\\\">{{inletObj.inlet_name}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Block Report</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-md-12 box-body marginTop2\\\">\\n    <div class=\\\"form-group padding_align\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Block</span>\\n                <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"block_id\\\" (change)=\\\"get_blockReport(selectedOption)\\\" class=\\\"form-control\\\">\\n                    <option value=\\\"\\\" >Select Block</option>\\n                    <option value=\\\"{{block_list_obj._id}}\\\" *ngFor=\\\"let block_list_obj of get_block_list\\\" >{{block_list_obj.block_name}}</option>\\n                    </select>\\n\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n                <div>\\n                    <span class=\\\"span_label\\\">View</span>\\n                </div>\\n\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                    <input  [(ngModel)]=\\\"selectedView\\\"  type=\\\"radio\\\" name=\\\"radios\\\" id=\\\"radios-3\\\" value=\\\"year\\\">\\n                    Year\\n                  </label> &nbsp;\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                    <input  [(ngModel)]=\\\"selectedView\\\"  type=\\\"radio\\\" name=\\\"radios\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                    Month\\n                  </label> &nbsp;\\n                <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                <input  [(ngModel)]=\\\"selectedView\\\" type=\\\"radio\\\"  name=\\\"radios\\\" id=\\\"radios-1\\\" value=\\\"day\\\">\\n                Day\\n              </label> &nbsp; &nbsp;\\n            </div>\\n\\n            <div [hidden]=\\\"(selectedView == 'year')\\\" class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Year</span>\\n                <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" id=\\\"select_year_id\\\" class=\\\"form-control\\\">\\n                        <option [value]=\\\"\\\" selected >Select Year</option>\\n                       <option [value]=\\\"yearobj\\\" *ngFor=\\\"let yearobj of years\\\">{{yearobj}}</option>\\n                    </select>\\n            </div>\\n            <div [hidden]=\\\"(selectedView != 'day')\\\" class=\\\"col-md-2\\\">\\n                <span class=\\\"span_label\\\">Month</span>\\n                <select id=\\\"selectedMonth\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_Month(selectedMonth)\\\">\\n                        <option [value]=\\\"\\\" >Select Month</option>\\n                       <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                    </select>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n                <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_block_report()\\\">Go</button>\\n            </div>\\n\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"col-md-12 box\\\">\\n                <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 400px; display: block;\\\">\\n                </highcharts-chart>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 master_table_box marginTop2 box\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Sl no</th>\\n                        <th>Block</th>\\n                        <th>Flat</th>\\n                        <th>Flat Consumption</th>\\n                        <th>Attached</th>\\n                        <th>Common</th>\\n                        <th>Common Bathroom</th>\\n                        <th>Kitchen</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let blockTableObj of get_block_table_report; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{blockTableObj.block_name}}</td>\\n                            <td>{{blockTableObj.flat_name}}</td>\\n                            <td>{{blockTableObj.flat_consumption}}</td>\\n                            <td>{{blockTableObj.attached}}</td>\\n                            <td>{{blockTableObj.common}}</td>\\n                            <td>{{blockTableObj.common_bathroom}}</td>\\n                            <td>{{blockTableObj.kitchen}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Building Report</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <div class=\\\"col-md-12 box-body marginTop2\\\">\\n\\n            <div class=\\\"form-group padding_align\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Building</span>\\n                        <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"building_id\\\" class=\\\"form-control\\\" (change)=\\\"get_buildingReport(selectedOption)\\\">\\n                                <option value=\\\"\\\" >Select Building</option>\\n                                <option value=\\\"{{building_obj._id}}\\\" *ngFor=\\\"let building_obj of get_building_list\\\" >{{building_obj.building_name}}</option>\\n                            </select>\\n                    </div>\\n\\n                    <div class=\\\"col-md-2\\\">\\n                        <div>\\n                            <span class=\\\"span_label\\\">View</span>\\n                        </div>\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                            <input  type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-1\\\" value=\\\"year\\\">\\n                            Year\\n                          </label> &nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                            <input type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                            Month\\n                          </label> &nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                            <input type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-3\\\" value=\\\"day\\\">\\n                            Day\\n                          </label>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView == 'year')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Year</span>\\n                        <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_year(selectedYear)\\\">\\n                                <option [value]=\\\"\\\" selected >Select Year</option>\\n                                <option [value]=\\\"yearobj\\\" *ngFor=\\\"let yearobj of years\\\">{{yearobj}}</option>\\n                            </select>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView != 'day')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Month</span>\\n                        <select id=\\\"select_month_id\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select month\\\" class=\\\"form-control\\\" (change)=\\\"get_month(selectedMonth)\\\">\\n                                <option [value]=\\\"\\\" >Select Month</option>\\n                                <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                            </select>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_building_report()\\\">Go</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box\\\">\\n                <highcharts-chart [Highcharts]=\\\"highchartss\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 400px; display: block;\\\">\\n                </highcharts-chart>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 master_table_box marginTop2\\\">\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <th>Sl no</th>\\n                    <th>Attached</th>\\n                    <th>Common</th>\\n                    <th>Flat Consumption</th>\\n                    <th>Kitchen</th>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let buildingTableObj of get_building_table_report; let i = index\\\">\\n                        <td>{{i+1}}</td>\\n                        <td>{{buildingTableObj.attached}}</td>\\n                        <td>{{buildingTableObj.common}}</td>\\n                        <td>{{buildingTableObj.flat_consumption}}</td>\\n                        <td>{{buildingTableObj.kitchen}}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Cosumer Report</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"form-group padding_align  box marginTop2\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Flat</span>\\n                        <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"block_id\\\" class=\\\"form-control\\\" (change)=\\\"get_flatReport(selectedOption)\\\">\\n                            <option value=\\\"\\\" >Select Flat</option>\\n                            <option value=\\\"{{flat_obj._id}}\\\" *ngFor=\\\"let flat_obj of get_flat_list\\\" >{{flat_obj.flat_name}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"col-md-2\\\">\\n                        <div>\\n                            <span class=\\\"span_label\\\">View</span>\\n                        </div>\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                        <input  type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-1\\\" value=\\\"year\\\">\\n                        Year\\n                      </label> &nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                        <input type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                        Month\\n                      </label> &nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                        <input type=\\\"radio\\\" [(ngModel)]=\\\"selectedView\\\" name=\\\"radios\\\" id=\\\"radios-3\\\" value=\\\"day\\\">\\n                        Day\\n                      </label>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView == 'year')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Year</span>\\n                        <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_year(selectedYear)\\\">\\n                            <option [value]=\\\"\\\" selected >Select Year</option>\\n                            <option [value]=\\\"yearobj\\\" *ngFor=\\\"let yearobj of years\\\">{{yearobj}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView != 'day')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Month</span>\\n                        <select id=\\\"select_month_id\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select month\\\" class=\\\"form-control\\\" (change)=\\\"get_month(selectedMonth)\\\">\\n                            <option [value]=\\\"\\\" >Select Month</option>\\n                            <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_consumer_report_go()\\\">Go</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"row marginTop2\\\">\\n\\n    <div class=\\\"col-md-10 parent_box2\\\" *ngIf=\\\"bullet_chart_data == '200'\\\">\\n        <div class=\\\"box\\\">\\n\\n            <ul class=\\\"color_level_bullet right_38\\\">\\n\\n                <li><span>\\n                    <b>Usage: <span>{{get_consumer_chart_report.value}}</span></b>\\n                    </span>\\n                </li>\\n                <li><span>\\n                    <b>Target: <span>{{get_consumer_chart_report.target}}</span></b>\\n                    </span>\\n                </li>\\n            </ul>\\n            <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 190px; display: block;\\\">\\n            </highcharts-chart>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row marginTop2\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box\\\" *ngIf=\\\"flatRportStatus == '200'\\\">\\n                <highcharts-chart [Highcharts]=\\\"highcharts1\\\" [options]=\\\"chartOptions1\\\" style=\\\"width: 100%; height: 400px; display: block;\\\">\\n                </highcharts-chart>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\"","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\"> Flat Report</h5>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"form-group padding_align\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Flat</span>\\n                        <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"block_id\\\" class=\\\"form-control\\\" (change)=\\\"get_flatReport(selectedOption)\\\">\\n                            <option value=\\\"\\\" >Select Flat</option>\\n                            <option value=\\\"{{flat_obj._id}}\\\" *ngFor=\\\"let flat_obj of get_flat_list\\\" >{{flat_obj.flat_name}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"col-md-2 views_chart\\\">\\n                        <div>\\n                            <span class=\\\"span_label\\\">View</span>\\n                        </div>\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                        <input type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-3\\\" value=\\\"year\\\">\\n                        Year\\n                      </label>&nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                        <input type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                        Month\\n                      </label> &nbsp;\\n                        <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                        <input  type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-1\\\"  value=\\\"day\\\">\\n                        Day\\n                      </label>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView =='year')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Year</span>\\n                        <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_year(selectedYear)\\\">\\n                            <option value=\\\"\\\" >Select Year</option>\\n                           <option value=\\\"2019\\\">2019</option>\\n                           <option value=\\\"2020\\\">2020</option>\\n                           <option value=\\\"2021\\\">2021</option>\\n                           <option value=\\\"2022\\\">2022</option>\\n                           <option value=\\\"2023\\\">2020</option>\\n                           <option value=\\\"2024\\\">2021</option>\\n                           <option value=\\\"2025\\\">2022</option>\\n                        </select>\\n                    </div>\\n\\n                    <div [hidden]=\\\"(selectedView !='day')\\\" class=\\\"col-md-2\\\">\\n                        <span class=\\\"span_label\\\">Month</span>\\n                        <select id=\\\"select_month_id\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select month\\\" class=\\\"form-control\\\" (change)=\\\"get_month(selectedMonth)\\\">\\n                                <option [value]=\\\"\\\" >Select Month</option>\\n                                <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                            </select>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_flat_report()\\\">Go</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div *ngIf=\\\"get_flat_chart_report\\\" class=\\\"col-md-12 box\\\">\\n                <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 400px; display: block;\\\">\\n                </highcharts-chart>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div *ngIf=\\\"get_flat_table_report\\\" class=\\\"col-md-12 master_table_box box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Flat Name</th>\\n                        <th>Flat Consumption</th>\\n                        <th>Attached</th>\\n                        <th>Common</th>\\n                        <th>Common Bathroom</th>\\n                        <th>Kitchen</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>{{get_flat_table_report.flat_name}}</td>\\n                            <td>{{get_flat_table_report.flat_consumption}}</td>\\n                            <td>{{get_flat_table_report.attached}}</td>\\n                            <td>{{get_flat_table_report.common}}</td>\\n                            <td>{{get_flat_table_report.common_bathroom}}</td>\\n                            <td>{{get_flat_table_report.kitchen}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div>\"","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Reports</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-12 box-body\\\">\\n\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3 multiple_report\\\">\\n                    <div routerLink=\\\"/flatreport\\\">\\n                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                        <p class=\\\"pull-right report_title\\\">\\n                            Flat\\n                        </p><br>\\n                        <p class=\\\"pull-right sub_title\\\">Detail Report</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3 multiple_report\\\">\\n                    <div routerLink=\\\"/blockreport\\\">\\n                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                        <p class=\\\"pull-right report_title\\\">\\n                            Block\\n                        </p><br>\\n                        <p class=\\\"pull-right sub_title\\\">Detail Report</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-3 multiple_report\\\">\\n                    <div routerLink=\\\"/buildingreport\\\">\\n                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                        <p class=\\\"pull-right report_title\\\">\\n                            Building\\n                        </p><br>\\n                        <p class=\\\"pull-right sub_title\\\">Detail Report</p>\\n                    </div>\\n                </div>\\n                <!-- <div class=\\\"col-md-3 multiple_report\\\">\\n                    <div routerLink=\\\"/rtoreport\\\">\\n                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                        <p class=\\\"pull-right report_title\\\">\\n                            RTU\\n                        </p><br>\\n                        <p class=\\\"pull-right sub_title\\\">Detail Report</p>\\n                    </div>\\n                </div> -->\\n                <div class=\\\"col-md-3 multiple_report\\\">\\n                    <div routerLink=\\\"/consumerreport\\\">\\n                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                        <p class=\\\"pull-right report_title\\\">\\n                            Consumer\\n                        </p><br>\\n                        <p class=\\\"pull-right sub_title\\\">Detail Report</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">RTU Report</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 marginTop2 box padding_align\\\">\\n                <div class=\\\"form-group \\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-2\\\">\\n                            <span class=\\\"span_label\\\">RTU</span>\\n                            <select id=\\\"building_id\\\" [(ngModel)]=\\\"selectedOption\\\" name=\\\"block_id\\\" class=\\\"form-control\\\" (change)=\\\"get_rtuReport(selectedOption)\\\">\\n                                <option value=\\\"\\\" >Select RTU</option>\\n                                <option value=\\\"{{rtu_obj._id}}\\\" *ngFor=\\\"let rtu_obj of getRtuList\\\" >{{rtu_obj.rtu_id}}</option>\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"col-md-2\\\">\\n                            <div>\\n                                <span class=\\\"span_label\\\">View</span>\\n                            </div>\\n                            <label class=\\\"radio-inline\\\" for=\\\"radios-1\\\">\\n                            <input  type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-1\\\" value=\\\"year\\\">\\n                             Year\\n                          </label> &nbsp;\\n                            <label class=\\\"radio-inline\\\" for=\\\"radios-2\\\">\\n                            <input  type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-2\\\" value=\\\"month\\\">\\n                            Month\\n                          </label> &nbsp;\\n                            <label class=\\\"radio-inline\\\" for=\\\"radios-3\\\">\\n                            <input  type=\\\"radio\\\" name=\\\"radios\\\" [(ngModel)]=\\\"selectedView\\\" id=\\\"radios-3\\\" value=\\\"day\\\">\\n                            Day\\n                          </label>\\n                        </div>\\n\\n\\n                        <div class=\\\"col-md-2\\\">\\n                            <span class=\\\"span_label\\\">Year</span>\\n                            <select id=\\\"select_year_id\\\" [(ngModel)]=\\\"selectedYear\\\" name=\\\"select year\\\" class=\\\"form-control\\\" (change)=\\\"get_year(selectedYear)\\\">\\n                                <option [value]=\\\"\\\" selected >Select Year</option>\\n                                <option [value]=\\\"yearobj\\\" *ngFor=\\\"let yearobj of years\\\">{{yearobj}}</option>\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"col-md-2\\\">\\n                            <span class=\\\"span_label\\\">Month</span>\\n                            <select [disabled]=\\\"(selectedView != 'day')\\\" id=\\\"select_month_id\\\" [(ngModel)]=\\\"selectedMonth\\\" name=\\\"select month\\\" class=\\\"form-control\\\" (change)=\\\"get_month(selectedMonth)\\\">\\n                                <option [value]=\\\"\\\" >Select Month</option>\\n                                <option [value]=\\\"month.monthnumber\\\" *ngFor=\\\"let month of monthList\\\">{{month.monthname}}</option>\\n                            </select>\\n                        </div>\\n\\n\\n                        <div class=\\\"col-md-1\\\">\\n                            <button type=\\\"button\\\" id=\\\"singlebutton\\\" name=\\\"singlebutton\\\" class=\\\"btn btn-primary margin_top_24\\\" (click)=\\\"get_rtu_report()\\\">Go</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 marginTop2 box\\\">\\n                <highcharts-chart [Highcharts]=\\\"highcharts\\\" [options]=\\\"chartOptions\\\" style=\\\"width: 100%; height: 190px; display: block;\\\">\\n                </highcharts-chart>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Roles</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Role</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let getRoles of getRoleLists; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{getRoles}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Role by Users</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 padding_align  box marginTop2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                    aria-hidden=\\\"true\\\"></i>Assign Role</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <th>Slno</th>\\n                            <th>Users</th>\\n                            <th>Action</th>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let rolebyuserLst of rolebyuserList; let i = index\\\">\\n                                <td>{{i+1}}</td>\\n                                <td>{{rolebyuserLst.email}}</td>\\n                                <td>\\n                                    <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                    <button class=\\\"btn btna btn-danger\\\" (click)=\\\"deleteBasestation(baseStationObj._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Assign Role to User</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"assignRoletoUserForm\\\" (ngSubmit)=\\\"assignRoleToUser()\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"user_id\\\" name=\\\"user_id\\\" formControlName=\\\"user_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select User</option>\\n                                    <option value=\\\"{{userLst._id}}\\\" *ngFor=\\\"let userLst of userList\\\">{{userLst.email}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"building_id\\\" name=\\\"building_id\\\" formControlName=\\\"building_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Building</option>\\n                                    <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of buildingList\\\">{{buildingObj.building_name}}</option>\\n                                </select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"role\\\" name=\\\"role\\\" formControlName=\\\"role\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"\\\">Select Role</option>\\n                                    <option value=\\\"{{roleObj}}\\\" *ngFor=\\\"let roleObj of roleList\\\">{{roleObj}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <span><b>{{get_create_status}}</b></span>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger1\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Role Settings</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-12 box-body\\\">\\n\\n\\n        <div routerLink=\\\"/roles\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Roles</p>\\n        </div>\\n        <div routerLink=\\\"/users\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Users</p>\\n        </div>\\n        <div routerLink=\\\"/rolebyuser\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Role by User</p>\\n        </div>\\n        <div routerLink=\\\"/activeusers\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"> <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Active Users</p>\\n        </div>\\n\\n\\n\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Users</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"col-md-12 box master_table_box overflow-x-scroll\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <table class=\\\"table\\\">\\n                        <thead>\\n                            <th>Slno</th>\\n                            <th>Users</th>\\n                            <th>Action</th>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let userLst of userList; let i = index\\\">\\n                                <td>{{i+1}}</td>\\n                                <td>{{userLst.email}}</td>\\n                                <td>\\n                                    <button class=\\\"btn btna btn-danger\\\" (click)=\\\"deleteBasestation(baseStationObj._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"bar2\\\" *ngIf=\\\"loader\\\"></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\"></div>\\n        <div class=\\\"col-md-4 login-box\\\">\\n            <img class=\\\"logo\\\" src=\\\"../assets/images/output.png\\\" alt=\\\"\\\">\\n\\n\\n            <span class=\\\"login100-form-title p-b-48\\\">\\n               \\n            </span>\\n            <form action=\\\"\\\" [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"signup()\\\">\\n                <div class=\\\"wrap-input100 validate-input\\\">\\n                    <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"email\\\" formControlName=\\\"email\\\">\\n                    <span class=\\\"focus-input100\\\" data-placeholder=\\\"email\\\"></span>\\n                </div>\\n\\n                <div class=\\\"wrap-input100 validate-input\\\" data-validate=\\\"Enter password\\\">\\n                    <span class=\\\"btn-show-pass\\\">\\n                        <i class=\\\"zmdi zmdi-eye\\\"></i>\\n                    </span>\\n                    <input class=\\\"input100\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n                    <span class=\\\"focus-input100\\\" data-placeholder=\\\"Password\\\"></span>\\n                </div>\\n                <div class=\\\"col-md-12 login_section\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn\\\">Sign up</button>\\n                </div>\\n            </form>\\n\\n            <div class=\\\"text-center p-t-115\\\">\\n                <span class=\\\"txt1\\\">\\n                     Have already account?\\n                </span>\\n\\n                <a class=\\\"txt2\\\" routerLink=\\\"/signup\\\" href=\\\"#\\\">\\n                    Login\\n                </a>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <p *ngIf=\\\"wrong_password\\\" class=\\\"pull-right\\\" id=\\\"message_box_red\\\">Wrong Crediantial</p>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new \\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"main_heading\\\">Target by Building</h5>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"col-md-12 box-body marginTop2\\\">\\n    <div class=\\\"form-group padding_align\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-9\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary margin_top_24\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                        aria-hidden=\\\"true\\\"></i> Add</button>\\n\\n            </div>\\n            <div class=\\\"col-md-3 padding-right-28\\\">\\n                <span class=\\\"span_label\\\">Building</span>\\n                <select id=\\\"selectBuilding\\\" [(ngModel)]=\\\"selectBuilding\\\" name=\\\"select building\\\" class=\\\"form-control\\\" (change)=\\\"getTargetbuBuildingIdFunction(selectBuilding)\\\">\\n                    <option value=\\\"\\\" >Select Building</option>\\n                    <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of getBuildingList\\\">{{buildingObj.building_name}}</option>\\n                  \\n                </select>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"overflow-x-scroll box\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Building</th>\\n                        <th>Type</th>\\n                        <th>Target</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody *ngIf=\\\"!loopTable\\\">\\n                        <tr *ngFor=\\\"let targetObj of getlistofBuildingtarget; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span>{{targetObj.building_name}}</span>\\n                            </td>\\n                            <td>\\n                                <span>{{targetObj.type}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!targetObj.editRow\\\">{{targetObj.target_value}}</span>\\n                                <span *ngIf=\\\"targetObj.editRow\\\"> \\n                                    <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" [(ngModel)]=\\\"targetObj.target_value\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!targetObj.editRow\\\" (click)=\\\"targetObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"targetObj.editRow\\\" (click)=\\\"targetObj.editRow = false; editTargetbyBuildingFunction(targetObj,true) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                    <tbody *ngIf=\\\"loopTable\\\">\\n                        <tr>\\n                            <td>1</td>\\n                            <td>\\n                                <span>{{eachlistofBuildingtarget.building_name}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <span>{{eachlistofBuildingtarget.type}}</span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!editRow\\\">{{eachlistofBuildingtarget.target_value}}</span>\\n                                <span *ngIf=\\\"editRow\\\"> <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" [(ngModel)]=\\\"eachlistofBuildingtarget.target_value\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!editRow\\\" (click)=\\\"editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"editRow\\\" (click)=\\\"editRow = false; editTargetbyBuildingFunction(eachlistofBuildingtarget,false) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Target by Building</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createTargetForm\\\" (ngSubmit)=\\\"setTargetByBuilding()\\\">\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"block_id\\\" name=\\\"block_id\\\" formControlName=\\\"building_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Building</option>\\n                                    <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of getBuildingList\\\">{{buildingObj.building_name}}</option>\\n                                </select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" formControlName=\\\"target_value\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <span *ngIf=\\\"addedResponseMsg\\\"><b>Successfully Added</b></span>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new \\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"main_heading\\\">Target by Flat</h5>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"col-md-12 box-body marginTop2\\\">\\n    <div class=\\\"form-group padding_align\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-9\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary margin_top_24\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                        aria-hidden=\\\"true\\\"></i> Add</button>\\n\\n            </div>\\n            <div class=\\\"col-md-3 padding-right-28\\\">\\n                <span class=\\\"span_label\\\">Flat</span>\\n                <select id=\\\"selectFlat\\\" [(ngModel)]=\\\"selectFlat\\\" name=\\\"select Flat\\\" class=\\\"form-control\\\" (change)=\\\"getTargetbuFlatIdFunction(selectFlat)\\\">\\n                    <option value=\\\"\\\" >Select Flat</option>\\n                    <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getFlatList\\\">{{flatObj.flat_name}}</option>\\n                  \\n                </select>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"overflow-x-scroll box\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Building</th>\\n                        <th>Type</th>\\n                        <th>Target</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody *ngIf=\\\"!loopTable\\\">\\n                        <tr *ngFor=\\\"let targetObj of getlistofFlattarget; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>\\n                                <span>{{targetObj.flat_name}}</span>\\n                            </td>\\n                            <td>\\n                                <span>{{targetObj.type}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!targetObj.editRow\\\">{{targetObj.target_value}}</span>\\n                                <span *ngIf=\\\"targetObj.editRow\\\"> \\n                                    <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" [(ngModel)]=\\\"targetObj.target_value\\\" class=\\\"form-control input-md\\\">\\n                                </span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!targetObj.editRow\\\" (click)=\\\"targetObj.editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"targetObj.editRow\\\" (click)=\\\"targetObj.editRow = false; editTargetbyBuildingFunction(targetObj,true) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n\\n                    </tbody>\\n                    <tbody *ngIf=\\\"loopTable\\\">\\n                        <tr>\\n                            <td>1</td>\\n                            <td>\\n                                <span>{{eachlistofBuildingtarget.flat_name}}</span>\\n\\n                            </td>\\n                            <td>\\n                                <span>{{eachlistofBuildingtarget.type}}</span>\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!editRow\\\">{{eachlistofBuildingtarget.target_value}}</span>\\n                                <span *ngIf=\\\"editRow\\\"> <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" [(ngModel)]=\\\"eachlistofBuildingtarget.target_value\\\" class=\\\"form-control input-md\\\"></span>\\n                            </td>\\n                            <td>\\n                                <button *ngIf=\\\"!editRow\\\" (click)=\\\"editRow = true\\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button *ngIf=\\\"editRow\\\" (click)=\\\"editRow = false; editTargetbyBuildingFunction(eachlistofBuildingtarget,false) \\\" class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\n\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Target by Flat</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createTargetForm\\\" (ngSubmit)=\\\"setTargetByFlat()\\\">\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"flat_id\\\" name=\\\"flat_id\\\" formControlName=\\\"flat_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Flat</option>\\n                                    <option value=\\\"{{flatObj._id}}\\\" *ngFor=\\\"let flatObj of getFlatList\\\">{{flatObj.flat_name}}</option>\\n                                </select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" formControlName=\\\"target_value\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <span *ngIf=\\\"addedResponseMsg\\\"><b>Successfully Added</b></span>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new\\\">\\n        <h5 class=\\\"main_heading\\\">Target Settings</h5>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-12 box-body\\\">\\n\\n\\n        <div routerLink=\\\"/targetbybuilding\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Target by Building</p>\\n        </div>\\n        <div routerLink=\\\"/targetbyflat\\\" class=\\\"multiple_report\\\">\\n            <p class=\\\"master_icons\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p>\\n            <p class=\\\"master_icon_names\\\">Target by Flat</p>\\n        </div>\\n\\n    </div>\\n</div>\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"bar2\\\" *ngIf=\\\"loader1\\\"></div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 marginTop2 padding_new \\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"main_heading\\\">Target</h5>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"col-md-12 box-body marginTop2\\\">\\n    <div class=\\\"form-group padding_align\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-9\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary margin_top_24\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"><i class=\\\"fa fa-pencil\\\"\\n                        aria-hidden=\\\"true\\\"></i> Add</button>\\n\\n            </div>\\n            <div class=\\\"col-md-3 padding-right-28\\\">\\n                <span class=\\\"span_label\\\">Building</span>\\n                <select id=\\\"selectBuilding\\\" [(ngModel)]=\\\"selectBuilding\\\" name=\\\"select building\\\" class=\\\"form-control\\\" (change)=\\\"select_building(selectBuilding)\\\">\\n                    <option value=\\\"\\\" >Select Building</option>\\n                   <option value=\\\"{{buildingObj._id}}\\\" *ngFor=\\\"let buildingObj of building_list\\\">{{buildingObj.building_name}}</option>\\n                  \\n                </select>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div class=\\\"overflow-x-scroll box\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <th>Slno</th>\\n                        <th>Block Name</th>\\n                        <th>Type</th>\\n                        <th>Target</th>\\n                        <th>Action</th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let targetObj of get_targetlist_for_table; let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <td>{{targetObj.block_name}}</td>\\n                            <td>{{targetObj.type}}</td>\\n                            <td>{{targetObj.target_value}}</td>\\n                            <td>\\n                                <button class=\\\"btn btna btn-brown\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></button>\\n                                <button class=\\\"btn btna btn-danger\\\" (click)=\\\"deleteBasestation(baseStationObj._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">Add Target</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n\\n            <!-- Modal body -->\\n            <form action=\\\"\\\" [formGroup]=\\\"createTargetForm\\\" (ngSubmit)=\\\"setTargetByBLOCKID()\\\">\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <select id=\\\"block_id\\\" name=\\\"block_id\\\" formControlName=\\\"block_id\\\" class=\\\"form-control\\\">\\n                                    <option selected value=\\\"\\\">Select Block</option>\\n                                    <option value=\\\"{{blockObj._id}}\\\" *ngFor=\\\"let blockObj of blockList\\\">{{blockObj.block_name}}</option>\\n                                </select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <input id=\\\"target\\\" name=\\\"target\\\" type=\\\"number\\\" placeholder=\\\"Target\\\" formControlName=\\\"target\\\" class=\\\"form-control input-md\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Modal footer -->\\n                <div class=\\\"modal-footer\\\">\\n                    <!-- <span><b>{{get_create_status}}</b></span> -->\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add</button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { routes } from '@src/app/app.routes';\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { environment } from './../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from '@src/app/app-routing.module';\n// import { SweetAlertService } from 'angular-sweetalert-service';\nimport { AppComponent } from '@src/app/app.component';\n\n// import { HighchartModule } from './highchart.module';\nimport { HighchartsChartModule } from 'highcharts-angular';\n// import { FormsModule } from '@angular/forms';\n\n\nimport { HomeComponent } from '@src/app/home/home.component';\nimport { LoginComponent } from '@src/app/login/login.component';\n\n//import { ChartsComponent } from '@src/app/charts/charts/charts.component';\n\nimport { FooterComponent } from '@src/app/footer/footer.component';\nimport { HeaderComponent } from '@src/app/header/header.component';\nimport { LeftSidebarComponent } from '@src/app/left-sidebar/left-sidebar.component';\nimport { MetadataComponent } from '@src/app/metadata/metadata.component';\nimport { BasestationtypeComponent } from '@src/app/metadata/basestationtype/basestationtype.component';\nimport { BuildingtypeComponent } from '@src/app/metadata/buildingtype/buildingtype.component';\nimport { CityComponent } from '@src/app/metadata/city/city.component';\nimport { FlattypeComponent } from '@src/app/metadata/flattype/flattype.component';\nimport { InlettypeComponent } from '@src/app/metadata/inlettype/inlettype.component';\nimport { PipetypeComponent } from '@src/app/metadata/pipetype/pipetype.component';\nimport { MetadataTabsComponent } from '@src/app/metadata-tabs/metadata-tabs.component';\nimport { ReportsComponent } from '@src/app/reports/reports.component';\nimport { FlatreportComponent } from '@src/app/reports/flatreport/flatreport.component';\nimport { BlockreportComponent } from '@src/app/reports/blockreport/blockreport.component';\nimport { BuildingreportComponent } from '@src/app/reports/buildingreport/buildingreport.component';\nimport { RtoreportComponent } from '@src/app/reports/rtoreport/rtoreport.component';\nimport { ChartComponent } from '@src/app/charts/chart/chart.component';\nimport { BasestationchannelComponent } from '@src/app/metadata/basestationchannel/basestationchannel.component';\nimport { BlockComponent } from '@src/app/metadata/block/block.component';\nimport { ConsumerComponent } from '@src/app/metadata/consumer/consumer.component';\nimport { BasestationComponent } from '@src/app/metadata/basestation/basestation.component';\nimport { BuildingComponent } from '@src/app/metadata/building/building.component';\nimport { FlatComponent } from '@src/app/metadata/flat/flat.component';\nimport { InletComponent } from '@src/app/metadata/inlet/inlet.component';\nimport { RTUComponent } from '@src/app/metadata/rtu/rtu.component';\nimport { ConsumerReportComponent } from '@src/app/reports/consumer-report/consumer-report.component';\n\n\nimport 'hammerjs';\nimport { ConsumptionResultComponent } from '@src/app/consumption-result/consumption-result.component';\nimport { TargetComponent } from '@src/app/target/target.component';\nimport { RolematrixComponent } from '@src/app/rolematrix/rolematrix.component';\nimport { RolesettingsComponent } from '@src/app/rolesettings/rolesettings.component';\nimport {RolesettingModule} from '@src/app/rolesettings/rolesetting.module';\n\nimport { UsersComponent } from '@src/app/rolesettings/users/users.component';\nimport { RolebyusersComponent } from '@src/app/rolesettings/rolebyusers/rolebyusers.component';\n\nimport { SignupComponent } from '@src/app/signup/signup.component';\nimport { TargetSettingComponent } from '@src/app/target-setting/target-setting.component';\nimport { TargetByBuildingComponent } from '@src/app/target-setting/target-by-building/target-by-building.component';\nimport { TargetByFlatComponent } from '@src/app/target-setting/target-by-flat/target-by-flat.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // HighchartsChartComponent,\n    HomeComponent,\n    LoginComponent,\n    //ChartsComponent,\n    FooterComponent,\n    HeaderComponent,\n    LeftSidebarComponent,\n    MetadataComponent,\n    BasestationtypeComponent,\n    BuildingtypeComponent,\n    CityComponent,\n    FlattypeComponent,\n    InlettypeComponent,\n    PipetypeComponent,\n    MetadataTabsComponent,\n    ReportsComponent,\n    FlatreportComponent,\n    BlockreportComponent,\n    BuildingreportComponent,\n    RtoreportComponent,\n    ChartComponent,\n    BasestationchannelComponent,\n    BlockComponent,\n    ConsumerComponent,\n    BasestationComponent,\n    BuildingComponent,\n    FlatComponent,\n    InletComponent,\n    RTUComponent,\n    ConsumerReportComponent,\n    ConsumptionResultComponent,\n    TargetComponent,\n    RolematrixComponent,\n    RolesettingsComponent,\n    UsersComponent,\n    RolebyusersComponent,\n\n    SignupComponent,\n    TargetSettingComponent,\n    TargetByBuildingComponent,\n    TargetByFlatComponent\n  ],\n  imports: [\n    BrowserModule,\n    HighchartsChartModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    RolesettingModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { LoginComponent } from '../app/login/login.component'\nimport { HomeComponent } from '../app/home/home.component';\n// dashboards\nimport { ReportsComponent } from '../app/reports/reports.component';\nimport { BlockreportComponent } from '../app/reports/blockreport/blockreport.component';\nimport { BuildingreportComponent } from '../app/reports/buildingreport/buildingreport.component';\nimport { MetadataComponent } from '../app/metadata/metadata.component';\nimport {FlatreportComponent } from '../app/reports/flatreport/flatreport.component';\nimport {RtoreportComponent} from '../app/reports/rtoreport/rtoreport.component';\n// masters\nimport { BasestationComponent } from '../app/metadata/basestation/basestation.component';\nimport { BasestationchannelComponent } from '../app/metadata/basestationchannel/basestationchannel.component';\nimport {BasestationtypeComponent} from '../app/metadata/basestationtype/basestationtype.component';\nimport {BuildingtypeComponent} from '../app/metadata/buildingtype/buildingtype.component';\nimport { BlockComponent } from '../app/metadata/block/block.component';\nimport { BuildingComponent } from '../app/metadata/building/building.component';\nimport {CityComponent} from '../app/metadata/city/city.component';\nimport {ConsumerComponent} from '../app/metadata/consumer/consumer.component';\nimport {FlatComponent } from '../app/metadata/flat/flat.component'\nimport {FlattypeComponent} from '../app/metadata/flattype/flattype.component';\nimport {InletComponent} from '../app/metadata/inlet/inlet.component'\nimport {InlettypeComponent} from '../app/metadata/inlettype/inlettype.component';\nimport {PipetypeComponent} from '../app/metadata/pipetype/pipetype.component';\nimport { RTUComponent } from '../app/metadata/rtu/rtu.component';\nimport {ConsumerReportComponent} from '../app/reports/consumer-report/consumer-report.component';\nimport {ConsumptionResultComponent} from '../app/consumption-result/consumption-result.component';\nimport {TargetSettingComponent} from '../app/target-setting/target-setting.component';\nimport {RolematrixComponent} from './rolematrix/rolematrix.component';\nimport {RolesettingsComponent } from './rolesettings/rolesettings.component';\nimport {UsersComponent} from './rolesettings/users/users.component';\nimport {RolebyusersComponent} from './rolesettings/rolebyusers/rolebyusers.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {TargetByBuildingComponent} from './target-setting/target-by-building/target-by-building.component';\nimport {TargetByFlatComponent} from './target-setting/target-by-flat/target-by-flat.component'\nimport { from } from 'rxjs';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'reports',\n    component: ReportsComponent,\n  },\n  {\n    path: 'charts',\n    component: HomeComponent\n  },\n  {\n    path: 'blockreport',\n    component: BlockreportComponent\n  },\n  {\n    path: 'buildingreport',\n    component: BuildingreportComponent\n  },\n  {\n    path: 'flatreport',\n    component: FlatreportComponent\n  },\n  {\n    path: 'rtoreport',\n    component: RtoreportComponent\n  },\n  {\n    path: 'masterlist',\n    component: MetadataComponent\n  },\n\n  {\n    path: 'basestation',\n    component:BasestationComponent\n  },\n  {\n    path:'basestationchannel',\n    component:BasestationchannelComponent\n  },\n  {\n    path: 'basestationtype',\n    component: BasestationtypeComponent\n  },\n  {\n    path:'block',\n    component:BlockComponent\n  },\n  {\n    path:'building',\n    component:BuildingComponent\n  },\n\n  {\n    path: 'buildingtype',\n    component: BuildingtypeComponent\n  },\n  {\n    path:'city',\n    component:CityComponent\n  },\n  {\n    path:'consumer',\n    component:ConsumerComponent\n  },\n  {\n     path:'flat',\n     component:FlatComponent\n  },\n  {\n    path:'flattype',\n    component:FlattypeComponent\n  },\n  {\n    path:'inlet',\n    component:InletComponent\n  },\n  {\n    path:'inlettype',\n    component:InlettypeComponent\n  },\n  {\n    path:'pipetype',\n    component:PipetypeComponent\n  },\n  {\n    path:'rtu',\n    component:RTUComponent\n  },\n  {\n    path:'consumptionresult',\n    component:ConsumptionResultComponent\n  },\n  {\n    path:'consumerreport',\n    component:ConsumerReportComponent\n  },\n  {\n    path:'targetsetting',\n    component:TargetSettingComponent\n  },\n  {\n    path:'roles',\n    component:RolematrixComponent\n  },\n  {\n    path:'rolesettings',\n    component:RolesettingsComponent\n  },\n  {\n    path:'users',\n    component:UsersComponent\n  },\n  {\n    path:'rolebyuser',\n    component:RolebyusersComponent\n  },\n \n  {\n    path:'signup',\n    component:SignupComponent\n  },\n  {\n    path:'targetbybuilding',\n    component:TargetByBuildingComponent\n  },\n  {\n    path:'targetbyflat',\n    component:TargetByFlatComponent\n  }\n  \n\n\n\n\n];\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { globalToken } from './globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizepageaccessService {\n\n  constructor(private http:HttpClient) { }\n   \n  urls = new globalToken().globalUrl;\n   httpoptions = {\n    headers:new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n   }\n\n\n  getAuthrizationListForpageLock():Observable<any>{\n    return this.http.get(this.urls.urlLink+'/get_authorized_page_by_user', this.httpoptions)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jaGFydC9jaGFydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnN1bXB0aW9uLXJlc3VsdC9jb25zdW1wdGlvbi1yZXN1bHQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { BuildingService } from '../metadata/building/building.service';\nimport { ConsumptionService } from './consumption.service';\nimport { BuildingReportService } from '../reports/buildingreport/building-report.service';\nimport Drilldown from 'highcharts/modules/drilldown';\nDrilldown(Highcharts);\n\n@Component({\n    selector: 'app-consumption-result',\n    templateUrl: './consumption-result.component.html',\n    styleUrls: ['./consumption-result.component.css']\n})\nexport class ConsumptionResultComponent implements OnInit {\n\n    constructor(private buildingService: BuildingService, private consumptionService: ConsumptionService, private buildingReportService: BuildingReportService) { }\n    loader1;\n    selectedYear = '2020';\n    get_building_list;\n   \n    getBuildingLIst() {\n        this.buildingService.getBuildingDetails().subscribe(res => {\n            this.get_building_list = res.building_details;\n            this.selectedOption = this.get_building_list[0]._id;\n            this.get_block_building_report( this.selectedOption,this.selectedYear,this.selectedMonth);\n\n        });\n    };\n\n\n\n    block_flat_response;\n    block_flat_response_for_table;\n    series_data;\n    bar_drilldown;\n    selectedOption:any;\n    selectedMonth:any='';\n    get_block_building_report(selectedOption, selectedYear, selectedMonth) {\n        this.loader1 = true;\n        const json_obj = {\n            'building_id': selectedOption,\n            'year':  selectedYear,\n            'month': selectedMonth\n        };\n        \n        if (json_obj.month) {\n            this.consumptionService.getBuildingconsumptionMonthlysDetails(json_obj).subscribe(res => {\n                this.block_flat_response = res.response;\n                // if(block_flat_response.response.length !=0){\n                    this.chart_render_function();\n                // }\n               \n            });\n\n        \n            this.getBuildingConsumptionTable(json_obj);\n\n        }\n        else {\n            this.consumptionService.getBuildingconsumptionYearlysDetails(json_obj).subscribe(res => {\n                this.block_flat_response = res.response;\n                // if(block_flat_response.response.length !=0){\n                    this.chart_render_function();\n                \n            });\n            this.getBuildingConsumptionTable(json_obj);\n          \n        }\n\n    };\n\n    getBuildingConsumptionTable(json_obj){\n        this.buildingReportService.getBuildingReportForCurrentMonth(json_obj).subscribe(res => {\n            this.block_flat_response_for_table = res.response;\n            this.loader1 = false;\n        });\n    }\n\n    data_list = [];\n    chart_render_function(){\n        this.data_list = [];\n        var block_flat_response = this.block_flat_response;\n        this.block_flat_response.forEach(value => {\n            var data_iterate = {\n                'name': value.block,\n                'y': value.value,\n                // drilldown: value.block\n            };\n\n            \n            this.data_list.push(data_iterate);\n           \n        })\n\n        if(this.data_list.length !=0){\n            this.drilldownbar();\n        }\n     \n    }\n\n\n    drilldownDatasets=[];\n   get_drilldown_flat(options){\n      let drilldownData = options;\n    this.drilldownDatasets=[];\n      this.block_flat_response.forEach(value=>{\n          if(drilldownData.name == value.block){\n            \n            let forTableJson = {\n                'building_id': this.selectedOption,\n                'block_id':value.block_id,\n                'year':  this.selectedYear,\n                'month': this.selectedMonth\n            };\n            this.getBuildingConsumptionTable(forTableJson);\n\n            value.drilldown.forEach(val1=>{\n                var series_json = {\n                    'name': val1.flat,\n                    'y': val1.value\n                     } \n                 this.drilldownDatasets.push(series_json)   \n            })\n          }\n       \n    })\n\n    if(this.drilldownDatasets.length !=0){\n        this.data_list = [];\n        this.data_list = this.drilldownDatasets;\n        this.drilldownbar();\n    }\n\n    }\n\n\n\n    getBlockId(building_details){\n        let json_obj = {\n            'block_id':building_details,\n            'year':  this.selectedYear,\n            'month': this.selectedMonth\n        };\n\n            this.buildingReportService.getBuildingReportForSearchDate(json_obj).subscribe(res => {\n                this.block_flat_response_for_table = res.response;\n                this.loader1 = false;\n            });\n        \n       \n    }\n    \n\n\n    back_to_block(){\n        this.chart_render_function();\n        let forTableJson = {\n            'building_id': this.selectedOption,\n            'year':  this.selectedYear,\n            'month': this.selectedMonth\n        };\n        this.getBuildingConsumptionTable(forTableJson);\n\n    }\n\n\n\n    highcharts;\n    chartOptions;\n    drilldownbar() {\n       \n        this.highcharts = Highcharts;\n        this.chartOptions = {\n            chart: {\n                type: 'column'\n            },\n            title: {\n                text: 'Total Consumption'\n            },\n            subtitle: {\n                text: 'Cosumption Per Block Detail Report'\n            },\n            accessibility: {\n                announceNewData: {\n                    enabled: true\n                }\n            },\n            colors: ['#074e6f', '#017AEB', '#3DC4EB', '#51EBC8', '#43EB9F', '#EBB854', '#EBD454'],\n            xAxis: {\n                type: 'category'\n            },\n            yAxis: {\n                title: {\n                    text: 'Total Consumption by each Block'\n                }\n\n            },\n\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    borderWidth: 0,\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.y}'\n                    },\n                    cursor: 'pointer',\n                    point: {\n                        events: {\n                            click: (e)=> {\n                                 \n                                   this.get_drilldown_flat(e.point.options)\n                            }\n                        }\n                    }\n                },\n\n            },\n\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\n            },\n\n\n            series: [\n                {\n                    name: \"Block Details\",\n                    colorByPoint: true,\n                    data:this.data_list\n                }\n            ],\n         \n          \n        };\n    }\n\n\n\n    ngOnInit() {\n        this.getBuildingLIst();\n       \n        \n\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumptionService {\n\n\n  constructor(private http: HttpClient) { }\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders ({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n\n  getBuildingconsumptionMonthlysDetails(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_block_flat_details_by_month',sendSelectedParam, this.httpOptions)\n    // year  rtu_id\n  }\n\n\n  getBuildingconsumptionYearlysDetails(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_block_flat_details_by_year',sendSelectedParam, this.httpOptions)\n    // rtu_id\n  }\n\n\n\n}\n\n\n// for association\n// get_block_flat_details_by_month","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\n\nexport class globalToken {\n    \n  \n    getGlobalTokenFunction(token){\n        let tokens = token;\n        localStorage.setItem('dynamicToken',tokens)\n        \n    };\n\n   \n    globalUrl ={\n         'token':localStorage.getItem('dynamicToken'),\n        //  'urlLink':'https://9057007c.ngrok.io'\n         'urlLink':'http://122.166.156.230:30002'\n\n     };\n   \n  \n\n \n}\n\n// \"Token 02c959071122421d5e0b085f03f33982fc727e04\"","module.exports = \".header {\\n    background-color: #ffffff;\\n    box-shadow: 1px 1px 4px 1px #c7c7c7;\\n    padding: 4px 44px 3px 44px;\\n}\\n\\n.menu-toggle {\\n    font-size: 23px;\\n    cursor: pointer;\\n    color: #424242;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLG1DQUFtQztJQUNuQywwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIGJveC1zaGFkb3c6IDFweCAxcHggNHB4IDFweCAjYzdjN2M3O1xuICAgIHBhZGRpbmc6IDRweCA0NHB4IDNweCA0NHB4O1xufVxuXG4ubWVudS10b2dnbGUge1xuICAgIGZvbnQtc2l6ZTogMjNweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6ICM0MjQyNDI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router:Router) { }\n  \n  openNav() {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n  }\n\n\n  signOut(){\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n  \n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../globaltoken';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeServiceService {\n\n  constructor(private http: HttpClient) { }\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n\n  getBuildingconsumptionDayDetails(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingAverageConsumptionByDay',sendSelectedParam, this.httpOptions)\n    // year  rtu_id\n  }\n\n  getBuildingconsumptionMonthlyDetails(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingAverageConsumptionByMonth',sendSelectedParam, this.httpOptions)\n    // year month  rtu_id\n  }\n  getBuildingconsumptionYearlyDetails(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingAverageConsumptionByYear',sendSelectedParam, this.httpOptions)\n    // rtu_id\n  }\n\n}\n","module.exports = \".multiple_report {\\n    height: 100px;\\n    width: 46%;\\n    float: left;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #03A9F4;\\n    box-shadow: 3px 5px 2px -1px #b7b7b7;\\n    background-color: #03A9F4;\\n    padding: 25px 6px;\\n}\\n\\n.multiple_report .fa {\\n    font-size: 18px;\\n    color: white;\\n    background-color: #FF9800;\\n    border-radius: 50%;\\n    padding: 15px 14px;\\n}\\n\\n.report_title {\\n    color: white;\\n}\\n\\n.sub_title {\\n    font-size: 12px;\\n    color: #1b1b1b;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n\\n/* bullet chart */\\n\\n#container1 {\\n    height: 115px;\\n}\\n\\n.hc-cat-title {\\n    font-size: 13px;\\n    font-weight: bold;\\n}\\n\\n.highcharts-figure,\\n.highcharts-data-table table {\\n    min-width: 320px;\\n    max-width: 800px;\\n    margin: 1em auto;\\n}\\n\\n.highcharts-data-table table {\\n    font-family: Verdana, sans-serif;\\n    border-collapse: collapse;\\n    border: 1px solid #EBEBEB;\\n    margin: 10px auto;\\n    text-align: center;\\n    width: 100%;\\n    max-width: 500px;\\n}\\n\\n.highcharts-data-table caption {\\n    padding: 1em 0;\\n    font-size: 1.2em;\\n    color: #555;\\n}\\n\\n.highcharts-data-table th {\\n    font-weight: 600;\\n    padding: 0.5em;\\n}\\n\\n.highcharts-data-table td,\\n.highcharts-data-table th,\\n.highcharts-data-table caption {\\n    padding: 0.5em;\\n}\\n\\n.highcharts-data-table thead tr,\\n.highcharts-data-table tr:nth-child(even) {\\n    background: #f8f8f8;\\n}\\n\\n.highcharts-data-table tr:hover {\\n    background: #f1f7ff;\\n}\\n\\n.gadget_box {\\n    padding: 28px 6px 28px 3px;\\n}\\n\\n.right_38 {\\n    right: 38px;\\n}\\n\\n@media screen and (max-width:720px) {\\n    .color_level_bullet {\\n        position: relative;\\n    }\\n}\\n\\n/* bullet chart */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsVUFBVTtJQUNWLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixvQ0FBb0M7SUFDcEMseUJBQXlCO0lBQ3pCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUdBLGlCQUFpQjs7QUFFakI7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyx5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7O0FBRUE7OztJQUdJLGNBQWM7QUFDbEI7O0FBRUE7O0lBRUksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0k7UUFDSSxrQkFBa0I7SUFDdEI7QUFDSjs7QUFHQSxpQkFBaUIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdWx0aXBsZV9yZXBvcnQge1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgd2lkdGg6IDQ2JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwM0E5RjQ7XG4gICAgYm94LXNoYWRvdzogM3B4IDVweCAycHggLTFweCAjYjdiN2I3O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwM0E5RjQ7XG4gICAgcGFkZGluZzogMjVweCA2cHg7XG59XG5cbi5tdWx0aXBsZV9yZXBvcnQgLmZhIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRjk4MDA7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDE1cHggMTRweDtcbn1cblxuLnJlcG9ydF90aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG4uc3ViX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6ICMxYjFiMWI7XG59XG5cbi5ib3gtYm9keSBoNiB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBtYXJnaW4tbGVmdDogMTNweDtcbn1cblxuXG4vKiBidWxsZXQgY2hhcnQgKi9cblxuI2NvbnRhaW5lcjEge1xuICAgIGhlaWdodDogMTE1cHg7XG59XG5cbi5oYy1jYXQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmhpZ2hjaGFydHMtZmlndXJlLFxuLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0YWJsZSB7XG4gICAgbWluLXdpZHRoOiAzMjBweDtcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgIG1hcmdpbjogMWVtIGF1dG87XG59XG5cbi5oaWdoY2hhcnRzLWRhdGEtdGFibGUgdGFibGUge1xuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBzYW5zLXNlcmlmO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0VCRUJFQjtcbiAgICBtYXJnaW46IDEwcHggYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLmhpZ2hjaGFydHMtZGF0YS10YWJsZSBjYXB0aW9uIHtcbiAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIGNvbG9yOiAjNTU1O1xufVxuXG4uaGlnaGNoYXJ0cy1kYXRhLXRhYmxlIHRoIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIHBhZGRpbmc6IDAuNWVtO1xufVxuXG4uaGlnaGNoYXJ0cy1kYXRhLXRhYmxlIHRkLFxuLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0aCxcbi5oaWdoY2hhcnRzLWRhdGEtdGFibGUgY2FwdGlvbiB7XG4gICAgcGFkZGluZzogMC41ZW07XG59XG5cbi5oaWdoY2hhcnRzLWRhdGEtdGFibGUgdGhlYWQgdHIsXG4uaGlnaGNoYXJ0cy1kYXRhLXRhYmxlIHRyOm50aC1jaGlsZChldmVuKSB7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmODtcbn1cblxuLmhpZ2hjaGFydHMtZGF0YS10YWJsZSB0cjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2YxZjdmZjtcbn1cblxuLmdhZGdldF9ib3gge1xuICAgIHBhZGRpbmc6IDI4cHggNnB4IDI4cHggM3B4O1xufVxuXG4ucmlnaHRfMzgge1xuICAgIHJpZ2h0OiAzOHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjcyMHB4KSB7XG4gICAgLmNvbG9yX2xldmVsX2J1bGxldCB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG59XG5cblxuLyogYnVsbGV0IGNoYXJ0ICovIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {HomeServiceService} from './home-service.service';\nimport {BuildingService} from '../metadata/building/building.service';\nimport { FormBuilder } from '@angular/forms';\nimport Bullet from 'highcharts/modules/bullet';\nBullet(Highcharts);\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n \n  constructor(private homeserviceService: HomeServiceService, private buildingservice:BuildingService, private fb: FormBuilder) { }\n  \n\n  selectedView:any = 'month';\n\n\n  RTUreportResponse;\n  loader1;\n  getBuildingList;\n  getBuildingdata() {\n    this.buildingservice.getBuildingDetails().subscribe(response => {\n      this.getBuildingList = response.building_details;\n      this.selectedOption = response.building_details[0]._id;\n      setTimeout(()=>{\n        this.get_block_building_report();\n      },400);\n    });\n  }\n\n  \n  years:string[] = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n  selectedYear = \"2020\";\n\n   monthList:any[] = [\n    {'monthname':'Jan', 'monthnumber':1},\n    {'monthname':'Feb', 'monthnumber':2},\n    {'monthname':'Mar', 'monthnumber':3},\n    {'monthname':'Apr', 'monthnumber':4},\n    {'monthname':'May', 'monthnumber':5},\n    {'monthname':'Jun', 'monthnumber':6},\n    {'monthname':'Jul', 'monthnumber':7},\n    {'monthname':'Aug', 'monthnumber':8},\n    {'monthname':'Sep', 'monthnumber':9},\n    {'monthname':'Oct', 'monthnumber':11},\n    {'monthname':'Nov', 'monthnumber':12},\n  ];\n  \n\n  building_id:any;\n  selectedOption:any\n  get_rtu_id(selectedOption){\n    this.building_id = selectedOption;\n  };\n\n  selected_year;\n  get_year(selectedYear){\n    this.selected_year = selectedYear;    \n  };\n  selectedMonth:any=1;\n  selected_month:any = 1;\n  get_Month(selectedM){\n    this.selected_month = Number(selectedM);\n    \n  }\n\n  \n  get_building_report_day(){\n\n    this.loader1 = true;\n    const json_obj = {\n      'building_id':(!this.building_id?this.selectedOption:this.building_id),\n      'year':(!this.selected_year?this.selectedYear:this.selected_year),\n      'month':this.selected_month\n    };\n    this.homeserviceService.getBuildingconsumptionDayDetails(json_obj).subscribe(res=>{\n          this.RTUreportResponse= res.response;\n          this.bulletChart(this.RTUreportResponse);\n        });\n  }\n\n\n  get_building_report_monthly(){\n    this.loader1 = true;\n    const json_obj = {\n      'building_id':(!this.building_id?this.selectedOption:this.building_id),\n      'year':Number(!this.selected_year?this.selectedYear:this.selected_year),\n      'month':this.selected_month\n    };\n    this.homeserviceService.getBuildingconsumptionMonthlyDetails(json_obj).subscribe(res=>{\n          this.RTUreportResponse= res.response;\n          this.bulletChart(this.RTUreportResponse);\n        });\n  }\n\n\n  get_building_report_year(){\n    this.loader1 = true;\n    const json_obj = {\n      'building_id':(!this.building_id?this.selectedOption:this.building_id)\n    };\n    this.homeserviceService.getBuildingconsumptionYearlyDetails(json_obj).subscribe(res=>{\n          this.RTUreportResponse= res.response;\n          this.bulletChart(this.RTUreportResponse);\n        });\n  }\n\n\n// call all month year and day api based on function\nget_block_building_report(){\n  if(this.selectedView == 'year'){\n    this.get_building_report_monthly();\n  } else if(this.selectedView == 'month'){\n    this.get_building_report_monthly();\n  }\n  else if(this.selectedView == 'day'){\n    this.get_building_report_monthly();\n  }\n};\n\n// call all month year and day api based on function\n  \n\n  highcharts;\n  chartOptions;\n  bulletChart(bulletData) {\n    this.loader1 = false;\n   this.highcharts = Highcharts;\n  this.chartOptions = {   \n    chart: {\n      marginTop: 40,\n       inverted: true,\n      marginLeft: 60,\n      type: 'bullet'\n  },\n    legend: {\n      enabled: false\n  },\n  title: {\n      text: 'Current Consumption ' +(!this.selected_year?'':this.selected_year)\n  },\n  xAxis: {\n      categories: ['Usage']\n  },\n   exporting: {\n      enabled: false\n  },\n  yAxis: {\n   gridLineWidth: 0,\n      plotBands: [{\n          from: 0,\n          to: (!bulletData?30000:(bulletData.target==0)?30000:(bulletData.target + 80000)),\n          color: '#91ddff'\n      }],\n      title: null\n  },\n   plotOptions: {\n      series: {\n          pointPadding: 0.25,\n          borderWidth: 0,\n          color: (!bulletData?'#8BC34A': (bulletData.percentage==0)?'#8BC34A': (bulletData.percentage < 70)?'#8BC34A':((bulletData.percentage > 70) && (bulletData.percentage < 90))?'#FF2AA0':'#FF2A1F'),\n          targetOptions: {\n              width: '200%'\n          }\n      }\n  },\n  series: [{\n      data: [{\n          y: (!bulletData?0:(bulletData.value==0)?100 : (bulletData.value)),\n          target: (!bulletData?25000:(bulletData.target==0)?25000:bulletData.target)\n      }]\n  }],\n  tooltip: {\n      pointFormat: '<b>{point.y}</b> (with target at {point.target})'\n  }\n  };\n }\n\n  ngOnInit() {\n  //  this.getRTUConsumptionMonthly();\n  this.getBuildingdata();  \n  }\n}\n\n\n","module.exports = \".sidenav {\\n    height: 100%;\\n    width: 0;\\n    position: fixed;\\n    z-index: 2;\\n    top: 0;\\n    left: 0;\\n    background-color: #fff;\\n    overflow-x: hidden;\\n    transition: 0.5s;\\n    padding-top: 10em;\\n    box-shadow: -2px 6px 5px 1px grey;\\n}\\n\\n.sidenav a {\\n    padding: 8px 8px 8px 32px;\\n    text-decoration: none;\\n    font-size: 17px;\\n    color: #005880;\\n    display: block;\\n    transition: 0.3s;\\n}\\n\\n.sidenav a:hover {\\n    color: #f1f1f1;\\n}\\n\\n.sidenav .closebtn {\\n    position: absolute;\\n    top: 0;\\n    right: 25px;\\n    font-size: 36px;\\n    margin-left: 50px;\\n}\\n\\n@media screen and (max-height: 450px) {\\n    .sidenav {\\n        padding-top: 15px;\\n    }\\n    .sidenav a {\\n        font-size: 18px;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGVmdC1zaWRlYmFyL2xlZnQtc2lkZWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFFBQVE7SUFDUixlQUFlO0lBQ2YsVUFBVTtJQUNWLE1BQU07SUFDTixPQUFPO0lBQ1Asc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sV0FBVztJQUNYLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSTtRQUNJLGlCQUFpQjtJQUNyQjtJQUNBO1FBQ0ksZUFBZTtJQUNuQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvbGVmdC1zaWRlYmFyL2xlZnQtc2lkZWJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMjtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgIHBhZGRpbmctdG9wOiAxMGVtO1xuICAgIGJveC1zaGFkb3c6IC0ycHggNnB4IDVweCAxcHggZ3JleTtcbn1cblxuLnNpZGVuYXYgYSB7XG4gICAgcGFkZGluZzogOHB4IDhweCA4cHggMzJweDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGNvbG9yOiAjMDA1ODgwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRyYW5zaXRpb246IDAuM3M7XG59XG5cbi5zaWRlbmF2IGE6aG92ZXIge1xuICAgIGNvbG9yOiAjZjFmMWYxO1xufVxuXG4uc2lkZW5hdiAuY2xvc2VidG4ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDI1cHg7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogNDUwcHgpIHtcbiAgICAuc2lkZW5hdiB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIH1cbiAgICAuc2lkZW5hdiBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthorizepageaccessService} from '../authorizepageaccess.service';\nimport { Subscriber } from 'rxjs';\n@Component({\n  selector: 'app-left-sidebar',\n  //moduleId: module.id,\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.css']\n})\nexport class LeftSidebarComponent implements OnInit {\n\n  constructor(private authAccessScreen:AuthorizepageaccessService) { }\n\n  closeNav() {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n\n  accessPageList:any;\n  authAccessScreenLockFunction(){\n    this.authAccessScreen.getAuthrizationListForpageLock().subscribe(res=>{\n      this.accessPageList= res;\n    });\n  }\n  \n  ngOnInit() {\n    this.authAccessScreenLockFunction();\n  }\n\n}\n","module.exports = \".login_head {\\n    text-align: center;\\n    font-weight: 100;\\n    font-size: 30px;\\n    color: #7b7b7b;\\n    text-transform: lowercase;\\n}\\n\\ninput {\\n    outline: none;\\n    border: none;\\n}\\n\\n.login-box h3 {\\n    text-align: center;\\n    font-weight: 900;\\n    font-size: 34px;\\n    color: #3bc2ff;\\n}\\n\\ninput:focus {\\n    border-color: transparent !important;\\n}\\n\\ninput:focus::-webkit-input-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus:-moz-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus::-moz-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus:-ms-input-placeholder {\\n    color: transparent;\\n}\\n\\ninput::-webkit-input-placeholder {\\n    color: #adadad;\\n}\\n\\ninput:-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ninput::-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ninput:-ms-input-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea::-webkit-input-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea:-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea::-moz-placeholder {\\n    color: #adadad;\\n}\\n\\n/*---------------------------------------------*/\\n\\nbutton {\\n    outline: none !important;\\n    border: none;\\n    background: transparent;\\n}\\n\\nbutton:hover {\\n    cursor: pointer;\\n}\\n\\niframe {\\n    border: none !important;\\n}\\n\\n.container-login100 {\\n    width: 100%;\\n    min-height: 100vh;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 15px;\\n    background: #ffffff;\\n}\\n\\n.wrap-login100 {\\n    background: #fff;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    padding: 23px 4px 19px 4px;\\n}\\n\\n/*------------------------------------------------------------------\\n[ Form ]*/\\n\\n.login100-form {\\n    width: 100%;\\n}\\n\\n.login100-form-title i {\\n    font-size: 60px;\\n}\\n\\n/*------------------------------------------------------------------\\n[ Input ]*/\\n\\n.wrap-input100 {\\n    width: 100%;\\n    position: relative;\\n    margin-bottom: 15px;\\n    border: 1px solid #e2e8f0;\\n    border-radius: 7px;\\n}\\n\\n.input100 {\\n    font-family: Poppins-Regular;\\n    font-size: 15px;\\n    color: #555555;\\n    line-height: 1.2;\\n    display: block;\\n    width: 100%;\\n    height: 45px;\\n    background: transparent;\\n    padding: 0 5px;\\n}\\n\\n/*---------------------------------------------*/\\n\\n/*//////////////////////////////////////////////////////////////////\\n[ RESTYLE TAG ]*/\\n\\n/*---------------------------------------------*/\\n\\n.focus-input100 {\\n    position: absolute;\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n.focus-input100::before {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    bottom: -2px;\\n    left: 0;\\n    width: 0;\\n    height: 2px;\\n    transition: all 0.4s;\\n    background: #16b6ff;\\n}\\n\\n.focus-input100::after {\\n    font-family: Poppins-Regular;\\n    font-size: 15px;\\n    color: #999999;\\n    line-height: 1.2;\\n    content: attr(data-placeholder);\\n    display: block;\\n    width: 100%;\\n    position: absolute;\\n    top: 16px;\\n    left: 0px;\\n    padding-left: 5px;\\n    transition: all 0.4s;\\n}\\n\\n.input100:focus+.focus-input100::after {\\n    top: -15px;\\n}\\n\\n.input100:focus+.focus-input100::before {\\n    width: 100%;\\n}\\n\\n.has-val.input100+.focus-input100::after {\\n    top: -15px;\\n}\\n\\n.has-val.input100+.focus-input100::before {\\n    width: 100%;\\n}\\n\\n/* .login-box {\\n    margin-top: 3em;\\n    border: 1px solid #e2e2e2;\\n    padding: 19px 14px 27px 14px;\\n    background-color: white;\\n} */\\n\\n.login_section {\\n    padding: 0;\\n}\\n\\n.login_section .btn {\\n    background-color: #16b6ff;\\n    color: white;\\n    width: 100%;\\n}\\n\\n.p-t-115 {\\n    margin-top: 19px;\\n    font-size: 14px;\\n}\\n\\n.login_signup_form {\\n    margin-top: 7em;\\n    position: absolute;\\n    right: 62px;\\n}\\n\\n.login_btn_style {\\n    line-height: 1.9;\\n}\\n\\n.label_sign {\\n    font-size: 13.6px;\\n    font-weight: 600;\\n    color: #616161;\\n}\\n\\n.sign_in_up {\\n    margin: 64px 0 0;\\n    font-size: 30px;\\n    font-weight: 900;\\n    letter-spacing: -.022em;\\n    line-height: 1.25;\\n}\\n\\n.content-container {\\n    background: #16b6ff;\\n    color: #fff;\\n    position: relative;\\n    padding: 12px 164px 700px 128px;\\n}\\n\\n.content-container .background path {\\n    fill: #e5edff;\\n}\\n\\n.content-container .background path {\\n    opacity: .1;\\n}\\n\\n.content-container .content {\\n    margin-top: -7em;\\n}\\n\\n.content-container .content .title {\\n    font-size: 38px;\\n    line-height: 54px;\\n    font-weight: 900;\\n}\\n\\n.content-container .content .description {\\n    margin-top: 14px;\\n}\\n\\n.learn-more-button {\\n    margin-top: 61px;\\n    color: white;\\n    border: 1px solid white;\\n    padding: 10px 23px 10px 23px;\\n    border-radius: 6px;\\n}\\n\\n@media screen and (max-width:720px) {\\n    .right_login_section {\\n        display: none;\\n    }\\n    .login_signup_form {\\n        right: 1px;\\n        margin-top: 5em;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { FormBuilder } from '@angular/forms';\nimport {  Router } from '@angular/router';\nimport {globalToken} from '../globaltoken';\n\n// import { FormBuilder } from '@angular/forms';\nimport * as $ from 'jquery';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  //moduleId: module.id,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private fb: FormBuilder, private loginServ: LoginService,public router: Router, private globalSev:globalToken) { }\n  login_token;\n  token_no;\n  loginForm = this.fb.group({\n    email:[''],\n    password:['']\n  })\n\n  loader;\n  wrong_password;\n  login(){\n  this.loader = true;\n   this.loginServ.logintoserver(this.loginForm.value.email, this.loginForm.value.password).subscribe((response:any) => {\n    this.login_token = response;\n    this.token_no = response.token;\n    this.loader = false;\n    if(this.login_token.token != 'Error Token'){ \n     if(this.login_token.token != 'Incorrect Password'){\n      this.getTokenFunction()\n      this.router.navigate(['/home']);\n    }\n    else {\n      this.wrong_password = true;\n      setTimeout(()=>{\n        this.wrong_password = false;\n      },3000)\n    }\n  }\n    else {\n      this.wrong_password = true;\n      setTimeout(()=>{\n        this.wrong_password = false;\n      },3000)\n    }\n   \n}); \n  };\n\n\n  getTokenFunction(){\n    this.globalSev.getGlobalTokenFunction('Token'+' '+this.token_no);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class LoginModel {\n    constructor(\n        public email: string,\n        public password: string\n      ) {}\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginModel } from './login.model';\nimport { globalToken } from '../globaltoken';\n// import { URL } from '../shared/sharedconstants';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n    constructor(private http: HttpClient) {}\n   \n\n    urls = new globalToken().globalUrl;\n    httpOptions = {\n        headers: new HttpHeaders({ \n            'Content-Type': 'application/x-www-form-urlencoded'\n\n     })\n      };\n\n    \n    logintoserver(email: string, password: string):Observable<any> {\n        const login_model = new LoginModel(email, password);\n        return this.http.post(this.urls.urlLink+'/get_token_from_email_and_password', login_model)\n           \n    }\n    \n} ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhLXRhYnMvbWV0YWRhdGEtdGFicy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metadata-tabs',\n  //moduleId: module.id,\n  templateUrl: './metadata-tabs.component.html',\n  styleUrls: ['./metadata-tabs.component.css']\n})\nexport class MetadataTabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2Jhc2VzdGF0aW9uL2Jhc2VzdGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n// import { SweetAlertService } from 'angular-sweetalert-service';\nimport { BasestationService } from './basestation.service';\nimport {BlockService} from '../block/block.service';\nimport { BasestationtypeService } from '../basestationtype/basestationtype.service';\n\n\n\n@Component({\n  selector: 'app-basestation',\n  templateUrl: './basestation.component.html',\n  styleUrls: ['./basestation.component.css']\n})\nexport class BasestationComponent implements OnInit {\n\n  constructor( private fb: FormBuilder, private basestationservice: BasestationService, private blockservice:BlockService, private basestationtypeservice:BasestationtypeService) { }\n\n  getBasestationList: any;\n  getBaseStation() {\n    this.basestationservice.getBaseStationDetails().subscribe(response => {\n      this.getBasestationList = response.base_station_list;\n    });\n\n  }\n\n  getBasestationTypeList;\n  getBaseStationType() {\n    this.basestationtypeservice.getBaseStationTypeDetails().subscribe(response => {\n      this.getBasestationTypeList = response.base_station_types;\n    });\n  }\n  \n\n  getBlockServiceDet;\n  getBlockServiceDetailss(){\n    this.blockservice.getBlockServiceDetails().subscribe(response => {\n     this.getBlockServiceDet = response.block_details;\n }); \n}\n\n  get_create_status;\n  createBasestationForm = this.fb.group({\n    base_station_id: [''],\n    block_id: [''],\n    mac_id: [''],\n    ip_address: [''],\n    base_station_type:['']\n  })\n\n\n  \n  createBasestation() {\n   \n    this.basestationservice.createBaseStation(this.createBasestationForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        this.getBaseStation();\n\n      }\n     \n    })\n  }\n\n\n  get_delete_status;\n  delete_json;\n  deleteBasestation(baseStationObj) {\n    this.delete_json = {\n      '_id':baseStationObj\n    }\n    this.basestationservice.deleteBaseStation(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getBaseStation();\n      }\n     \n    })\n  }\n\n  editResponse;\n  editEachBaesstationFunction(baseStationObj){\n    let json_obj:any ={\n      'base_station_id':baseStationObj.base_station_id,\n      'block_id':baseStationObj.block._id,\n      'mac_id':baseStationObj.mac_id,\n      'ip_address':baseStationObj.ip_address,\n      'base_station_type':baseStationObj.base_station_type,\n      '_id':baseStationObj._id\n    };\n    this.basestationservice.editEachBasestation(json_obj).subscribe(res=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getBaseStation();\n   }\n    });\n  }\n\n  ngOnInit() {\n    this.getBaseStation();\n    this.getBlockServiceDetailss();\n    this.getBaseStationType();\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasestationService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBaseStationDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/basestation/get_all_base_station', this.httpOptions)\n  }\n\n  createBaseStation(createBasestationForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/basestation/create_base_station',createBasestationForm, this.httpOptions)\n  }\n\n  deleteBaseStation(deleteBasestationForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/basestation/delete_base_station',deleteBasestationForm, this.httpOptions)\n  }\n\n  editEachBasestation(editedObj):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/basestation/edit_base_station',editedObj, this.httpOptions)\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2Jhc2VzdGF0aW9uY2hhbm5lbC9iYXNlc3RhdGlvbmNoYW5uZWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BasestationService } from '../basestation/basestation.service';\nimport { BasestationchannelService } from './basestationchannel.service';\n\n\n@Component({\n  selector: 'app-basestationchannel',\n  templateUrl: './basestationchannel.component.html',\n  styleUrls: ['./basestationchannel.component.css']\n})\nexport class BasestationchannelComponent implements OnInit {\n\n  constructor(private basestationchannel: BasestationchannelService, private fb: FormBuilder, private basestationService: BasestationService) { }\n\n  getBasestationList: any;\n  getBaseStation() {\n    this.basestationService.getBaseStationDetails().subscribe(response => {\n      this.getBasestationList = response.base_station_list;\n    });\n\n  }\n\n  getBasestationChannelList;\n  getBaseStationChannel() {\n    this.basestationchannel.getBaseStationChannelDetails().subscribe(response => {\n      this.getBasestationChannelList = response.base_station_channel_list;\n    });\n\n  }\n\n\n  get_create_status;\n  createBasestationChannelForm = this.fb.group({\n    base_station_channel_id: [''],\n    base_station_id: ['']\n  })\n\n\n  \n  createBasestationChannels() {\n    console.log(this.createBasestationChannelForm.value)\n    this.basestationchannel.createBaseStationChannel(this.createBasestationChannelForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added')\n        this.getBaseStationChannel();\n\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteBasestationChannel(getBasestationChannelObj) {\n    this.delete_json = {\n      '_id':getBasestationChannelObj._id\n    }\n    this.basestationchannel.deleteBaseStationChannel(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getBaseStationChannel();\n      }\n     \n    })\n  }\n  \n  editResponse;\n  editEachBaesstationChannelFunction(getBasestationChannelObj){\n    let json_obj:any ={\n      'base_station_channel_id':getBasestationChannelObj.base_station_channel_id,\n      'base_station_id':getBasestationChannelObj.base_station_id,\n      '_id':getBasestationChannelObj._id\n    };\n    this.basestationchannel.editBasestationChannel(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getBaseStationChannel();\n   }\n    });\n  }\n\n\n  ngOnInit() {\n    this.getBaseStation();\n    this.getBaseStationChannel();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasestationchannelService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBaseStationChannelDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/basestationchannel/get_all_base_station_channel', this.httpOptions)\n  }\n\n  createBaseStationChannel(createBasestationChannelForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/basestationchannel/create_base_station_channel',createBasestationChannelForm, this.httpOptions)\n  }\n\n  deleteBaseStationChannel(delete_json:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/basestationchannel/delete_base_station_channel',delete_json, this.httpOptions)\n  }\n\n  editBasestationChannel(editedObj){\n    return this.http.post(this.urls.urlLink+'/basestationchannel/edit_base_station_channel',editedObj, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2Jhc2VzdGF0aW9udHlwZS9iYXNlc3RhdGlvbnR5cGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BasestationtypeService } from './basestationtype.service';\n\n@Component({\n  selector: 'app-basestationtype',\n  templateUrl: './basestationtype.component.html',\n  styleUrls: ['./basestationtype.component.css']\n})\nexport class BasestationtypeComponent implements OnInit {\n\n  constructor(private basestationtypeservice: BasestationtypeService, private fb: FormBuilder) { }\n\n  getBasestationTypeList;\n  getBaseStationType() {\n    this.basestationtypeservice.getBaseStationTypeDetails().subscribe(response => {\n      this.getBasestationTypeList = response.base_station_types;\n    });\n  }\n\n  get_create_status;\n  createBasestationTypeForm = this.fb.group({\n    base_station_type: ['']\n  })\n\n\n  \n  createBasestationTypes() {\n    console.log(this.createBasestationTypeForm.value)\n    this.basestationtypeservice.createBaseStationTypeService(this.createBasestationTypeForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Base Station')\n        this.getBaseStationType();\n\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteBasestationType(basestationTypeObj) {\n    this.delete_json = {\n      'base_station_type':basestationTypeObj\n    }\n    this.basestationtypeservice.deleteBaseStationtype(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getBaseStationType();\n      }\n     \n    })\n  };\n\n\n  editResponse;\n  editBasestationtypeFunction(basestationTypeObj){\n    let json_obj:any ={\n      'base_station_channel_id':basestationTypeObj.base_station_channel_id,\n      'base_station_id':basestationTypeObj.base_station_id,\n      '_id':basestationTypeObj._id\n    };\n    this.basestationtypeservice.editBasestationtype(json_obj).subscribe((res:any)=>{\n      this.editResponse = res.response;\n    })\n  }\n\n\n  ngOnInit() {\n    this.getBaseStationType();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasestationtypeService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBaseStationTypeDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllBaseStationTypes', this.httpOptions)\n  }\n\n  createBaseStationTypeService(createBasestationTypeForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreateBaseStationType',createBasestationTypeForm, this.httpOptions)\n  }\n\n  deleteBaseStationtype(delete_json:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/delete_base_station_type',delete_json, this.httpOptions)\n  }\n\n  editBasestationtype(editObj):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/metadata/edit_base_station_type',editObj, this.httpOptions)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2Jsb2NrL2Jsb2NrLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BlockService } from './block.service';\nimport {BuildingService} from '../building/building.service';\n\n@Component({\n  selector: 'app-block',\n  templateUrl: './block.component.html',\n  styleUrls: ['./block.component.css']\n})\nexport class BlockComponent implements OnInit {\n\n  constructor(private blockservice: BlockService, private fb: FormBuilder, private buildingService: BuildingService ) { }\n\n  \n  getBlockServiceDet;\n  getBlockServiceDetailss() {\n    this.blockservice.getBlockServiceDetails().subscribe(response => {\n      this.getBlockServiceDet = response.block_details;\n    });\n\n  }\n\n  getBuildingDet;\n  getBuildingDetailss(){\n    this.buildingService.getBuildingDetails().subscribe(response => {\n     this.getBuildingDet = response.building_details;\n }); \n}\n\n  get_create_status;\n  createBlockForm = this.fb.group({\n    block_id: [''],\n    building_id: [''],\n    block_name: [''],\n    num_of_flats: [''],\n  })\n\n\n  \n  createBlocks() {\n    console.log(this.createBlockForm.value)\n    this.blockservice.createBlockService(this.createBlockForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added')\n        this.getBlockServiceDetailss();\n\n      }\n     \n    })\n  };\n\n\n  get_delete_status;\n  delete_json;\n  deleteBlocks(getBlockdetailObj) {\n    this.delete_json = {\n      '_id':getBlockdetailObj._id\n    }\n    this.blockservice.deleteBlock(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response == 'success'){\n        this.getBlockServiceDetailss();\n      }\n     \n    })\n  }\n\n  editResponse;\n  editBlockFunction(getBlockdetailObj){\n    let json_obj:any ={\n      'block_id':getBlockdetailObj.block_id,\n      'building_id':getBlockdetailObj.building_id,\n      'block_name':getBlockdetailObj.block_name,\n      'num_of_flats':getBlockdetailObj.num_of_flats,\n      '_id':getBlockdetailObj._id\n    };\n    this.blockservice.editBlock(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getBlockServiceDetailss();\n   }\n    });\n  }\n\n\n  ngOnInit() {\n    this.getBlockServiceDetailss();\n    this.getBuildingDetailss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBlockServiceDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/block/get_all_block_detail', this.httpOptions)\n  }\n\n  createBlockService(createBasestationForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/create_block',createBasestationForm, this.httpOptions)\n  }\n\n  deleteBlock(deleteBasestationForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/delete_block',deleteBasestationForm, this.httpOptions)\n  }\n  editBlock(editedObj){\n    return this.http.post(this.urls.urlLink+'/block/edit_block',editedObj, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2J1aWxkaW5nL2J1aWxkaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {BuildingService} from './building.service';\nimport { BuildingtypeService } from '../buildingtype/buildingtype.service';\nimport { PipetypeService } from '../pipetype/pipetype.service';\nimport { CityService } from '../city/city.service';\n\n@Component({\n  selector: 'app-building',\n  templateUrl: './building.component.html',\n  styleUrls: ['./building.component.css']\n})\nexport class BuildingComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private buildingService: BuildingService, private buildingtypeService: BuildingtypeService, private pipetypeservice: PipetypeService,\n    private cityService: CityService) { }\n\n  getBuildingDet;\n  getBuildingDetailss(){\n    this.buildingService.getBuildingDetails().subscribe(response => {\n     this.getBuildingDet = response.building_details;\n }); \n}\n\ngetCityDetailList: any;\ngetCityLists() {\n  this.cityService.getCityDetails().subscribe(response => {\n    this.getCityDetailList = response.city_list;\n  });\n}\n\ngetPipeData;\ngetPipeDetailsList() {\n  this.pipetypeservice.getPipeDetailss().subscribe(response => {\n    this.getPipeData = response.pipe_type_list;\n  });\n}\n\ngetBuildingTypeList: any;\n  getBuildingTypeDet() {\n    this.buildingtypeService.getBuildingTypeDetails().subscribe(response => {\n      this.getBuildingTypeList = response.building_types;\n    });\n\n  }\n\n get_create_status;\n createBuildingsForms = this.fb.group({\n  building_id: [''],\n  building_name: [''],\n  building_type: [''],\n  logo: [''],\n  pipe_type:[''],\n  pipe_size_horizontal: [''],\n  pipe_size_vertical: [''],\n  max_floors: [''],\n  num_of_blocks: [''],\n  no_of_OHT:[''],\n  no_of_ducts: [''],\n  ip_address:[''],\n  service_provider: [''],\n  no_of_bhk: [''],\n  no_of_other_types: [''],\n  muncipal_water: [''],\n  no_of_bores:[''],\n  no_of_sumps: [''],\n  consumption_without_metering:[''],\n  monthly_water_expense: [''],\n  STP_reuse: [''],\n  website: [''],\n  city_id: [''],\n  address:['']\n  })\n\n\n  \n  createBuildings() {\n    console.log(this.createBuildingsForms.value)\n    this.buildingService.createBuilding(this.createBuildingsForms.value).subscribe(response => {\n      this.get_create_status = response;\n      if(response.status == 200){\n        alert('Sucessfully Added Base Station')\n        this.getBuildingDetailss();\n\n      }\n     \n    })\n  }\n\n  get_delete_status;\n  delete_json;\n  deleteBuildings(baseBuildingObj) {\n    this.delete_json = {\n      '_id':baseBuildingObj._id\n    }\n    this.buildingService.deleteBuilding(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getBuildingDetailss();\n      }\n     \n    })\n  }\n\n  editResponse;\n  editEachBuildingFunction(buildingdetailObj){\n    let json_obj:any ={\n      'building_id':buildingdetailObj.building_id,\n      'building_name':buildingdetailObj.building_name,\n      'building_type':buildingdetailObj.building_type,\n      'pipe_type':buildingdetailObj.pipe_type,\n      'pipe_size_horizontal':buildingdetailObj.pipe_size_horizontal,\n      'pipe_size_vertical':buildingdetailObj.pipe_size_vertical,\n      'max_floors':buildingdetailObj.max_floors,\n      'num_of_blocks':buildingdetailObj.num_of_blocks,\n      'no_of_OHT':buildingdetailObj.no_of_OHT,\n      'no_of_ducts':buildingdetailObj.no_of_ducts,\n      'ip_address':buildingdetailObj.ip_address,\n      'service_provider':buildingdetailObj.service_provider,\n      'no_of_bhk':buildingdetailObj.no_of_bhk,\n      'no_of_other_types':buildingdetailObj.no_of_other_types,\n      'muncipal_water':buildingdetailObj.muncipal_water,\n      'no_of_bores':buildingdetailObj.no_of_bores,\n      'no_of_sumps':buildingdetailObj.no_of_sumps,\n      'consumption_without_metering':buildingdetailObj.consumption_without_metering,\n      'monthly_water_expense':buildingdetailObj.monthly_water_expense,\n      'STP_reuse':buildingdetailObj.STP_reuse,\n      'website':buildingdetailObj.website,\n      'city_id':buildingdetailObj.city._id,\n      'address':buildingdetailObj.address,\n      'latitude':buildingdetailObj.latitude,\n      'longitude':buildingdetailObj.longitude,\n      '_id':buildingdetailObj._id\n    };\n    this.buildingService.editBuilding(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getBuildingDetailss();\n   }\n    });\n  }\n\n    \n  \n\n  ngOnInit() {\n    this.getBuildingDetailss();\n    this.getBuildingTypeDet();\n    this.getPipeDetailsList();\n    this.getCityLists();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBuildingDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/building/get_all_building_details', this.httpOptions)\n  }\n\n  createBuilding(createBuildingsForms:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/create_building',createBuildingsForms, this.httpOptions)\n  }\n\n  deleteBuilding(deleteBuilingForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/delete_building',deleteBuilingForm, this.httpOptions)\n  }\n\n  editBuilding(editedObj){\n    return this.http.post(this.urls.urlLink+'/building/edit_building',editedObj, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2J1aWxkaW5ndHlwZS9idWlsZGluZ3R5cGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { BuildingtypeService } from './buildingtype.service';\n\n@Component({\n  selector: 'app-buildingtype',\n  templateUrl: './buildingtype.component.html',\n  styleUrls: ['./buildingtype.component.css']\n})\nexport class BuildingtypeComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private buildingtypeService: BuildingtypeService) { }\n\n  getBuildingTypeList: any;\n  getBuildingTypeDet() {\n    this.buildingtypeService.getBuildingTypeDetails().subscribe(response => {\n      this.getBuildingTypeList = response.building_types;\n    });\n\n  }\n\n  get_create_status;\n  createBuildingTypeForm = this.fb.group({\n    building_type: ['']\n  })\n\n\n  \n  createBuildingTypes() {\n    console.log(this.createBuildingTypeForm.value)\n    this.buildingtypeService.createBuildingTypeList(this.createBuildingTypeForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Base Station')\n        this.getBuildingTypeDet();\n\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteBuildingType(buildingTypeObj) {\n    this.delete_json = {\n      'building_type':buildingTypeObj\n    }\n    this.buildingtypeService.buildingTypes(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getBuildingTypeDet();\n      }\n     \n    })\n  }\n\n\n  ngOnInit() {\n    this.getBuildingTypeDet();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingtypeService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getBuildingTypeDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllBuildingTypes', this.httpOptions)\n  }\n\n  createBuildingTypeList(createBuildingTypeForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreateBuildingType',createBuildingTypeForm, this.httpOptions)\n  }\n\n  buildingTypes(deleteBuilingTypeForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/delete_building_type',deleteBuilingTypeForm, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2NpdHkvY2l0eS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CityService } from './city.service';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private cityService: CityService) { }\n\n  getCityDetailList: any;\n  getCityLists() {\n    this.cityService.getCityDetails().subscribe(response => {\n      this.getCityDetailList = response.city_list;\n    });\n  }\n\n  get_create_status;\n  createCityForms = this.fb.group({\n    city_name: ['']\n  })\n\n  createCities() {\n    console.log(this.createCityForms.value)\n    this.cityService.createCitiess(this.createCityForms.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Base Station')\n        this.getCityLists();\n\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteCities(cityObj) {\n    this.delete_json = {\n      '_id':cityObj._id\n    }\n    this.cityService.deleteCity(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getCityLists();\n      }\n     \n    })\n  }\n\n  editResponse;\n  editCityFunction(cityObj){\n    let json_obj:any ={\n      'city_name':cityObj.city_name,\n      '_id':cityObj._id\n    };\n    this.cityService.editCity(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getCityLists();\n   }\n    });\n  }\n\n  ngOnInit() {\n    this.getCityLists();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getCityDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllCity', this.httpOptions)\n  }\n\n  createCitiess(createCityForms:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreateCity',createCityForms, this.httpOptions)\n  }\n\n\n  deleteCity(deleteCityObj:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/delete_city',deleteCityObj, this.httpOptions)\n  }\n\n  editCity(editedObj){\n    return this.http.post(this.urls.urlLink+'/metadata/EditCity',editedObj, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2NvbnN1bWVyL2NvbnN1bWVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ConsumerService } from './consumer.service';\nimport {FlatService} from '../flat/flat.service';\n\n@Component({\n  selector: 'app-consumer',\n  templateUrl: './consumer.component.html',\n  styleUrls: ['./consumer.component.css']\n})\nexport class ConsumerComponent implements OnInit {\n\n\n  constructor(private fb: FormBuilder, private consumerservice: ConsumerService,  private flatservice: FlatService) { }\n\n  getConsumerData;\n  getConsumerDetails() {\n    this.consumerservice.getConsumerDetaliss().subscribe(response => {\n      this.getConsumerData = response.consumer_details;\n    });\n\n  }\n\n  getallFlatdetails;\n  getallFlatData() {\n    this.flatservice.getallFlatDetailss().subscribe(response => {\n      this.getallFlatdetails = response.flat_details;\n    });\n\n  }\n\n  get_create_status;\n  createConsumerForm = this.fb.group({\n    consumer_id: [''],\n    first_name: [''],\n    last_name: [''],\n    email_id: [''],\n    phone:[''],\n    mobile:[''],\n    flat_id:[''],\n  })\n\n\n  \n  createConsumers(customerData) {\n    // console.log(this.createConsumerForm.value)\n    this.consumerservice.createConsumers(customerData).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added')\n        this.getConsumerDetails();\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteConsumer(deleteConsumerObj) {\n    this.delete_json = {\n      '_id':deleteConsumerObj._id\n    }\n    this.consumerservice.deleteconumerServices(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getConsumerDetails();\n      }\n     \n    })\n  }\n\n  editResponse;\n  editConsumerFunction(consumerObj){\n    let json_obj:any ={\n      'consumer_id':consumerObj.consumer_id,\n      'first_name':consumerObj.first_name,\n      'last_name':consumerObj.last_name,\n      'email_id':consumerObj.email_id,\n      'phone':consumerObj.phone,\n      'mobile':consumerObj.mobile,\n      'flat_id':consumerObj.flat_id,\n      '_id':consumerObj._id\n    };\n    this.consumerservice.editConsumer(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getConsumerDetails();\n   }\n    });\n  }\n\n  ngOnInit() {\n    this.getConsumerDetails();\n    this.getallFlatData();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getConsumerDetaliss(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/consumer/GetAllConsumerDetails', this.httpOptions)\n  }\n\n  createConsumers(createBasestationForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/consumer/CreateConsumer',createBasestationForm, this.httpOptions)\n  }\n\n  deleteconumerServices(deleteCosumer:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/consumer/delete_consumer',deleteCosumer, this.httpOptions)\n  }\n\n  editConsumer(editedObj){\n    return this.http.post(this.urls.urlLink+'/consumer/edit_consumer',editedObj, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2ZsYXQvZmxhdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { FlatService } from './flat.service';\nimport { FlattypeService } from '../flattype/flattype.service';\nimport { BlockService } from '../block/block.service';\n\n@Component({\n  selector: 'app-flat',\n  templateUrl: './flat.component.html',\n  styleUrls: ['./flat.component.css']\n})\nexport class FlatComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private flatservice: FlatService, private flattypeservice: FlattypeService, private blockservice: BlockService) { }\n\n  getallFlatdetails;\n  getallFlatData() {\n    this.flatservice.getallFlatDetailss().subscribe(response => {\n      this.getallFlatdetails = response.flat_details;\n    });\n\n  }\n\n  getBlockServiceDet;\n  getBlockServiceDetailss() {\n    this.blockservice.getBlockServiceDetails().subscribe(response => {\n      this.getBlockServiceDet = response.block_details;\n    });\n\n  }\n\n  getFlatTypeList: any;\n  getFlatType() {\n    this.flattypeservice.getFlatTypeDetails().subscribe(response => {\n      this.getFlatTypeList = response.flat_types_list;\n    });\n\n  }\n\n  get_create_status;\n  createFlatForm = this.fb.group({\n    block_id: [''],\n    flat_name: [''],\n    flat_type: ['']\n  })\n\n\n  createFlats(created_flats) {\n    this.flatservice.createFlatss(created_flats).subscribe(response => {\n      this.get_create_status = response.response;\n      if (response.status == 200) {\n        alert('Sucessfully Added Flats')\n        this.getallFlatData();\n      }\n\n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteFlats(flatObj) {\n    this.delete_json = {\n      '_id':flatObj._id\n    }\n    this.flatservice.deleteFlats(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getallFlatData();\n      }\n     \n    })\n  }\n\n\n  editResponse;\n  editFlatsFunction(flatDetailObj){\n    let json_obj:any ={\n      'block_id':flatDetailObj.block_id,\n      'flat_name':flatDetailObj.flat_name,\n      'flat_type':flatDetailObj.flat_type,\n      '_id':flatDetailObj._id\n    };\n    this.flatservice.editFlats(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getallFlatData();\n   }\n    });\n  }\n\n\n  ngOnInit() {\n    this.getallFlatData();\n    this.getFlatType();\n    this.getBlockServiceDetailss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlatService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getallFlatDetailss(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/flat/GetAllFlatDetails', this.httpOptions)\n  };\n\n  createFlatss(created_flats:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/CreateFlat',created_flats, this.httpOptions)\n  };\n\n  deleteFlats(deleteFlatObj:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/delete_flat',deleteFlatObj, this.httpOptions)\n  }\n\n  editFlats(editedObj){\n    return this.http.post(this.urls.urlLink+'/flat/edit_flat',editedObj, this.httpOptions)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2ZsYXR0eXBlL2ZsYXR0eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { FlattypeService } from './flattype.service';\n\n@Component({\n  selector: 'app-flattype',\n  //moduleId: module.id,\n  templateUrl: './flattype.component.html',\n  styleUrls: ['./flattype.component.css']\n})\nexport class FlattypeComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private flattypeservice: FlattypeService) { }\n\n  getFlatTypeList: any;\n  getFlatType() {\n    this.flattypeservice.getFlatTypeDetails().subscribe(response => {\n      this.getFlatTypeList = response.flat_types_list;\n    });\n\n  }\n\n  get_create_status;\n  createFlattypeForm = this.fb.group({\n    flat_type: ['']\n  })\n\n   \n  createFlatypes() {\n    this.flattypeservice.createFlatTypess(this.createFlattypeForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Flat Type')\n        this.getFlatType();\n\n      }\n     \n    })\n  };\n\n  get_delete_status;\n  delete_json;\n  deleteFlatType(flattypeObj) {\n    this.delete_json = {\n      'flat_types_list':flattypeObj\n    }\n    this.flattypeservice.deleteFlatTypes(this.delete_json).subscribe(response => {\n      this.get_delete_status = response.response;\n      if(response.status == 200){\n        this.getFlatType();\n      }\n     \n    })\n  };\n\n\n  ngOnInit() {\n    this.getFlatType();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlattypeService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getFlatTypeDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllFlatTypes', this.httpOptions)\n  };\n\n  createFlatTypess(createFlattypeForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreateFlatType',createFlattypeForm, this.httpOptions)\n  };\n\n  deleteFlatTypes(deleteFlatTypeObj:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/delete_flat_type',deleteFlatTypeObj, this.httpOptions)\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2lubGV0L2lubGV0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {InletService} from './inlet.service';\nimport { FlatService } from '../flat/flat.service';\nimport { InlettypeService } from '../inlettype/inlettype.service';\n\n@Component({\n  selector: 'app-inlet',\n  templateUrl: './inlet.component.html',\n  styleUrls: ['./inlet.component.css']\n})\nexport class InletComponent implements OnInit {\n  constructor(private fb: FormBuilder, private inletservice: InletService, private flatservice: FlatService, private inlettypeservice: InlettypeService) { }\n\n  getInletList;\n  getInletData(){\n    this.inletservice.getInletDetails().subscribe(response => {\n     this.getInletList = response.inlet_details;\n }); \n    \n   }\n\n   getInlettypedetails;\n   getInletTypedata() {\n     this.inlettypeservice.getInletTypess().subscribe(response => {\n       this.getInlettypedetails = response.inlet_type_list;\n     });\n \n   }\n\n\n   getallFlatdetails;\n  getallFlatData() {\n    this.flatservice.getallFlatDetailss().subscribe(response => {\n      this.getallFlatdetails = response.flat_details;\n    });\n\n  }\n\n   get_create_status;\n   createInletform = this.fb.group({\n    inlet_id: [''],\n    flat_id: [''],\n    inlet_name: [''],\n    inlet_type: ['']\n   })\n\n   createInlets() {\n    console.log(this.createInletform.value)\n    this.inletservice.createInletss(this.createInletform.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Inlet')\n        this.getInletData();\n\n      }\n     \n    })\n  }\n\n  editResponse;\n  editInletFunction(getInletObj){\n    let json_obj:any ={\n      'inlet_id':getInletObj.inlet_id,\n      'flat_id':getInletObj.flat._id,\n      'inlet_name':getInletObj.inlet_name,\n      'inlet_type':getInletObj.inlet_type,\n      '_id':getInletObj._id\n    };\n    this.inletservice.editInlet(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getInletData();\n   }\n    });\n  }\n\n  ngOnInit() {\n    this.getInletData();\n    this.getallFlatData();\n    this.getInletTypedata();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InletService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getInletDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/inlet/GetAllInletDetails', this.httpOptions)\n  }\n\n  createInletss(createInletform:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/inlet/CreateInlet',createInletform, this.httpOptions)\n  }\n\n  editInlet(editedObj){\n    return this.http.post(this.urls.urlLink+'/inlet/edit_inlet',editedObj, this.httpOptions)\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL2lubGV0dHlwZS9pbmxldHR5cGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InlettypeService } from './inlettype.service';\n\n@Component({\n  selector: 'app-inlettype',\n  //moduleId: module.id,\n  templateUrl: './inlettype.component.html',\n  styleUrls: ['./inlettype.component.css']\n})\nexport class InlettypeComponent implements OnInit {\n  constructor( private fb: FormBuilder, private inlettypeservice: InlettypeService) { }\n\n  getInlettypedetails;\n  getInletTypedata() {\n    this.inlettypeservice.getInletTypess().subscribe(response => {\n      this.getInlettypedetails = response.inlet_type_list;\n    });\n\n  }\n\n\n  createInletTypeForm = this.fb.group({\n    inlet_type: ['']\n  })\n\n  get_create_status;\n  createInletTypes() {\n    this.inlettypeservice.createInletTypess(this.createInletTypeForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Inline Type')\n        this.getInletTypedata();\n\n      }\n     \n    })\n  }\n\n  ngOnInit() {\n    this.getInletTypedata();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InlettypeService {\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getInletTypess(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllInletTypes', this.httpOptions)\n  }\n\n  createInletTypess(inletType_obj:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreateInletType',inletType_obj, this.httpOptions)\n  }\n}\n","module.exports = \".multiple_report {\\n    width: 13.5%;\\n    float: left;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #d8d8d8;\\n    box-shadow: 3px 4px 2px -1px #b7b7b7;\\n    background-color: #ffffff;\\n    padding: 14px 8px;\\n    color: #232323;\\n    border-radius: 4px;\\n    font-size: 14px;\\n    height: 99px;\\n    cursor: pointer;\\n    transition: 0.6s;\\n}\\n\\n.multiple_report:hover {\\n    background-color: #ececec;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n\\n.master_icons {\\n    font-size: 28px;\\n    text-align: center;\\n}\\n\\n.master_icon_names {\\n    text-align: center;\\n    line-height: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWV0YWRhdGEvbWV0YWRhdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsb0NBQW9DO0lBQ3BDLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsWUFBWTtJQUNaLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbWV0YWRhdGEvbWV0YWRhdGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdWx0aXBsZV9yZXBvcnQge1xuICAgIHdpZHRoOiAxMy41JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOGQ4ZDg7XG4gICAgYm94LXNoYWRvdzogM3B4IDRweCAycHggLTFweCAjYjdiN2I3O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgcGFkZGluZzogMTRweCA4cHg7XG4gICAgY29sb3I6ICMyMzIzMjM7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBoZWlnaHQ6IDk5cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IDAuNnM7XG59XG5cbi5tdWx0aXBsZV9yZXBvcnQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG59XG5cbi5ib3gtYm9keSBoNiB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBtYXJnaW4tbGVmdDogMTNweDtcbn1cblxuLm1hc3Rlcl9pY29ucyB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1hc3Rlcl9pY29uX25hbWVzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.css']\n})\nexport class MetadataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL3BpcGV0eXBlL3BpcGV0eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { PipetypeService } from './pipetype.service';\n\n\n@Component({\n  selector: 'app-pipetype',\n  //moduleId: module.id,\n  templateUrl: './pipetype.component.html',\n  styleUrls: ['./pipetype.component.css']\n})\nexport class PipetypeComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private pipetypeservice: PipetypeService) { }\n\n  getPipeData;\n  getPipeDetailsList() {\n    this.pipetypeservice.getPipeDetailss().subscribe(response => {\n      this.getPipeData = response.pipe_type_list;\n    });\n  }\n\n  get_create_status;\n  createPipetypeForm = this.fb.group({\n    pipe_type: ['']\n  })\n\n  createPipetypes() {\n    this.pipetypeservice.createPipeTypess(this.createPipetypeForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n        alert('Sucessfully Added Pipes')\n        this.getPipeDetailsList();\n\n      }\n     \n    })\n  }\n\n  ngOnInit() {\n    this.getPipeDetailsList();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PipetypeService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getPipeDetailss(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/metadata/GetAllPipeTypes', this.httpOptions)\n  }\n\n  createPipeTypess(createPipetypeForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/metadata/CreatePipeType',createPipetypeForm, this.httpOptions)\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGFkYXRhL3J0dS9ydHUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { RtuService } from './rtu.service';\nimport { BasestationService } from '../basestation/basestation.service';\nimport { BasestationchannelService } from '../basestationchannel/basestationchannel.service';\nimport { FlatService } from '../flat/flat.service';\nimport { InletService } from '../inlet/inlet.service';\n\n@Component({\n  selector: 'app-rtu',\n  templateUrl: './rtu.component.html',\n  styleUrls: ['./rtu.component.css']\n})\nexport class RTUComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private rtuservice: RtuService, private basestationservice: BasestationService, private basestationchannel: BasestationchannelService, private flatservice: FlatService, private inletservice: InletService) { }\n\n  getRtuList;\n  getRTUdata() {\n    this.rtuservice.getRtuDetails().subscribe(response => {\n      this.getRtuList = response.response;\n    });\n  }\n\n  getallFlatdetails;\n  getallFlatData() {\n    this.flatservice.getallFlatDetailss().subscribe(response => {\n      this.getallFlatdetails = response.flat_details;\n    });\n\n  }\n\n\n  getInletList;\n  getInletData() {\n    this.inletservice.getInletDetails().subscribe(response => {\n      this.getInletList = response.inlet_details;\n    });\n\n  }\n\n  getBasestationChannelList;\n  getBaseStationChannel() {\n    this.basestationchannel.getBaseStationChannelDetails().subscribe(response => {\n      this.getBasestationChannelList = response.base_station_channel_list;\n    });\n\n  }\n\n  getBasestationList: any;\n  getBaseStation() {\n    this.basestationservice.getBaseStationDetails().subscribe(response => {\n      this.getBasestationList = response.base_station_list;\n    });\n\n  }\n\n  get_create_status;\n  createRtuForm = this.fb.group({\n    rtu_id: [''],\n    base_station_id: [''],\n    base_station_channel_id: [''],\n    tag_name: [''],\n    flat_id: [''],\n    inlet_id: ['']\n  })\n\n\n\n  createRTU() {\n    this.rtuservice.createRTUs(this.createRtuForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if (response.status == 200) {\n        alert('Sucessfully Added Pipes')\n        this.getRTUdata();\n      }\n    })\n  }\n\n  editResponse;\n  editRTUFunction(getObj){\n    let json_obj:any ={\n      'rtu_id':getObj.rtu_id,\n      'base_station_id':getObj.base_station._id,\n      'base_station_channel_id':getObj.base_station_channel._id,\n      'tag_name':getObj.tag_name,\n      'flat_id':getObj.flat._id,\n      'inlet_id':getObj.inlet._id,\n      '_id':getObj._id\n    };\n    this.rtuservice.rtuEdit(json_obj).subscribe((res:any)=>{\n   this.editResponse = res;\n   if(res.response =='success'){\n    this.getRTUdata();\n   }\n    });\n  }\n\n\n\n\n  ngOnInit() {\n    this.getRTUdata();\n    this.getBaseStation();\n    this.getBaseStationChannel();\n    this.getallFlatData();\n    this.getInletData();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RtuService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getRtuDetails(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/rtu/GetAllRTU', this.httpOptions)\n  }\n\n  createRTUs(createRtuForm:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/rtu/CreateRTUDetails',createRtuForm, this.httpOptions)\n  }\n\n  rtuEdit(editedObj){\n    return this.http.post(this.urls.urlLink+'/rtu/EditRTUDetails',editedObj, this.httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockReportService {\n\n  constructor(private http: HttpClient) { }\n\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n//  block report table apis\n  getBlockReportForCurrentMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_block_table_details_for_current_month',sendSelectedParam, this.httpOptions)\n  }\n\n  getBlockReportForCurrentDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_block_table_details_for_current_day',sendSelectedParam, this.httpOptions)\n  }\n\n  getBlockReportForCurrentYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_block_table_details_for_current_year',sendSelectedParam, this.httpOptions)\n  }\n\n  getBlockReportForSearchDate(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_block_table_details_for_search_date',sendSelectedParam, this.httpOptions)\n  }\n\n  // block report table apis\n\n  // block report chart apis\n  getBlockCosumptionChartForDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/GetBlockConsumptionBYDay',sendSelectedParam, this.httpOptions)\n  }\n\n  getBlockCosumptionChartForMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/GetBlockConsumptionBYMonthly',sendSelectedParam, this.httpOptions)\n  }\n\n  getBlockCosumptionChartForYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/GetBlockConsumptionBYYearly',sendSelectedParam, this.httpOptions)\n  }\n  // block report chart apis\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYmxvY2tyZXBvcnQvYmxvY2tyZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockReportService } from './block-report.service';\nimport { BlockService } from '../../metadata/block/block.service'\nimport * as Highcharts from 'highcharts';\nimport { FormBuilder } from '@angular/forms';\n// import {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-blockreport',\n  //moduleId: module.id,\n  templateUrl: './blockreport.component.html',\n  styleUrls: ['./blockreport.component.css']\n})\nexport class BlockreportComponent implements OnInit {\n\n  constructor(private blockReportService:BlockReportService, private blockService:BlockService, private fb: FormBuilder) { }\n\n  get_block_table_report;\n  get_block_chart_report\n  hideshow_selectmonth = false;\n\n\n  years:string[] = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n \n\n  monthList:any[] = [\n   {'monthname':'Jan', 'monthnumber':1},\n   {'monthname':'Feb', 'monthnumber':2},\n   {'monthname':'Mar', 'monthnumber':3},\n   {'monthname':'Apr', 'monthnumber':4},\n   {'monthname':'May', 'monthnumber':5},\n   {'monthname':'Jun', 'monthnumber':6},\n   {'monthname':'Jul', 'monthnumber':7},\n   {'monthname':'Aug', 'monthnumber':8},\n   {'monthname':'Sep', 'monthnumber':9},\n   {'monthname':'Oct', 'monthnumber':11},\n   {'monthname':'Nov', 'monthnumber':12},\n ];\n\n  get_block_list;\n  getBlockServiceDetails() {\n    this.blockService.getBlockServiceDetails().subscribe(response => {\n      this.get_block_list = response.block_details;\n      this.selectedOption = response.block_details[0]._id;\n      if(response.status == '200'){\n         this.get_blockreport_for_current_month();\n      }\n    })\n  };\n\n  block_ids;\n  selectedOption:any;\n  get_blockReport(selectedOption){\n   this.block_ids = selectedOption;\n  };\n\n  \n  \n  get_blockreport_for_current_month() {\n     this.hideshow_selectmonth = false;\n    let sendParam = {\n       'block_id':(!this.block_ids?this.selectedOption:this.block_ids),\n       'year':(!this.selected_year?this.selectedYear:Number(this.selected_year))\n    };\n\n   //  month view table report\n    this.blockReportService.getBlockReportForCurrentMonth(sendParam).subscribe(response => {\n      this.get_block_table_report = response.response;\n    });\n\n   //  month view chart report\n   this.blockReportService.getBlockCosumptionChartForMonth(sendParam).subscribe(response => {\n      this.get_block_chart_report = response.response;\n      if(this.get_block_chart_report){\n         this.linechart();\n      }\n    });\n\n  };\n\n  \n  get_blockreport_for_current_day() {\n     this.hideshow_selectmonth = true;\n    let sendParam = {\n      'block_id':(!this.block_ids?this.selectedOption:this.block_ids),\n       'month':(!this.selected_month?1:Number(this.selected_month)),\n       'year':(!this.selected_year?this.selectedYear:Number(this.selected_year))\n    };\n\n   //  day view table\n    this.blockReportService.getBlockReportForCurrentDay(sendParam).subscribe(response => {\n      this.get_block_table_report = response.response;\n    })\n\n   //  day view chart\n   this.blockReportService.getBlockCosumptionChartForDay(sendParam).subscribe(response => {\n      this.get_block_chart_report = response.response;\n      if(this.get_block_chart_report){\n         this.linechart();\n      }\n    })\n  };\n\n\n  get_blockreport_for_current_year() {\n     this.hideshow_selectmonth = false;\n    let sendParam = {\n      'block_id':(!this.block_ids?this.selectedOption:this.block_ids)\n    };\n   //  year view table\n    this.blockReportService.getBlockReportForCurrentYear(sendParam).subscribe(response => {\n      this.get_block_table_report = response.response;\n    })\n\n   //  year view chart\n    this.blockReportService.getBlockCosumptionChartForYear(sendParam).subscribe(response => {\n      this.get_block_chart_report = response.response;\n      if(this.get_block_chart_report){\n         this.linechart();\n      }\n    })\n  };\n\n \n  get_blockreport_for_search_date() {\n    let sendParam = {\n      'block_id':(!this.block_ids?this.selectedOption:this.block_ids)\n    };\n\n\n    this.blockReportService.getBlockReportForSearchDate(sendParam).subscribe(response => {\n      this.get_block_table_report = response.response;\n      if(this.get_block_chart_report){\n         this.linechart();\n      }\n    })\n  };\n\n  selected_year;\n  selectedYear:any = '2020';\n  get_year(selectedYear){\n     this.selected_year = selectedYear;\n  }\n \n  selected_month;\n  get_month(selectedMonth){\n   this.selected_month = selectedMonth;\n  }\n\n\n  selectedView:any=\"month\";\n  get_block_report(){\n   let param = this.selectedView;\n   switch(param){\n      case 'year':\n         this.get_blockreport_for_current_year();\n      break;\n      case 'month':\n      this.get_blockreport_for_current_month();\n      break;\n      case 'day':\n         this.get_blockreport_for_current_day();\n      break;\n   }\n  }\n\n  highcharts;\n  chartOptions;\n  linechart(){\n   this.highcharts = Highcharts;\n  this.chartOptions = {   \n     chart: {\n        type: 'areaspline'\n     },\n     title: {\n        text: \"Monthly Average Usage\"\n     },\n     subtitle: {\n        text: \"Detail Report\"\n     },\n     xAxis:{\n        categories:this.get_block_chart_report.header_list\n     },\n     yAxis: {          \n        title:{\n           text:\"Monthly Report\"\n        } \n     },\n     legend: {\n        layout: 'vertical',\n        align: 'left',\n        verticalAlign: 'top',\n        x: 150,\n        y: 100,\n        floating: true,\n        borderWidth: 1,\n        backgroundColor:\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n    },\n    tooltip: {\n     shared: true,\n     valueSuffix: ' units'\n },\n plotOptions: {\n  areaspline: {\n   dataLabels: {\n      enabled: true\n  },\n      fillOpacity: 0.5\n  }\n},\n     series: [\n        {\n           name: 'Water Usage',\n           data: this.get_block_chart_report.value_list\n        }\n       \n     ]\n  };\n }\n\n\n  ngOnInit() {\n   \n   this.getBlockServiceDetails();\n  }\n\n\n}\n","  import { Injectable } from '@angular/core';\n  import { Observable } from 'rxjs';\n  import { HttpClient, HttpHeaders } from '@angular/common/http';\n  import { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingReportService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  //  block report table apis\n  getBuildingReportForCurrentMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_building_table_details_for_search_date',sendSelectedParam, this.httpOptions)\n  }\n\n  getBuildingReportForCurrentDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_building_table_details_for_current_day',sendSelectedParam, this.httpOptions)\n  }\n\n  getBuildingReportForCurrentYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_building_table_details_for_current_year',sendSelectedParam, this.httpOptions)\n  }\n\n  getBuildingReportForSearchDate(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/get_building_table_details_for_search_date',sendSelectedParam, this.httpOptions)\n  }\n\n  // block report table apis\n\n\n\n  // block report chart apis\n  getBuildingCosumptionChartForDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingConsumptionBYDay',sendSelectedParam, this.httpOptions)\n  }\n\n  getBuildingCosumptionChartForMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingConsumptionBYMonthly',sendSelectedParam, this.httpOptions)\n  }\n\n  getBuildingCosumptionChartForYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/building/GetBuildingConsumptionBYYearly',sendSelectedParam, this.httpOptions)\n  }\n  // block report chart apis\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYnVpbGRpbmdyZXBvcnQvYnVpbGRpbmdyZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { BuildingReportService } from './building-report.service';\nimport { BuildingService } from '../../metadata/building/building.service'\n\n@Component({\n  selector: 'app-buildingreport',\n // moduleId: module.id,\n  templateUrl: './buildingreport.component.html',\n  styleUrls: ['./buildingreport.component.css']\n})\nexport class BuildingreportComponent implements OnInit {\n\n  constructor(private buildingService:BuildingService, private buildingReportService:BuildingReportService) { }\n\n  get_building_table_report;\n  get_building_chart_report\n\n\n  years:string[] = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n  selectedYear:any = \"2020\";\n\n   monthList:any[] = [\n    {'monthname':'Jan', 'monthnumber':1},\n    {'monthname':'Feb', 'monthnumber':2},\n    {'monthname':'Mar', 'monthnumber':3},\n    {'monthname':'Apr', 'monthnumber':4},\n    {'monthname':'May', 'monthnumber':5},\n    {'monthname':'Jun', 'monthnumber':6},\n    {'monthname':'Jul', 'monthnumber':7},\n    {'monthname':'Aug', 'monthnumber':8},\n    {'monthname':'Sep', 'monthnumber':9},\n    {'monthname':'Oct', 'monthnumber':11},\n    {'monthname':'Nov', 'monthnumber':12},\n  ];\n\n  \n  get_building_list;\n  getBuildingServiceDetails() {\n    this.buildingService.getBuildingDetails().subscribe(response => {\n      this.get_building_list = response.building_details;\n      this.selectedOption = response.building_details[0]._id;\n      if(response.status == '200'){\n         this.get_buildingreport_for_current_month();\n      }\n    })\n  };\n\n\n  building_ids;\n  selectedOption:any;\n  get_buildingReport(selectedOption){\n   this.building_ids = selectedOption;\n  };\n\n\n\n  get_buildingreport_for_current_month() {\n   let sendParam = {\n      'building_id':(!this.building_ids?this.selectedOption:this.building_ids),\n      'year':(!this.selected_year?this.selectedYear:Number(this.selected_year))\n   };\n\n  //  month view table report\n   this.buildingReportService.getBuildingReportForCurrentMonth(sendParam).subscribe(response => {\n     this.get_building_table_report = response.response;\n   });\n\n  //  month view chart report\n  this.buildingReportService.getBuildingCosumptionChartForMonth(sendParam).subscribe(response => {\n     this.get_building_chart_report = response.response;\n     if(response.response){\n        this.linechart();\n     }\n   });\n\n };\n\n\n get_buildingreport_for_current_day() {\n   let sendParam = {\n      'building_id':(!this.building_ids?this.selectedOption:this.building_ids),\n      'month':(!this.selected_month?this.selectedMonth:Number(this.selected_month)),\n      'year':(!this.selected_year?this.selectedYear: Number(this.selected_year))\n   };\n\n  //  day view table\n   this.buildingReportService.getBuildingReportForCurrentDay(sendParam).subscribe(response => {\n     this.get_building_table_report = response.response;\n   })\n\n  //  day view chart\n  this.buildingReportService.getBuildingCosumptionChartForDay(sendParam).subscribe(response => {\n     this.get_building_chart_report = response.response;\n     if(response.response){\n      this.linechart();\n   }\n   })\n };\n\n\n get_buildingreport_for_current_year() {\n   let sendParam = {\n      'building_id':(!this.building_ids?this.selectedOption:this.building_ids)\n   };\n  //  year view table\n   this.buildingReportService.getBuildingReportForCurrentYear(sendParam).subscribe(response => {\n     this.get_building_table_report = response.response;\n   })\n\n  //  year view chart\n   this.buildingReportService.getBuildingCosumptionChartForYear(sendParam).subscribe(response => {\n     this.get_building_chart_report = response.response;\n     if(response.response){\n      this.linechart();\n   }\n   })\n };\n\n\n\n\n get_buildingreport_for_search_date() {\n   let sendParam = {\n      'building_id':(!this.building_ids?this.selectedOption:this.building_ids)\n   };\n\n   this.buildingReportService.getBuildingReportForSearchDate(sendParam).subscribe(response => {\n     this.get_building_table_report = response.response;\n   })\n };\n\n\n selected_year:any;\n get_year(selectedYear){\n    this.selected_year = selectedYear;\n\n }\n\n selected_month;\n selectedMonth:any = '1';\n get_month(selectedMonth){\n  this.selected_month = selectedMonth;\n\n }\n\n selectedView:any= 'month';\n get_building_report(){\n   let param = this.selectedView;\n   switch(param){\n      case 'year':\n         this.get_buildingreport_for_current_year();\n      break;\n      case 'month':\n      this.get_buildingreport_for_current_month();\n      break;\n      case 'day':\n         this.get_buildingreport_for_current_day();\n      break;\n   }\n }\n\n  highchartss;\n  chartOptions;\n\n  linechart(){\n    this.highchartss = Highcharts;\n   this.chartOptions = {   \n      chart: {\n         type: \"spline\"\n      },\n      title: {\n         text: \"Monthly Average Usage\"\n      },\n      subtitle: {\n         text: \"Detail Report\"\n      },\n      xAxis:{\n         categories:this.get_building_chart_report.header_list\n      },\n      yAxis: {          \n         title:{\n            text:\"Monthly Report\"\n         } \n      },\n      tooltip: {\n         valueSuffix:\" °C\"\n      },\n      plotOptions: {\n         spline: {\n            dataLabels: {\n               enabled: true\n           },\n             fillOpacity: 0.5\n         }\n      },\n      series: [\n         {\n            name: 'Water Usage',\n            data: this.get_building_chart_report.value_list\n         }\n        \n      ]\n   };\n  }\n\n\n  ngOnInit() {\n   this.getBuildingServiceDetails();\n  }\n\n}\n","module.exports = \".right_38 {\\n    right: 38px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0cy9jb25zdW1lci1yZXBvcnQvY29uc3VtZXItcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9yZXBvcnRzL2NvbnN1bWVyLXJlcG9ydC9jb25zdW1lci1yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yaWdodF8zOCB7XG4gICAgcmlnaHQ6IDM4cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport {ConsumerService} from '../../metadata/consumer/consumer.service';\nimport {ConsumerReportService} from '../consumer-report/consumer-report.service';\n\nimport {FlatReportService} from '../flatreport/flat-report.service';\nimport {FlatService} from '../../metadata/flat/flat.service';\nimport * as Highcharts from 'highcharts';\nimport Bullet from 'highcharts/modules/bullet';\nBullet(Highcharts);\n\n@Component({\n  selector: 'app-consumer-report',\n  templateUrl: './consumer-report.component.html',\n  styleUrls: ['./consumer-report.component.css']\n})\nexport class ConsumerReportComponent implements OnInit {\n\n  constructor(private consumerService:ConsumerService, private consumerreportService:ConsumerReportService, private flatReportService:FlatReportService, private flatService:FlatService) { }\n\n\n  get_block_table_report;\n  get_flat_chart_report;\n  loader1 = true;\n  selectedOption:any;\n  bullet_chart_data;\n  \n  get_consumer_list;\n  getConsumerlists() {\n    this.consumerService.getConsumerDetaliss().subscribe(response => {\n      this.get_consumer_list = response.consumer_details;\n     \n    })\n  };\n\n  get_flat_list;\n  getFlatServiceDetails() {\n    this.flatService.getallFlatDetailss().subscribe(response => {\n      this.get_flat_list = response.flat_details;\n      if(response.status == '200'){\n         this.loader1 = false;\n         this.selectedOption = response.flat_details[0]._id;\n         this.flat_id = response.flat_details[0]._id;\n         this.get_consumer_report_go();\n      }\n    \n    })\n  }\n\n  selectedView:any = 'month';\n\n  years:string[] = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n  selectedYear = \"2020\";\n\n   monthList:any[] = [\n    {'monthname':'Jan', 'monthnumber':1},\n    {'monthname':'Feb', 'monthnumber':2},\n    {'monthname':'Mar', 'monthnumber':3},\n    {'monthname':'Apr', 'monthnumber':4},\n    {'monthname':'May', 'monthnumber':5},\n    {'monthname':'Jun', 'monthnumber':6},\n    {'monthname':'Jul', 'monthnumber':7},\n    {'monthname':'Aug', 'monthnumber':8},\n    {'monthname':'Sep', 'monthnumber':9},\n    {'monthname':'Oct', 'monthnumber':11},\n    {'monthname':'Nov', 'monthnumber':12},\n  ];\n\n  \n  flat_id;\n  get_ConsumerReport(consumerDet){\n  this.flat_id = consumerDet;\n  this.loader1 = true;\n  this.get_consumer_report_for_current_year();\n  }\n\n  selected_day;\n  get_consumer_chart_report;\n  get_consumer_table_report\n\n// per month\n get_consumer_report_for_current_month() {\n    this.selected_day = false;\n    let sendParam = {\n       'flat_id':this.flat_id,\n       'year':(!this.selected_year?this.selectedYear:Number(this.selected_year))\n    };\n \n    this.consumerreportService.getCosumptionChartForMonth(sendParam).subscribe(response => {\n    this.get_consumer_chart_report = response.response;\n    this.bullet_chart_data = response.status;\n    this.loader1 = false;\n    if(response.response){\n       this.bulletCharts(this.get_consumer_chart_report);\n       this.loader1 = false;\n      }\n    });\n\n      //  month view chart report\n  this.flatReportService.getFlatCosumptionChartForMonth(sendParam).subscribe(response => {\n    this.get_flat_chart_report = response.response;\n    this.flatRportStatus = response.status;\n    if(response.response){\n     this.linechart();\n    }\n  });\n\n  \n  };\n  // per month\n\n\n\n  // per year\n  get_consumer_report_for_current_year() {\n    this.selected_day = false;\n    let sendParam = {\n       'flat_id':this.flat_id\n    };\n\n    this.consumerreportService.getCosumptionChartForYear(sendParam).subscribe(response => {\n      this.get_consumer_chart_report = response.response;\n      this.bullet_chart_data = response.status;\n      this.loader1 = false;\n      if(response.response){\n     this.bulletCharts(this.get_consumer_chart_report);\n    }\n    });\n\n      //  year view chart report\n  this.flatReportService.getFlatCosumptionChartForYear(sendParam).subscribe(response => {\n    this.get_flat_chart_report = response.response;\n    this.flatRportStatus = response.status;\n    if(response.response){\n     this.linechart();\n    }\n  });\n\n  };\n  // per year\n\n  // per day\n  flatRportStatus;\n  get_consumer_report_for_current_day() {\n    this.selected_day = true;\n    let sendParam = {\n       'flat_id':this.flat_id,\n       'month':(!this.selected_month?1:Number(this.selected_month)),\n       'year':(!this.selected_year?this.selectedYear: Number(this.selected_year))\n    };\n\n   //  day view chart\n   this.consumerreportService.getCosumptionChartForDay(sendParam).subscribe(response => {\n      this.get_consumer_chart_report = response.response;\n      this.bullet_chart_data = response.status;\n      this.loader1 = false;\n      if(response.response){\n       this.bulletCharts(this.get_consumer_chart_report);\n     }\n    });\n\n //  day view chart\n  this.flatReportService.getFlatCosumptionChartForDay(sendParam).subscribe(response => {\n    this.get_flat_chart_report = response.response;\n    this.flatRportStatus = response.status;\n    if(response.response){\n     this.linechart();\n    }\n  });\n\n  };\n  // per day\n\n\n  selected_year;\n  \n  get_year(selectedYear){\n     this.selected_year = selectedYear;\n     this.get_consumer_report_for_current_year();\n  }\n\n  selected_month;\n  get_month(selectedMonth){\n   this.selected_month = selectedMonth;\n   this.get_consumer_report_for_current_day();\n \n  }\n\n  get_consumer_report_go(){\n    this.loader1 = true;\n   if(this.selectedView == 'year'){\n     this.get_consumer_report_for_current_year();\n   } else if(this.selectedView == 'month'){\n     this.get_consumer_report_for_current_month();\n   }\n   else if(this.selectedView == 'day'){\n     this.get_consumer_report_for_current_day();\n   }\n };\n\n\n  highcharts;\n  chartOptions;\n  bulletCharts(bulletData) {\n    this.highcharts = Highcharts;\n    this.chartOptions = {   \n      chart: {\n        marginTop: 60,\n         inverted: true,\n        marginLeft: 60,\n        type: 'bullet'\n    },\n      legend: {\n        enabled: false\n    },\n    title: {\n        text: 'Current Consumption ' +(!this.selected_year?'':this.selected_year)\n    },\n    xAxis: {\n        categories: ['Usage']\n    },\n     exporting: {\n        enabled: false\n    },\n    yAxis: {\n      gridLineWidth: 0,\n         plotBands: [{\n             from: 0,\n             to: (!bulletData?30000:(bulletData.target==0)?30000:(bulletData.target + 80000)),\n             color: '#91ddff'\n         }],\n         title: null\n     },\n     plotOptions: {\n      series: {\n          pointPadding: 0.25,\n          borderWidth: 0,\n          color: (!bulletData?'#8BC34A': (bulletData.percentage==0)?'#8BC34A': (bulletData.percentage < 70)?'#8BC34A':((bulletData.percentage > 70) && (bulletData.percentage < 90))?'#FF2AA0':'#FF2A1F'),\n          targetOptions: {\n              width: '200%'\n          }\n      }\n  },\n  series: [{\n    data: [{\n        y: (!bulletData?0:(bulletData.value==0)?100 : (bulletData.value)),\n        target: (!bulletData?25000:(bulletData.target==0)?25000:bulletData.target)\n    }]\n}],\n    tooltip: {\n        pointFormat: '<b>{point.y}</b> (with target at {point.target})'\n    }\n    };\n       \n  }\n\n\n\n\n  highcharts1;\n  chartOptions1;\n\n  linechart(){\n    this.highcharts1 = Highcharts;\n   this.chartOptions1 = {   \n      chart: {\n         type: 'areaspline'\n      },\n      title: {\n         text: \"Monthly Average Usage\"\n      },\n      subtitle: {\n         text: \"Detail Report\"\n      },\n      xAxis:{\n         categories:this.get_flat_chart_report.header_list\n      },\n      yAxis: {          \n         title:{\n            text:\"Monthly Report\"\n         } \n      },\n      legend: {\n         layout: 'vertical',\n         align: 'left',\n         verticalAlign: 'top',\n         x: 150,\n         y: 100,\n         floating: true,\n         borderWidth: 1,\n         backgroundColor:\n             Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n     },\n     tooltip: {\n      shared: true,\n      valueSuffix: ' units'\n  },\n  plotOptions: {\n   areaspline: {\n    dataLabels: {\n      enabled: true\n  },\n       fillOpacity: 0.5\n   }\n},\n      series: [\n         {\n            name: 'Water Usage',\n            data: this.get_flat_chart_report.value_list\n         }\n        \n      ]\n   };\n  }\n\n\n\n  ngOnInit() {\n   this.getConsumerlists();\n   this.getFlatServiceDetails();\n   \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsumerReportService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n\n   // consumer report chart apis\n   getCosumptionChartForDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/consumer/GetConsumerAverageConsumptionByDay',sendSelectedParam, this.httpOptions)\n  }\n\n  getCosumptionChartForMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/consumer/GetConsumerAverageConsumptionSearchMonth',sendSelectedParam, this.httpOptions)\n  }\n\n  getCosumptionChartForYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/consumer/GetConsumerAverageConsumptionByYear',sendSelectedParam, this.httpOptions)\n  }\n// consumer report chart apis\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlatReportService {\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  // flat report chart apis\n  getFlatCosumptionChartForDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/GetFlatConsumptionBYDay',sendSelectedParam, this.httpOptions)\n  }\n\n  getFlatCosumptionChartForMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/GetFlatConsumptionBYMonthly',sendSelectedParam, this.httpOptions)\n  }\n\n  getFlatCosumptionChartForYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/GetFlatConsumptionBYYearly',sendSelectedParam, this.httpOptions)\n  }\n  // flat report chart apis\n\n  // flat report table apis\n  getFlatConsumptionTableApi(parameters:any):Observable<any> {\n    return this.http.post(this.urls.urlLink+'/flat/flat_details_table',parameters, this.httpOptions)\n  }\n  // flat report table apis\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvZmxhdHJlcG9ydC9mbGF0cmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {FlatReportService} from './flat-report.service';\nimport {FlatService} from '../../metadata/flat/flat.service';\n\n@Component({\n  selector: 'app-flatreport',\n  //moduleId: module.id,\n  templateUrl: './flatreport.component.html',\n  styleUrls: ['./flatreport.component.css']\n})\nexport class FlatreportComponent implements OnInit {\n\n  constructor(private flatService:FlatService, private flatReportService:FlatReportService) { }\n\n  get_block_table_report;\n  get_flat_chart_report;\n  get_flat_table_report;\n  selectedView:any='month';\n\n  get_flat_list;\n  getFlatServiceDetails() {\n    this.flatService.getallFlatDetailss().subscribe(response => {\n      this.get_flat_list = response.flat_details;\n      if(response.status == '200'){\n         this.selectedOption = response.flat_details[0]._id;\n         this.get_flatreport_for_current_month();\n      }\n    \n    })\n  }\n\n  monthList:any[] = [\n   {'monthname':'Jan', 'monthnumber':1},\n   {'monthname':'Feb', 'monthnumber':2},\n   {'monthname':'Mar', 'monthnumber':3},\n   {'monthname':'Apr', 'monthnumber':4},\n   {'monthname':'May', 'monthnumber':5},\n   {'monthname':'Jun', 'monthnumber':6},\n   {'monthname':'Jul', 'monthnumber':7},\n   {'monthname':'Aug', 'monthnumber':8},\n   {'monthname':'Sep', 'monthnumber':9},\n   {'monthname':'Oct', 'monthnumber':11},\n   {'monthname':'Nov', 'monthnumber':12},\n ];\n\n  selected_year:any;\n  selectedYear:any = '2020';\n  get_year(selectedYear){\n     this.selected_year = selectedYear;\n  }\n \n  selected_month;\n  selectedMonth:any;\n  get_month(selectedMonth){\n   this.selected_month = selectedMonth; \n  }\n\n  flat_ids;\n  selectedOption:any;\n  get_flatReport(selectedOption){\n   this.flat_ids = selectedOption;\n  }\n\n\n  get_flatreport_for_current_month() {\n   let sendParam = {\n      'flat_id':(!this.flat_ids?this.selectedOption:this.flat_ids),\n      'year':Number(!this.selected_year?this.selectedYear:this.selected_year)\n   };\n\n  //  month view chart report\n  this.flatReportService.getFlatCosumptionChartForMonth(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     if(response.response){\n      this.linechart();\n     }\n   });\n   // table\n   this.flatReportService.getFlatConsumptionTableApi(sendParam).subscribe(response => {\n      this.get_flat_table_report = response;\n    \n    });\n\n }\n\n\n get_flatreport_for_current_day() {\n  \n   let sendParam = {\n      'flat_id':(!this.flat_ids?this.selectedOption:this.flat_ids),\n      'month':Number(!this.selected_month?1:this.selected_month),\n      'year':(!this.selected_year?2019: Number(this.selected_year))\n   };\n\n   this.selectedMonth = sendParam.month;\n  //  day view chart\n  this.flatReportService.getFlatCosumptionChartForDay(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     if(response.response){\n      this.linechart();\n     }\n   })\n\n     // table\n     this.flatReportService.getFlatConsumptionTableApi(sendParam).subscribe(response => {\n      this.get_flat_table_report = response;\n    \n    });\n }\n\n\n get_flatreport_for_current_year() {\n   \n   let sendParam = {\n      'flat_id':(!this.flat_ids?this.selectedOption:this.flat_ids)\n   };\n\n  //  year view chart\n   this.flatReportService.getFlatCosumptionChartForYear(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     if(response.response){\n      this.linechart();\n     }\n   })\n     // table\n     this.flatReportService.getFlatConsumptionTableApi(sendParam).subscribe(response => {\n      this.get_flat_table_report = response;\n    \n    });\n }\n\n get_flat_report(){\n    let param = this.selectedView;\n   switch(param){\n      case 'year':\n         this.get_flatreport_for_current_year();\n      break;\n      case 'month':\n      this.get_flatreport_for_current_month();\n      break;\n      case 'day':\n         this.get_flatreport_for_current_day();\n      break;\n   }\n }\n\n\n\n\n\n  highcharts;\n  chartOptions;\n\n  linechart(){\n    this.highcharts = Highcharts;\n   this.chartOptions = {   \n      chart: {\n         type: 'areaspline'\n      },\n      title: {\n         text: \"Monthly Average Usage\"\n      },\n      subtitle: {\n         text: \"Detail Report\"\n      },\n      xAxis:{\n         categories:this.get_flat_chart_report.header_list\n      },\n      yAxis: {          \n         title:{\n            text:\"Monthly Report\"\n         } \n      },\n      legend: {\n         layout: 'vertical',\n         align: 'left',\n         verticalAlign: 'top',\n         x: 150,\n         y: 100,\n         floating: true,\n         borderWidth: 1,\n         backgroundColor:\n             Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\n     },\n     tooltip: {\n      shared: true,\n      valueSuffix: ' units'\n  },\n  plotOptions: {\n   areaspline: {\n      dataLabels: {\n         enabled: true\n     },\n       fillOpacity: 0.5\n   }\n},\n      series: [\n         {\n            name: 'Water Usage',\n            data: this.get_flat_chart_report.value_list\n         }\n        \n      ]\n   };\n  }\n\n  ngOnInit() {\n    \n    this.getFlatServiceDetails();\n  }\n\n}\n\n\n\n   \n\n   \n  ","module.exports = \".multiple_report {\\n    height: 100px;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #d2d2d2;\\n    box-shadow: 3px 5px 2px -1px #b7b7b7;\\n    background-color: #ffffff;\\n    padding: 15px 18px;\\n}\\n\\n.multiple_report .fa {\\n    font-size: 24px;\\n    color: #ffffff;\\n    background-color: #03A9F4;\\n    border-radius: 50%;\\n    padding: 20px 20px;\\n    border: 1px solid #757575;\\n}\\n\\n.report_title {\\n    color: #565656;\\n    font-weight: 900;\\n}\\n\\n.sub_title {\\n    font-size: 13px;\\n    color: #888888;\\n    position: absolute;\\n    right: 18px;\\n    top: 53px;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n\\n.padding-right-28 {\\n    padding-right: 28px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0cy9yZXBvcnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsb0NBQW9DO0lBQ3BDLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsU0FBUztBQUNiOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvcmVwb3J0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm11bHRpcGxlX3JlcG9ydCB7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkMmQyZDI7XG4gICAgYm94LXNoYWRvdzogM3B4IDVweCAycHggLTFweCAjYjdiN2I3O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgcGFkZGluZzogMTVweCAxOHB4O1xufVxuXG4ubXVsdGlwbGVfcmVwb3J0IC5mYSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwM0E5RjQ7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzU3NTc1O1xufVxuXG4ucmVwb3J0X3RpdGxlIHtcbiAgICBjb2xvcjogIzU2NTY1NjtcbiAgICBmb250LXdlaWdodDogOTAwO1xufVxuXG4uc3ViX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgY29sb3I6ICM4ODg4ODg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxOHB4O1xuICAgIHRvcDogNTNweDtcbn1cblxuLmJveC1ib2R5IGg2IHtcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxM3B4O1xufVxuXG4ucGFkZGluZy1yaWdodC0yOCB7XG4gICAgcGFkZGluZy1yaWdodDogMjhweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  //moduleId: module.id,\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RtoReportService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  // flat report chart apis\n  getRTUCosumptionChartForDay(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/rtu/get_average_consumption_of_rtus_by_current_day',sendSelectedParam, this.httpOptions)\n  }\n\n  getRTUCosumptionChartForMonth(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/rtu/get_average_consumption_of_rtus_by_current_month',sendSelectedParam, this.httpOptions)\n  }\n\n  getRTUCosumptionChartForYear(sendSelectedParam:any): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/rtu/get_average_consumption_of_rtus_by_current_year',sendSelectedParam, this.httpOptions)\n  }\n  // flat report chart apis\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvcnRvcmVwb3J0L3J0b3JlcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RtuService } from  '../../metadata/rtu/rtu.service';\nimport { RtoReportService } from './rto-report.service';\nimport * as Highcharts from 'highcharts';\nimport Bullet from 'highcharts/modules/bullet';\nBullet(Highcharts);\n\n@Component({\n  selector: 'app-rtoreport',\n  //moduleId: module.id,\n  templateUrl: './rtoreport.component.html',\n  styleUrls: ['./rtoreport.component.css']\n})\nexport class RtoreportComponent implements OnInit {\n\n  constructor(private rtuService:RtuService, private rtoReportService:RtoReportService) { }\n\n   getRtuList;\n   get_flat_chart_report;\n\n   years:string[] = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n  selectedYear:any = \"2020\";\n\n   monthList:any[] = [\n    {'monthname':'Jan', 'monthnumber':1},\n    {'monthname':'Feb', 'monthnumber':2},\n    {'monthname':'Mar', 'monthnumber':3},\n    {'monthname':'Apr', 'monthnumber':4},\n    {'monthname':'May', 'monthnumber':5},\n    {'monthname':'Jun', 'monthnumber':6},\n    {'monthname':'Jul', 'monthnumber':7},\n    {'monthname':'Aug', 'monthnumber':8},\n    {'monthname':'Sep', 'monthnumber':9},\n    {'monthname':'Oct', 'monthnumber':11},\n    {'monthname':'Nov', 'monthnumber':12},\n  ];\n\n\n  getRTUdata() {\n    this.rtuService.getRtuDetails().subscribe(response => {\n      this.getRtuList = response.response;\n    });\n  }\n\n  flat_ids;\n  selectedOption:any;\n  get_rtuReport(selectedOption){\n   this.flat_ids = selectedOption;\n  }\n\n  get_rtureport_for_current_month() {\n   let sendParam = {\n      'rtu_id':this.flat_ids\n   };\n\n  //  month view chart report\n  this.rtoReportService.getRTUCosumptionChartForMonth(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     this.bulletCharts(this.get_flat_chart_report);\n   });\n\n }\n\n\n get_rtureport_for_current_day() {\n   let sendParam = {\n      'rtu_id':this.flat_ids\n   };\n\n  //  day view chart\n  this.rtoReportService.getRTUCosumptionChartForDay(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     this.bulletCharts(this.get_flat_chart_report);\n   })\n }\n\n get_rtureport_for_current_year() {\n   let sendParam = {\n      'rtu_id':this.flat_ids\n   };\n\n  //  year view chart\n   this.rtoReportService.getRTUCosumptionChartForYear(sendParam).subscribe(response => {\n     this.get_flat_chart_report = response.response;\n     this.bulletCharts(this.get_flat_chart_report);\n   })\n }\n\n\n selectedView:any;\n get_rtu_report(){\n   let param = this.selectedView;\n   switch(param){\n      case 'year':\n         this.get_rtureport_for_current_year();\n      break;\n      case 'month':\n      this.get_rtureport_for_current_month();\n      break;\n      case 'day':\n         this.get_rtureport_for_current_day();\n      break;\n   }\n }\n\n\n\n  highcharts;\n  chartOptions;\n  bulletCharts(bulletdata) {\n    this.highcharts = Highcharts;\n    this.chartOptions = {   \n      chart: {\n        marginTop: 60,\n         inverted: true,\n        marginLeft: 60,\n        type: 'bullet'\n    },\n      legend: {\n        enabled: false\n    },\n    title: {\n        text: '2020 January'\n    },\n    xAxis: {\n        categories: ['Usage']\n    },\n     exporting: {\n        enabled: false\n    },\n    yAxis: {\n     gridLineWidth: 0,\n        plotBands: [{\n            from: 0,\n            to: 150,\n            color: '#91ddff'\n        }, {\n            from: 150,\n            to: 225,\n            color: '#91ddff'\n        }, {\n            from: 225,\n            to: 9e9,\n            color: '#91ddff'\n        }],\n        title: null\n    },\n     plotOptions: {\n        series: {\n            pointPadding: 0.25,\n            borderWidth: 0,\n            color: '#00344c',\n            targetOptions: {\n                width: '200%'\n            }\n        }\n    },\n    series: [{\n        data: [{\n            y: bulletdata.value,\n            target: 210\n        }]\n    }],\n    tooltip: {\n        pointFormat: '<b>{point.y}</b> (with target at {point.target})'\n    }\n    };\n       \n  }\n\n\n\n\n  ngOnInit() {\n   this.getRTUdata();\n  }\n\n}\n","module.exports = \".multiple_report {\\n    width: 46%;\\n    float: left;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #91d7f7;\\n    box-shadow: 3px 5px 2px -1px #b7b7b7;\\n    background-color: #ffffff;\\n    padding: 14px 8px;\\n    color: #004a6b;\\n    border-radius: 21px;\\n    font-size: 15px;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZW1hdHJpeC9yb2xlbWF0cml4LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLG9DQUFvQztJQUNwQyx5QkFBeUI7SUFDekIsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9yb2xlbWF0cml4L3JvbGVtYXRyaXguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdWx0aXBsZV9yZXBvcnQge1xuICAgIHdpZHRoOiA0NiU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTFkN2Y3O1xuICAgIGJveC1zaGFkb3c6IDNweCA1cHggMnB4IC0xcHggI2I3YjdiNztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIHBhZGRpbmc6IDE0cHggOHB4O1xuICAgIGNvbG9yOiAjMDA0YTZiO1xuICAgIGJvcmRlci1yYWRpdXM6IDIxcHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4uYm94LWJvZHkgaDYge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEzcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport {rolematrixService} from './rolematrix.service';\n\n\n@Component({\n  selector: 'app-rolematrix',\n  templateUrl: './rolematrix.component.html',\n  styleUrls: ['./rolematrix.component.css']\n})\nexport class RolematrixComponent implements OnInit {\n\n  constructor(private rolematrix:rolematrixService) { }\n\n  getRoleLists;\n  getRoleList(){\n    this.rolematrix.getUserRoleList().subscribe(res=>{\n     this.getRoleLists = res.roles_list;\n    });\n  }\n\n\n  ngOnInit() {\n    this.getRoleList();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, throwError} from 'rxjs';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { globalToken } from '../globaltoken';\n\n@Injectable({providedIn:'root'})\n\nexport class rolematrixService {\n\n    constructor(private http:HttpClient){}\n\n    urls = new globalToken().globalUrl;\n    httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n           'Authorization': this.urls.token\n        })\n    }\n\n\n    getUserRoleList():Observable<any> {\n        return this.http.get(this.urls.urlLink+'/get_all_roles', this.httpOptions)\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzZXR0aW5ncy9yb2xlYnl1c2Vycy9yb2xlYnl1c2Vycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {RolebyusersService} from './rolebyusers.service';\nimport { FormBuilder } from '@angular/forms';\nimport {BuildingService} from '../../metadata/building/building.service';\nimport {rolematrixService} from '../../rolematrix/rolematrix.service';\nimport {UsersService} from '../users/users.service';\n\n@Component({\n  selector: 'app-rolebyusers',\n  templateUrl: './rolebyusers.component.html',\n  styleUrls: ['./rolebyusers.component.css']\n})\nexport class RolebyusersComponent implements OnInit {\n\n  constructor( private fb: FormBuilder, private rolebyuserServi:RolebyusersService, private buildingServi:BuildingService,private rolematrixServi:rolematrixService, private UsersServi:UsersService) { }\n\n\n  rolebyuserList: any;\n  getRolebyUsersListFunction() {\n    this.rolebyuserServi.getRoleUsersList().subscribe(response => {\n      this.rolebyuserList = response.users_list;\n    });\n\n  };\n\n\n  buildingList;\n  getBuildingListFunction(){\n    this.buildingServi.getBuildingDetails().subscribe(res=>{\n      this.buildingList = res.building_details;\n    });\n  };\n\n  roleList;\n  getRoleListFunction(){\n    this.rolematrixServi.getUserRoleList().subscribe(res=>{\n      this.roleList = res.roles_list;\n    });\n  };\n\n  userList;\n  getUserListFunction(){\n    this.UsersServi.getUsersList().subscribe(res=>{\n      this.userList = res.users_list;\n    });\n  }\n\n\n\n  get_create_status;\n  assignRoletoUserForm = this.fb.group({\n    user_id: [''],\n    role: [''],\n    building_id: ['']\n  })\n\n\n    \n  assignRoleToUser() {\n    this.rolebyuserServi.assignRoletoUsersListApi(this.assignRoletoUserForm.value).subscribe(response => {\n      this.get_create_status = response.response;\n      if(response.status == 200){\n      this.getRolebyUsersListFunction();\n\n      }\n     \n    })\n  }\n\n\n\n  ngOnInit() {\n    this.getRolebyUsersListFunction();\n    this.getBuildingListFunction();\n    this.getRoleListFunction();\n    this.getUserListFunction();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolebyusersService {\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getRoleUsersList(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/get_role_by_user', this.httpOptions)\n  }\n\n  assignRoletoUsersListApi(assignedRole): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/assign_role', assignedRole, this.httpOptions)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class RolesettingModule { }\n","module.exports = \".multiple_report {\\n    width: 13.5%;\\n    float: left;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #d8d8d8;\\n    box-shadow: 3px 4px 2px -1px #b7b7b7;\\n    background-color: #ffffff;\\n    padding: 14px 8px;\\n    color: #232323;\\n    border-radius: 4px;\\n    font-size: 14px;\\n    height: 99px;\\n    cursor: pointer;\\n    transition: 0.6s;\\n}\\n\\n.multiple_report:hover {\\n    background-color: #ececec;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n\\n.master_icons {\\n    font-size: 28px;\\n    text-align: center;\\n}\\n\\n.master_icon_names {\\n    text-align: center;\\n    line-height: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZXNldHRpbmdzL3JvbGVzZXR0aW5ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixvQ0FBb0M7SUFDcEMseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZO0lBQ1osZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9yb2xlc2V0dGluZ3Mvcm9sZXNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXVsdGlwbGVfcmVwb3J0IHtcbiAgICB3aWR0aDogMTMuNSU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDhkOGQ4O1xuICAgIGJveC1zaGFkb3c6IDNweCA0cHggMnB4IC0xcHggI2I3YjdiNztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIHBhZGRpbmc6IDE0cHggOHB4O1xuICAgIGNvbG9yOiAjMjMyMzIzO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgaGVpZ2h0OiA5OXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAwLjZzO1xufVxuXG4ubXVsdGlwbGVfcmVwb3J0OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xufVxuXG4uYm94LWJvZHkgaDYge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEzcHg7XG59XG5cbi5tYXN0ZXJfaWNvbnMge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXN0ZXJfaWNvbl9uYW1lcyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAwO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rolesettings',\n  templateUrl: './rolesettings.component.html',\n  styleUrls: ['./rolesettings.component.css']\n})\nexport class RolesettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzZXR0aW5ncy91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from './users.service'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private userServi:UsersService) { }\n\n\n  userList: any;\n  getUsersListFunction() {\n    this.userServi.getUsersList().subscribe(response => {\n      this.userList = response.users_list;\n    });\n\n  }\n\n  ngOnInit() {\n    this.getUsersListFunction();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  };\n\n  getUsersList(): Observable<any> {\n    return this.http.get(this.urls.urlLink+'/get_all_users', this.httpOptions)\n  }\n}\n","module.exports = \".login_head {\\n    text-align: center;\\n    font-weight: 100;\\n    font-size: 30px;\\n    color: #7b7b7b;\\n    text-transform: lowercase;\\n}\\n\\ninput {\\n    outline: none;\\n    border: none;\\n}\\n\\n.login-box h3 {\\n    text-align: center;\\n    font-weight: 900;\\n    font-size: 34px;\\n    color: #3bc2ff;\\n}\\n\\ninput:focus {\\n    border-color: transparent !important;\\n}\\n\\ninput:focus::-webkit-input-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus:-moz-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus::-moz-placeholder {\\n    color: transparent;\\n}\\n\\ninput:focus:-ms-input-placeholder {\\n    color: transparent;\\n}\\n\\ninput::-webkit-input-placeholder {\\n    color: #adadad;\\n}\\n\\ninput:-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ninput::-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ninput:-ms-input-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea::-webkit-input-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea:-moz-placeholder {\\n    color: #adadad;\\n}\\n\\ntextarea::-moz-placeholder {\\n    color: #adadad;\\n}\\n\\n/*---------------------------------------------*/\\n\\nbutton {\\n    outline: none !important;\\n    border: none;\\n    background: transparent;\\n}\\n\\nbutton:hover {\\n    cursor: pointer;\\n}\\n\\niframe {\\n    border: none !important;\\n}\\n\\n.container-login100 {\\n    width: 100%;\\n    min-height: 100vh;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 15px;\\n    background: #ffffff;\\n}\\n\\n.wrap-login100 {\\n    background: #fff;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    padding: 23px 4px 19px 4px;\\n}\\n\\n/*------------------------------------------------------------------\\n[ Form ]*/\\n\\n.login100-form {\\n    width: 100%;\\n}\\n\\n.login100-form-title i {\\n    font-size: 60px;\\n}\\n\\n/*------------------------------------------------------------------\\n[ Input ]*/\\n\\n.wrap-input100 {\\n    width: 100%;\\n    position: relative;\\n    border-bottom: 2px solid #d2d2d2;\\n    margin-bottom: 37px;\\n}\\n\\n.input100 {\\n    font-family: Poppins-Regular;\\n    font-size: 15px;\\n    color: #555555;\\n    line-height: 1.2;\\n    display: block;\\n    width: 100%;\\n    height: 45px;\\n    background: transparent;\\n    padding: 0 5px;\\n}\\n\\n/*---------------------------------------------*/\\n\\n/*//////////////////////////////////////////////////////////////////\\n[ RESTYLE TAG ]*/\\n\\n/*---------------------------------------------*/\\n\\n.focus-input100 {\\n    position: absolute;\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    pointer-events: none;\\n}\\n\\n.focus-input100::before {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    bottom: -2px;\\n    left: 0;\\n    width: 0;\\n    height: 2px;\\n    transition: all 0.4s;\\n    background: #6a7dfe;\\n}\\n\\n.focus-input100::after {\\n    font-family: Poppins-Regular;\\n    font-size: 15px;\\n    color: #999999;\\n    line-height: 1.2;\\n    content: attr(data-placeholder);\\n    display: block;\\n    width: 100%;\\n    position: absolute;\\n    top: 16px;\\n    left: 0px;\\n    padding-left: 5px;\\n    transition: all 0.4s;\\n}\\n\\n.input100:focus+.focus-input100::after {\\n    top: -15px;\\n}\\n\\n.input100:focus+.focus-input100::before {\\n    width: 100%;\\n}\\n\\n.has-val.input100+.focus-input100::after {\\n    top: -15px;\\n}\\n\\n.has-val.input100+.focus-input100::before {\\n    width: 100%;\\n}\\n\\n.login-box {\\n    margin-top: 3em;\\n    border: 1px solid #e2e2e2;\\n    padding: 19px 14px 27px 14px;\\n    background-color: white;\\n}\\n\\n.login_section {\\n    padding: 0;\\n}\\n\\n.login_section .btn {\\n    background-color: #16b6ff;\\n    color: white;\\n    width: 100%;\\n}\\n\\n.p-t-115 {\\n    margin-top: 19px;\\n    font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsY0FBYztJQUNkLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBR0EsZ0RBQWdEOztBQUVoRDtJQUNJLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7SUFLakIsYUFBYTtJQUNiLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQiwwQkFBMEI7QUFDOUI7O0FBR0E7U0FDUzs7QUFFVDtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBR0E7VUFDVTs7QUFFVjtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZ0NBQWdDO0lBQ2hDLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLDRCQUE0QjtJQUM1QixlQUFlO0lBQ2YsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsY0FBYztBQUNsQjs7QUFHQSxnREFBZ0Q7O0FBR2hEO2dCQUNnQjs7QUFHaEIsZ0RBQWdEOztBQUVoRDtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztJQUNQLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixPQUFPO0lBQ1AsUUFBUTtJQUNSLFdBQVc7SUFJWCxvQkFBb0I7SUFDcEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksNEJBQTRCO0lBQzVCLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLCtCQUErQjtJQUMvQixjQUFjO0lBQ2QsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsU0FBUztJQUNULGlCQUFpQjtJQUlqQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1Qix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luX2hlYWQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXdlaWdodDogMTAwO1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICBjb2xvcjogIzdiN2I3YjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xufVxuXG5pbnB1dCB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbi5sb2dpbi1ib3ggaDMge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICBjb2xvcjogIzNiYzJmZjtcbn1cblxuaW5wdXQ6Zm9jdXMge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbn1cblxuaW5wdXQ6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuaW5wdXQ6Zm9jdXM6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG5pbnB1dDpmb2N1czo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG5pbnB1dDpmb2N1czotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYWRhZGFkO1xufVxuXG5pbnB1dDotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI2FkYWRhZDtcbn1cblxuaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYWRhZGFkO1xufVxuXG5pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYWRhZGFkO1xufVxuXG50ZXh0YXJlYTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNhZGFkYWQ7XG59XG5cbnRleHRhcmVhOi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjYWRhZGFkO1xufVxuXG50ZXh0YXJlYTo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNhZGFkYWQ7XG59XG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5idXR0b24ge1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5pZnJhbWUge1xuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uY29udGFpbmVyLWxvZ2luMTAwIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogLW1vei1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG59XG5cbi53cmFwLWxvZ2luMTAwIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwYWRkaW5nOiAyM3B4IDRweCAxOXB4IDRweDtcbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuWyBGb3JtIF0qL1xuXG4ubG9naW4xMDAtZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5sb2dpbjEwMC1mb3JtLXRpdGxlIGkge1xuICAgIGZvbnQtc2l6ZTogNjBweDtcbn1cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuWyBJbnB1dCBdKi9cblxuLndyYXAtaW5wdXQxMDAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2QyZDJkMjtcbiAgICBtYXJnaW4tYm90dG9tOiAzN3B4O1xufVxuXG4uaW5wdXQxMDAge1xuICAgIGZvbnQtZmFtaWx5OiBQb3BwaW5zLVJlZ3VsYXI7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGNvbG9yOiAjNTU1NTU1O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0NXB4O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmc6IDAgNXB4O1xufVxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXG4vKi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuWyBSRVNUWUxFIFRBRyBdKi9cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi5mb2N1cy1pbnB1dDEwMCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmZvY3VzLWlucHV0MTAwOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogLTJweDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMnB4O1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gICAgLW8tdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgICBiYWNrZ3JvdW5kOiAjNmE3ZGZlO1xufVxuXG4uZm9jdXMtaW5wdXQxMDA6OmFmdGVyIHtcbiAgICBmb250LWZhbWlseTogUG9wcGlucy1SZWd1bGFyO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBjb2xvcjogIzk5OTk5OTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wbGFjZWhvbGRlcik7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgMC40cztcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjRzO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjRzO1xufVxuXG4uaW5wdXQxMDA6Zm9jdXMrLmZvY3VzLWlucHV0MTAwOjphZnRlciB7XG4gICAgdG9wOiAtMTVweDtcbn1cblxuLmlucHV0MTAwOmZvY3VzKy5mb2N1cy1pbnB1dDEwMDo6YmVmb3JlIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmhhcy12YWwuaW5wdXQxMDArLmZvY3VzLWlucHV0MTAwOjphZnRlciB7XG4gICAgdG9wOiAtMTVweDtcbn1cblxuLmhhcy12YWwuaW5wdXQxMDArLmZvY3VzLWlucHV0MTAwOjpiZWZvcmUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubG9naW4tYm94IHtcbiAgICBtYXJnaW4tdG9wOiAzZW07XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2UyZTJlMjtcbiAgICBwYWRkaW5nOiAxOXB4IDE0cHggMjdweCAxNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubG9naW5fc2VjdGlvbiB7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLmxvZ2luX3NlY3Rpb24gLmJ0biB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE2YjZmZjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5wLXQtMTE1IHtcbiAgICBtYXJnaW4tdG9wOiAxOXB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SignupService } from './signup.service';\nimport { FormBuilder } from '@angular/forms';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private signupServi:SignupService, private fb: FormBuilder, public router: Router) { }\n\n  signup_token;\n  signupForm = this.fb.group({\n    email:[''],\n    password:['']\n  })\n\n  loader;\n  wrong_password;\n  signup(){\n  this.loader = true;\n   this.signupServi.signupintoserver(this.signupForm.value).subscribe(response => {\n    this.signup_token = response;\n    this.loader = false;\n    if(this.signup_token.token != 'Error Token'){ \n     if(this.signup_token.token != 'Incorrect Password'){\n      this.router.navigate(['']);\n    }\n    else {\n      this.wrong_password = true;\n      setTimeout(()=>{\n        this.wrong_password = false;\n      },3000)\n    }\n  }\n    else {\n      this.wrong_password = true;\n      setTimeout(()=>{\n        this.wrong_password = false;\n      },3000)\n    }\n   \n}); \n  };\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { globalToken } from '../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n  constructor(private http: HttpClient) {}\n   \n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n      headers: new HttpHeaders({ \n          'Content-Type': 'application/x-www-form-urlencoded'\n\n   })\n    };\n\n  \n  signupintoserver(createObj):Observable<any> {\n      let json_list= {\n        'email':createObj.email,\n        'password':createObj.password\n      };\n      return this.http.post(this.urls.urlLink+'/create_user',json_list )\n         \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhcmdldC1zZXR0aW5nL3RhcmdldC1ieS1idWlsZGluZy90YXJnZXQtYnktYnVpbGRpbmcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {TargetByBuildingService} from './target-by-building.service';\nimport {BuildingService} from '../../metadata/building/building.service';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-target-by-building',\n  templateUrl: './target-by-building.component.html',\n  styleUrls: ['./target-by-building.component.css']\n})\nexport class TargetByBuildingComponent implements OnInit {\n\n  constructor(private targetbyBuildingServi:TargetByBuildingService, private buildingServi:BuildingService, private fb:FormBuilder) { }\n \n  getBuildingList;\n  getBuildingListFunction(){\n    this.buildingServi.getBuildingDetails().subscribe((res:any)=>{\n      this.getBuildingList = res.building_details;\n    })\n  }\n\n\n  getlistofBuildingtarget:any;\n  getlistofBuildingTargetedFunction(){\n    this.targetbyBuildingServi.getlistofallBuildingTargetService().subscribe((res:any)=>{\n      this.getlistofBuildingtarget = res.target_list;\n    })\n  }\n\n  createTargetForm = this.fb.group({\n    building_id: [''],\n    target_value: ['']\n  })\n\n  setTargetResponse:any;\n  addedResponseMsg:any;\n  setTargetByBuilding(){\n    const json_obj = {\n      'building_id':this.createTargetForm.value.building_id,\n      'target_value':this.createTargetForm.value.target_value \n    };\n    this.targetbyBuildingServi.setTargetByBuildingService(json_obj).subscribe((res:any)=>{\n      this.setTargetResponse = res;\n      this.addedResponseMsg = true;\n      if(res.response == 'success'){\n        this.getlistofBuildingTargetedFunction();\n      }\n      setTimeout(() => {\n        this.addedResponseMsg = false;\n      },3000);\n    });\n  }\n\n\n \n  eachlistofBuildingtarget:any;\n  loopTable:any;\n  selectBuilding:any;\n  getTargetbuBuildingIdFunction(buildingId){\n    const jsonLst = {\n      'building_id':buildingId\n    };\n    this.loopTable =true; \n    if(buildingId){\n      this.targetbyBuildingServi.getTargetByBuildingidService(jsonLst).subscribe((res:any)=>{\n        this.eachlistofBuildingtarget = res.response;\n      })\n    }\n    else {\n      this.getlistofBuildingTargetedFunction();\n    }\n  \n  }\n\n  editTargetbyBuildingFunction(targetObj,flag){\n    const jsonObj = {\n      'building_id':targetObj.building_id,\n      'target_value':targetObj.target_value\n    }\n    this.targetbyBuildingServi.setTargetByBuildingService(jsonObj).subscribe((res:any)=>{\n      this.eachlistofBuildingtarget = res.response;\n      if(res.response == 'success'){\n        if(flag){\n          this.getlistofBuildingTargetedFunction();\n        }\n        else {\n        this.getTargetbuBuildingIdFunction(this.selectBuilding);\n        }\n        \n      }\n    })\n\n  }\n  \n  ngOnInit() {\n    this.getBuildingListFunction();\n    this.getlistofBuildingTargetedFunction();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TargetByBuildingService {\n\n  constructor(private http:HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  }\n\n  getTargetByBuildingidService(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_target_by_building_id',sendSelectedParam, this.httpOptions)\n    // year  rtu_id\n\n  }\n\n  setTargetByBuildingService(sendSelectedParam):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/block/set_target_by_building_id',sendSelectedParam, this.httpOptions)\n  }\n\n  getlistofallBuildingTargetService(){\n    return this.http.get(this.urls.urlLink+'/block/get_list_of_building_target', this.httpOptions)\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhcmdldC1zZXR0aW5nL3RhcmdldC1ieS1mbGF0L3RhcmdldC1ieS1mbGF0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {TargetByFlatService} from './target-by-flat.service';\nimport {FlatService} from '../../metadata/flat/flat.service';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-target-by-flat',\n  templateUrl: './target-by-flat.component.html',\n  styleUrls: ['./target-by-flat.component.css']\n})\nexport class TargetByFlatComponent implements OnInit {\n\n  constructor(private targetbyFlatServi:TargetByFlatService, private flatServi:FlatService, private fb:FormBuilder) { }\n\n  getFlatList;\n  getFlatListFunction(){\n    this.flatServi.getallFlatDetailss().subscribe((res:any)=>{\n      this.getFlatList = res.flat_details;\n    })\n  }\n\n\n  getlistofFlattarget:any;\n  getlistofFlatTargetedFunction(){\n    this.targetbyFlatServi.getlistofallFlatTargetService().subscribe((res:any)=>{\n      this.getlistofFlattarget = res.target_list;\n    })\n  }\n\n  createTargetForm = this.fb.group({\n    flat_id: [''],\n    target_value: ['']\n  })\n\n  setTargetResponse:any;\n  addedResponseMsg:any;\n  setTargetByFlat(){\n    const json_obj = {\n      'flat_id':this.createTargetForm.value.flat_id,\n      'target_value':this.createTargetForm.value.target_value \n    };\n    this.targetbyFlatServi.setTargetByFlatService(json_obj).subscribe((res:any)=>{\n      this.setTargetResponse = res;\n      this.addedResponseMsg = true;\n      if(res.response == 'success'){\n        this.getlistofFlatTargetedFunction();\n      }\n      setTimeout(() => {\n        this.addedResponseMsg = false;\n      },3000);\n    });\n  }\n\n\n \n  eachlistofBuildingtarget:any;\n  loopTable:any;\n  selectBuilding:any;\n  getTargetbuFlatIdFunction(FlatId){\n    const jsonLst = {\n      'flat_id':FlatId\n    };\n    this.loopTable =true; \n    if(FlatId){\n      this.targetbyFlatServi.getTargetByFlatidService(jsonLst).subscribe((res:any)=>{\n        this.eachlistofBuildingtarget = res.response;\n      })\n    }\n    else {\n      this.getlistofFlatTargetedFunction();\n    }\n  \n  }\n\n  editTargetbyBuildingFunction(targetObj,flag){\n    const jsonObj = {\n      'flat_id':targetObj.flat_id,\n      'target_value':targetObj.target_value\n    }\n    this.targetbyFlatServi.setTargetByFlatService(jsonObj).subscribe((res:any)=>{\n      this.eachlistofBuildingtarget = res.response;\n      if(res.response == 'success'){\n        if(flag){\n          this.getlistofFlatTargetedFunction();\n        }\n        else {\n        this.getTargetbuFlatIdFunction(this.selectBuilding);\n        }\n        \n      }\n    })\n\n  }\n  \n  ngOnInit() {\n    this.getFlatListFunction();\n    this.getlistofFlatTargetedFunction();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { globalToken } from '../../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TargetByFlatService {\n\n  constructor(private http:HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  }\n\n  getTargetByFlatidService(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_target_by_flat',sendSelectedParam, this.httpOptions)\n    // year  rtu_id\n\n  }\n\n  setTargetByFlatService(sendSelectedParam):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/block/set_target_by_flat',sendSelectedParam, this.httpOptions)\n  }\n\n  getlistofallFlatTargetService(){\n    return this.http.get(this.urls.urlLink+'/block/get_list_of_flat_target', this.httpOptions)\n  }\n\n\n\n}\n","module.exports = \".multiple_report {\\n    width: 13.5%;\\n    float: left;\\n    margin-left: 10px;\\n    margin-top: 12px;\\n    border: 1px solid #d8d8d8;\\n    box-shadow: 3px 4px 2px -1px #b7b7b7;\\n    background-color: #ffffff;\\n    padding: 14px 8px;\\n    color: #232323;\\n    border-radius: 4px;\\n    font-size: 14px;\\n    height: 99px;\\n    cursor: pointer;\\n    transition: 0.6s;\\n}\\n\\n.multiple_report:hover {\\n    background-color: #ececec;\\n}\\n\\n.box-body h6 {\\n    margin-top: 25px;\\n    margin-left: 13px;\\n}\\n\\n.master_icons {\\n    font-size: 28px;\\n    text-align: center;\\n}\\n\\n.master_icon_names {\\n    text-align: center;\\n    line-height: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFyZ2V0LXNldHRpbmcvdGFyZ2V0LXNldHRpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsb0NBQW9DO0lBQ3BDLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsWUFBWTtJQUNaLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvdGFyZ2V0LXNldHRpbmcvdGFyZ2V0LXNldHRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdWx0aXBsZV9yZXBvcnQge1xuICAgIHdpZHRoOiAxMy41JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOGQ4ZDg7XG4gICAgYm94LXNoYWRvdzogM3B4IDRweCAycHggLTFweCAjYjdiN2I3O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgcGFkZGluZzogMTRweCA4cHg7XG4gICAgY29sb3I6ICMyMzIzMjM7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBoZWlnaHQ6IDk5cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IDAuNnM7XG59XG5cbi5tdWx0aXBsZV9yZXBvcnQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG59XG5cbi5ib3gtYm9keSBoNiB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBtYXJnaW4tbGVmdDogMTNweDtcbn1cblxuLm1hc3Rlcl9pY29ucyB7XG4gICAgZm9udC1zaXplOiAyOHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1hc3Rlcl9pY29uX25hbWVzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-target-setting',\n  templateUrl: './target-setting.component.html',\n  styleUrls: ['./target-setting.component.css']\n})\nexport class TargetSettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhcmdldC90YXJnZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {TargetService} from './target.service';\nimport {BlockService} from '../metadata/block/block.service';\nimport {BuildingService} from '../metadata/building/building.service';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-target',\n  templateUrl: './target.component.html',\n  styleUrls: ['./target.component.css']\n})\nexport class TargetComponent implements OnInit {\n\n  constructor(private targetService:TargetService, private blockService:BlockService, private fb: FormBuilder, private buildingService:BuildingService) { }\n  \n  \n  loader1=true;\n\n  building_list;\n\n  getBuildingList(){\n    this.buildingService.getBuildingDetails().subscribe(res=>{\n      this.building_list = res.building_details;\n      this.selectBuilding = res.building_details[0]._id;\n      this.selected_building_id = res.building_details[0]._id;\n      this.getlistByBuildingid();\n      this.loader1=false;\n    });\n  };\n\n  selected_building_id;\n  selectBuilding:any;\n  select_building(building_id){\n    this.selected_building_id = building_id;\n    this.getlistByBuildingid();\n  };\n\n\n  blockList;\n  getBlockList(){\n    this.blockService.getBlockServiceDetails().subscribe(res=>{\n     this.blockList = res.block_details;\n    });\n  };\n\n  block_id;\n  select_block(selected_block_id){\n    this.block_id = selected_block_id;\n    this.getTargetListByBlockID();\n  };\n\n\n  createTargetForm = this.fb.group({\n    block_id: [''],\n    target: ['']\n  })\n\n\n  setTargetResponse;\n  setTargetByBLOCKID(){\n    const json_obj = {\n      'block_id':this.createTargetForm.value.block_id,\n      'target_value':this.createTargetForm.value.target \n    };\n    this.targetService.setTargetByBlockId(json_obj).subscribe(res=>{\n      this.setTargetResponse = res;\n    });\n  };\n \n  get_targetlist_for_table;\n  getTargetListByBlockID(){\n  \n    const json_obj={\n      'block_id':this.block_id\n    };\n    this.targetService.getTargetByBlock_id(json_obj).subscribe(res=>{\n      this.get_targetlist_for_table = res.response;\n      \n    });\n  };\n\n\n  getlistByBuildingid(){\n    const json_obj = {\n      'building_id':this.selected_building_id\n    };\n    this.targetService.getlistTargetByBuildingId(json_obj).subscribe(res=>{\n      this.get_targetlist_for_table = res.target_list;\n    });\n  }\n\n\n\n\n  ngOnInit() {\n    this.getBlockList();\n    this.getBuildingList();\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport { globalToken } from '../globaltoken';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TargetService {\n\n  constructor(private http:HttpClient) { }\n\n  urls = new globalToken().globalUrl;\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.urls.token\n    })\n  }\n\n  getTargetByBlock_id(sendSelectedParam): Observable<any> {\n    return this.http.post(this.urls.urlLink+'/block/get_target_by_block',sendSelectedParam, this.httpOptions)\n    // year  rtu_id\n\n  }\n\n  setTargetByBlockId(sendSelectedParam):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/block/set_target_by_block',sendSelectedParam, this.httpOptions)\n  }\n\n  getlistTargetByBuildingId(sendSelectedParam):Observable<any>{\n    return this.http.post(this.urls.urlLink+'/block/get_list_of_target_by_blockwise_from_building',sendSelectedParam, this.httpOptions)\n  }\n\n\n\n  \n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'http://122.166.156.230:4200/'\n  // baseUrl:'http://122.166.156.230:30002/'\n\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@src/app/app.module';\nimport { environment } from '@src/environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}